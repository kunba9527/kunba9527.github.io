[{"title":"VMware直接断电系统修复","url":"/2025/08/11/%E7%B3%BB%E7%BB%9F/Linux/Linux%E7%B3%BB%E7%BB%9F/VMware%E7%9B%B4%E6%8E%A5%E6%96%AD%E7%94%B5%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8D/","content":"太棒了你已经成功修复！下面是你本次 CentOS 9 虚拟机强制断电后无法启动的修复全过程总结，我已为你整理为清晰的操作步骤，方便以后查阅或应急使用。\n\n🧩 场景背景\n系统：CentOS 9\n环境：VMware 虚拟机\n事故原因：VMware 强制断电重启，导致系统文件系统损坏\n报错信息：启动停在 emergency mode，出现 xfs_inobt_lookup() returned error -117 等信息\n\n\n🧰 修复目标\n找出并修复因断电导致的文件系统错误\n成功挂载逻辑卷并恢复系统正常启动\n提取网站文件数据（用户核心关切）\n\n\n✅ 最终解决方案：完整修复流程第 1 步：挂载 CentOS 安装 ISO 镜像\n挂载 CentOS 9 或 CentOS 10 的安装 ISO\n启动虚拟机，在 VMware BIOS 中选择从 CD&#x2F;DVD 启动\n\n\n 重点！！！挂载的镜像需要与要修复的系统是同一个版本号，不能用centos10去修复centos9\n\n\n选择菜单项 Troubleshooting → Rescue a CentOS system→选择3进入到shell\n\n\n第 2 步：进入救援 shell\n当提示 Please press ENTER to get a shell，直接按回车或者输入ENTER进入 bash\n\n\n第 3 步：激活 LVM 逻辑卷组逻辑卷默认是不显示的所以如下的图不显示├─cs_192-root 253:0    0 163.9G  0 lvm  &#x2F;├─cs_192-swap 253:1    0   3.9G  0 lvm  [SWAP]└─cs_192-home 253:2    0  31.2G  0 lvm  &#x2F;home\n[root@127 ~]# lsblkNAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTSsr0              11:0    1  1024M  0 rom  nvme0n1         259:0    0   200G  0 disk ├─nvme0n1p1     259:1    0     1G  0 part /boot└─nvme0n1p2     259:2    0   199G  0 part   ├─cs_192-root 253:0    0 163.9G  0 lvm  /  ├─cs_192-swap 253:1    0   3.9G  0 lvm  [SWAP]  └─cs_192-home 253:2    0  31.2G  0 lvm  /home\n\n\n\n\n\n设备路径\n类型\n挂载点\n说明\n\n\n\n&#x2F;dev&#x2F;nvme0n1\n磁盘\n—\n整块 NVMe 磁盘\n\n\n├─ &#x2F;dev&#x2F;nvme0n1p1\n分区\n&#x2F;boot\nBoot 引导分区\n\n\n└─ &#x2F;dev&#x2F;nvme0n1p2\n分区\n—\nLVM 物理卷\n\n\n├─ cs_192-root\nLVM 逻辑卷\n&#x2F;\n根分区，最关键\n\n\n├─ cs_192-swap\nLVM 逻辑卷\n[SWAP]\n交换分区，正常\n\n\n└─ cs_192-home\nLVM 逻辑卷\n&#x2F;home\n家目录，已挂载\n\n\n注意本次修复主要目标是逻辑卷cs_192-root&#96;输入以下命令可以查看逻辑卷的具体名称用于之后的修复命令输入准确的逻辑卷名字参数\nlvm vgscan              # 扫描卷组lvm vgchange -ay        # 激活卷组lvscan                  # 显示所有逻辑卷（你最想看到这个）\n\n此时你将看到 /dev/mapper/ 下出现了你的 LVM 逻辑卷，例如：\n\n/dev/mapper/cs_192-root（根分区）\n/dev/mapper/cs_192-swap（交换分区）\n\n\n第 4 步：执行 XFS 文件系统修复只修复 逻辑卷（尤其是根分区），不要修复 swap！这里的&#x2F;dev&#x2F;mapper&#x2F;cs_192-root路径需要根据当前逻辑卷的具体路径来调整\nxfs_repair -v -L /dev/mapper/cs_192-root\n\n如果你还有 /home 分区之类，也可以类似修复。本人只是修复了root的逻辑卷然后直接reboot重启了，就好了。\n\n第 5 步：挂载系统分区并 chroot 进入系统（此步骤也可以省略直接reboot重启进入系统即可，记得修改固件开机启动项或者卸载cd镜像。）mount /dev/mapper/cs_192-root /mnt/sysimagemount /dev/nvme0n1p1 /mnt/sysimage/boot   # 如果你有单独的 boot 分区mount --bind /dev /mnt/sysimage/devmount --bind /proc /mnt/sysimage/procmount --bind /sys /mnt/sysimage/syschroot /mnt/sysimage\n\n进入后你可以运行 journalctl -xb、dnf reinstall、grub2-install 等进一步修复命令（如有需要）。\n\n第 6 步：重启系统退出 chroot 并重启：\nexitreboot\n\n确保在 BIOS 中把 ISO 镜像移除，虚拟机从磁盘正常启动。\n\n💡 经验总结建议\n\n\n建议项\n内容\n\n\n\n💾 定期快照\nVMware 虚拟机应在重大改动前或周期性创建快照\n\n\n🧯 关机规范\n避免强制关闭虚拟机，始终使用shutdown -h now 或图形化正常关机\n\n\n🔌 UPS 保护\n实体机断电风险高的环境建议加 UPS\n\n\n📂 数据备份\n重要网站文件应定期同步到外部磁盘或远程服务器（如 rsync&#x2F;Google One）\n\n\n\n如需我帮你导出网站数据、配置自动备份脚本，或再写一个“应急手册 PDF 文件”，也可以告诉我！[^1]centos下载:https://www.centos.org/download/参考：https://www.cnblogs.com/zisefeizhu/p/12575996.html\n"},{"title":"VMware虚拟机安装Windows11","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Windows11/","content":"\n\n已剪辑自: https://blog.csdn.net/songrongtao/article/details/125083936注意：需要新版VMware，目前小白的版本为 16.2.3\n\n新建虚拟机1、新建虚拟机\n点击菜单栏文件 → 新建虚拟机\n\n2、配置选择典型(推荐)\n\n3、选择稍后安装操作系统\n\n4、选择Windows 10 x64版本\n\n5、虚拟机自定义名称\n\n6、磁盘容量默认大小即可\n\n7、完成基本配置\n开启TPM1、打开刚开创建的虚拟机目录\n\n2、找到以.vmx为后缀的文件，如Windows11.vmx，使用任意文本编辑器打开\n\n3、在结尾处添加如下代码后，记得保存该文件\nmanagedvm.autoAddVTPM &#x3D; “software”\n\n1\n\n\n4、先点击窗口中的X关闭当前虚拟机窗口，然后重新打开，即可看到设备中已经自动添加了可信平台模块\n\n编辑虚拟机设置1、点击编辑虚拟机设置，进入虚拟机设置界面\n\n2、点击4GB，或者手动将虚拟机内存大小调整为4096MB\n\n3、点击CD&#x2F;DVD(SATA)，选择使用ISO映像文件，点击浏览，选择已经下载好的Windows11镜像\n如：zh-cn_windows_11_consumer_editions_updated_may_2022_x64_dvd_0fd9ef7c.iso\n\n4、点击右下角的确定按钮，完成配置\n安装Windows11操作系统1、点击开启此虚拟机\n\n2、当出现Press any key…时迅速按个回车键（任意按键均可）\n!!!注意：此步骤一定要快\n\n如果因为手速慢出现Time out等情况，重新启动当前客户机，再来一次，也要快！\n如果鼠标无法点击虚拟机重启按钮，使用Ctrl+Alt即可显示鼠标指针\n\n3、选择安装语言，默认即可\n\n4、点击现在安装\n\n5、点击我没有产品秘钥\n\n6、选择Windows 11 专业版\n\n7、接收协议\n\n8、选择自定义…\n\n9、选择安装盘符，默认即可\n\n10、等待安装流程走完，会自动重启，请耐心等待\n\n\n11、选择祖国\n\n12、选择输入法\n\n13、跳过第二种布局\n\n14、如果不想给设备取名，可以选择暂时跳过，系统会自动生成\n!!!注意：这里是设备名称，不是用户名\n\n15、选择针对个人使用进行设置\n\n16、点击登录选项\n\n17、选择脱机账户\n\n18、点击暂时跳过\n\n19、输入自定义的用户名\n\n20、可以不用输入密码，直接点击下一步\n\n21、根据个人需要选择性开关隐私设置，点击接受之后，耐心等待系统重启\n\n22、大功告成\n\n安准VMware ToolsVMware Tools可以实现主机与虚拟机之间的文件共享，同时可支持自由拖拽的功能，鼠标也可在虚拟机与主机之间自由移动（不用再按Ctrl+Alt），且虚拟机屏幕也可实现全屏化。\n1、点击VMware菜单栏 虚拟机 → 安装VMware Tools\n\n2、打开虚拟机中刚才安装Windows11操作系统中的文件资源管理器，双击DVD运行安装程序\n\n 3、弹出提示界面选择是\n\n4、一直下一步，即可安装成功\n\n5、安装完成后，会提示重启，此时重启系统即可。\n\n","categories":["网络","本地服务","Vmware"]},{"title":"Win 合集","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Win/Win%20%E5%90%88%E9%9B%86/","content":"\n系统Win install\n\n\n软件\n名称\n简介\n123云盘\n来源\n\n\n\n\nAcoustic  image\nWin镜像\n🧰\n原版软件\n\n\n\nRufus\n启动盘工具\n🧰\n\n\n\n\nVentoy2Disk\n启动盘工具\n🧰\n\n\n\n\nBootic\n引导修复工具\n🧰\n软件下载\n\n\n\nGhostExp\n系统备份恢复工具\n🧰\n芊芊精典\n\n\n\nCGI-plus\n系统备份恢复工具\n🧰\n芊芊精典\n\n\n\nEasyRCV3\n系统备份恢复工具\n🧰\n芊芊精典\n\n\nWin assemblyWin Acctive\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nHEU_KMS_Activator\nwin、office激活\n🧰\n芊芊精典\n\n\n\nAAct_Network\nwin、office激活\n🧰\n芊芊精典\n\n\n\nHEU_KMS_Activator\nwin、office激活\n🧰\n芊芊精典\n\n\n\nDigitalLicense\nwin永久激活\n🧰\n芊芊精典\n\n\n\nW10DigitalActivation\nwin永久激活\n🧰\n芊芊精典\n\n\n\nActivator\n生成激活密钥，永久激活win、office\n🧰\n乐软博客\n\n\nDecompression software\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nBandizip\n解压软件\n🧰\n芊芊精典\n\n\n\nWinRAR\n解压软件\n🧰\n芊芊精典\n\n\nDrive\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\n360  drive\n驱动\n🧰\n芊芊精典\n\n\n\nDrive  jingling\n驱动\n🧰\n芊芊精典\n\n\nDirectx repair\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nMSVBCRT.AIO\n运行库\n🔰\n芊芊精典\n\n\n\nVisualCppRedist\n运行库\n🔰\n芊芊精典\n\n\nMicrosoft common runtime\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nDirectX  Repair\nDirectX增强修复\n🔰\n芊芊精典\n\n\n\nDirectX  Repair.exe\nDirectX在线修复\n🔰\n芊芊精典\n\n\nWin optimization tools\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nUninstallToolPortable\n软件卸载工具\n🧰\n\n\n\n\nOptimizer\n系统优化工具\n🧰\n\n\n\n\nIObitUninstaler\n系统优化工具\n🧰\n芊芊精典\n\n\n\nCCleaner\n系统优化清理工具\n🧰\n芊芊精典\n\n\n\nDism++\n系统优化工具\n🧰\n\n\n\n\nXplorer2\n资源管理器\n🧰\n芊芊精典\n\n\n\nQ-Dir\n资源管理器\n🧰\n芊芊精典\n\n\n\nD_Safe_Manage\n文件安全扫描工具\n🧰\nD盾\n\n\n\nDTUltra\n虚拟光盘工具\n🧰\n芊芊精典\n\n\n\ntuba\n图吧工具箱\n🧰\n官网\n\n\n\nSpaceSniffer\n磁盘管理工具\n🧰\nTECHSPOT\n\n\n\nTreeSizeFree\n树状资源管理器\n🧰\nTECHSPOT\n\n\n软件Professional software\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nRosetta  Stone\n语言学习软件\n🧰\n合集\n\n\n\nPhotoshop\n图片处理软件\n🧰\n芊芊精典\n\n\n\nCAD\n绘图软件\n🧰\n芊芊精典\n\n\nOffice software\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\n[Office](localexplorer:F:\\Shortcut\\Software\\Office software\\office)\nOffice套装\n🧰\n\n\n\n\nOffice  Tool Plus\noffice安装工具\n🧰\n\n\n\n\nXmind\n思维导图\n🧰\n芊芊精典\n\n\n\nMindMaster\n思维导图\n🧰\n芊芊精典\n\n\n\nAliIM\n淘宝\n🧰\n芊芊精典\n\n\n\nAliWorkbench\n淘宝\n🧰\n芊芊精典\n\n\n\nEdrawMind_Pro\n思维导图\n🧰\n芊芊精典\n\n\nEntertainment software\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nListen1\n免费听歌软件\n🧰\n\n\n\n\nlx-music\n免费听歌软件\n🧰\n\n\n\n\nfoobar2000\n音乐播放软件\n🧰\n芊芊精典\n\n\n\nPotPlayerMini\n视频播放软件\n🧰\n\n\n\nCommunication software\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nWeChat\n微信\n🧰\n芊芊精典\n\n\n\nQQ\nQQ\n🧰\n芊芊精典\n\n\n\nTelegram\ntelegram\n🧰\n官网\n\n\n\nPotato\npotato\n🧰\n官网\n\n\nBrowser software\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nGoogle  Chrome Dev\n谷歌浏览器开发者版本\n🧰\n官网\n\n\n\nMicrosoft  Edge Dev\nEdge浏览器开发者版本\n🧰\n官网\n\n\n\nStart  Tor Browser\n洋葱匿名浏览器\n🧰\n\n\n\n\nFirefox\n火狐浏览器\n🧰\n\n\n\n\nBrowser  plug-in\n浏览器插件合集\n🧰\n合集\n\n\n\n\n\n插件名称\n功能\n\n\n\nlisten1\n听歌\n\n\nAdBlock  — 最佳广告拦截工具\n去除广告\n\n\nDark  Reader\n网页明暗度调节\n\n\nTampermonkey  BETA\n各种脚本\n\n\nOneNote  Web Clipper\nOnenote浏览器剪切插件\n\n\nSeparate  Window\n视频窗口提取\n\n\nIE  Tab\n通过浏览器查看管理本地资源\n\n\nLocalExplorer\n通过浏览器查看管理本地资源\n\n\nIDM  Integration Module\nIDM浏览器嗅探下载插件\n\n\nFatkun图片批量下载\n网站图片下载\n\n\n图片助手(ImageAssistant)  批量图片下载器\n网站图片下载\n\n\nGooreplacer\n搜索引擎检索结果筛查优化\n\n\niGG谷歌学术助手\n无需翻墙的谷歌访问助手\n\n\nSetupVPN  - Lifetime Free VPN\nVPN插件\n\n\nAstar  VPN\nVPN插件\n\n\nXPath  Helper\n网页元素定位\n\n\nXPather\n网页元素定位\n\n\n工具多媒体处理工具\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\n2345Pic\n看图工具\n🧰\n芊芊精典\n\n\n\nAction_Portable\n录屏工具\n🧰\n芊芊精典\n\n\n\nBandicamPortable\n录屏工具\n🧰\n芊芊精典\n\n\n\nObs64\n录屏工具\n🧰\nTECHSPOT\n\n\n\nImagine\n图片处理工具\n🧰\n芊芊精典\n\n\n\nResize\n图片处理工具\n🧰\n芊芊精典\n\n\n\nEPF\n图片处理工具\n🧰\n芊芊精典\n\n\n\nLuminarAI\n图片处理工具\n🧰\n无痕哥\n\n\n\nQuick  Any2Ico v3.1\n图标提取\n🧰\n芊芊精典\n\n\n\nIconfont\n图标提取\n🧰\n吾爱破解\n\n\n文本处理工具\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nFangfang\noffice效率插件\n🧰\n无痕哥\n\n\n\nOneMoreAddIn\nOneNote效率插件\n🧰\n\n\n\n\nCalibre\n电子书管理工具\n🧰\n\n\n\n\nWordPress\nwordpress文章更新工具\n🧰\n资源分享网\n\n\n\nHost  文件编辑器\nHost文件编辑\n🧰\n果核剥壳\n\n\n\nHFE\nHost文件编辑\n🧰\n芊芊精典\n\n\nhostt.bak\nhostt.bak\nhost备份\n🧰\n\n\n\n下载工具\n\n\n名称\n\n简介\n123云盘\n来源\n\n\n\n\nIDM\n下载工具\n🧰\n芊芊精典\n\n\n\nThunder\n下载工具\n🧰\n芊芊精典\n\n\n\nThunder7\n下载工具\n🧰\n果核剥壳\n\n\n\nBitComet\n下载工具\n🧰\n芊芊精典\n\n\n\nXDown\n下载工具\n🧰\n芊芊精典\n\n\n\nMotrix\n下载工具\n🧰\n芊芊精典\n\n\n\nPandownload\n下载工具\n🧰\n芊芊精典\n\n\n\nFileu\n下载工具\n🧰\n芊芊精典\n\n\n小工具\n\n\nDTUltra&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;DAEMON_Tools_Ultra.7z)\n虚拟光盘工具\n🧰\n芊芊精典\n\n\n\nLucy&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;Lucy.7z)\n快捷键整理小工具\n🧰\n果核剥壳\n\n\nPowerToys&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;PowerToysSetup.exe)\nMicrosoft效率工具\n🧰\n\n\n\nFences&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;Stardock-Fences.rar)\n桌面图标整理软件\n🧰\n果核剥壳\n\n\nIrisPortable&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;Iris Pro.zip)\n自动调节桌面亮度\n🧰\n芊芊精典\n\n\nTranslucentTB&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;TranslucentTB.exe)\n透明化任务栏\n🧰\n\n\n\nIObitUnlocker&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;IObitUnlocker.rar)\n文件进程占用解锁工具\n🧰\n芊芊精典\n\n\nNotepad&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;NoteMap.V0.8.zip)\n文本编辑软件\n🧰\nTECHSPOT\n\n\nQtScrcpy&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;Tools&#x2F;Productivity&#x2F;Tools&#x2F;QtScrcpy-win-x64-v2.1.2.zip)\n安卓手机远程多开工具\n🧰\n\n\n\nlocalsend&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;System&#x2F;Win optimization tools&#x2F;LocalSend-1.8.0-windows.zip)\nAirDrop 的开源跨平台替代方案\n🧰\n\n\n\nFiddler&#x2F;OneDrive - MSFT&#x2F;电脑&#x2F;Win&#x2F;Tools&#x2F;Productivity&#x2F;Tools&#x2F;fiddler.rar)\n抓包工具\n🧰\n\n\n\nQtScrcpy\n安卓手机群控\n🧰\n\n\n\n\n\n\nGitHubDesktop\nGithub桌面客户端\n🧰\n\n\n\n\nGitKraken\nGithub版本工具\n🧰\n\n\n\nPicGo\n图床工具\n🧰\n\n\n\ntrilium\n笔记工具\n🧰\n\n\n\n","categories":["系统","Win"]},{"title":"Rosetta Stone c盘安装","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Win/%E8%BD%AF%E4%BB%B6/%E4%B8%93%E4%B8%9A%E8%BD%AF%E4%BB%B6/Rosetta%20Stone%20c%E7%9B%98%E5%AE%89%E8%A3%85/","content":"\n\nRosetta Stone默认安装在C盘的，很不好，故找到次解决方案： 总体就是移动文件夹，配置默认文件路径，并把文件移至相应路径，再重启更新即可，如若总是重启更新，请断网重启。\n\n安装\n运行 Setup.exe 开始安装 Rosetta Stone 5.0.13 安装即将完成时 取消勾选“运行 Rosetta Stone Language Training(R)” 完成安装\n\n替换文件至安装目录下激活软件\n解压缩 Crack.rar，复制 LocalApp.swf 和 META-INF 到以下目录并替换 Windows 7 x86——C:Program FilesRosetta StoneRosetta Stone Language Training Windows 7 x64——C:Program Files (x86)Rosetta StoneRosetta Stone Language Training\n\n移动安装包至想要安装的目录（目录路径不能有中文）\n将C:Program FilesRosetta Stone剪切到安装目录E:ruanjianzhuanyeRosetta Stone\n\n修改配置文件\n打开E:ruanjianzhuanyeRosetta StoneRosetta StoneRosetta Stone Language TrainingsupportconfiginstallerDefaults.xml 把相关路径修改成如下这样\n\n&lt;?xml version=&quot;1.0&quot;encoding=&quot;UTF-8&quot;?&gt;   &lt;installerDefaultspathToAllUsers=&quot;E:ruanjianzhuanyeRosetta StoneProgramDataRosetta StoneLanguageTraining&quot;&gt;&lt;databaseConnector&gt;&lt;localDatabasePath&gt;E:ruanjianzhuanyeRosetta StoneProgramDataRosetta StoneLanguage Trainingtracking.db3&lt;/localDatabasePath&gt;&lt;/databaseConnector&gt;&lt;defaultLocales&gt;&lt;installerDefaultLocale&gt;zhCN&lt;/installerDefaultLocale&gt;&lt;/defaultLocales&gt;&lt;directories&gt;&lt;languageDataBasePathconfirmed=&quot;true&quot;&gt;E:ruanjianzhuanyeRosetta StoneProgramDataRosetta StoneLanguageTrainingContent&lt;/languageDataBasePath&gt;&lt;backupsPath&gt;E:ruanjianzhuanyeRosetta StoneProgramDataRosetta Stone BackupsLanguageTraining&lt;/backupsPath&gt;&lt;/directories&gt;&lt;/installerDefaults&gt;\n\n \n语言包配置\n在安装目录E:ruanjianzhuanyeRosetta Stone下新建文件夹ProgramData。把C:ProgramDataRosetta Stone和C:ProgramDataRosetta Stone Backups剪切到E:ruanjianzhuanyeRosetta StoneProgramData目录下 在E:ruanjianzhuanyeRosetta StoneProgramDataRosetta StoneLanguage Training下新建updates新建文件夹，把语言包复制到该updates文件夹下\n\n重启软件，更新（需要很一会儿）\n\n填写信息注册\n\n错误代码：\n\n\nXP401 需断网重试\n\n","categories":["系统","Win","软件","专业软件"]},{"title":"Win系统版本简介","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Win/System/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/Win%E7%B3%BB%E7%BB%9F%E7%89%88%E6%9C%AC%E7%AE%80%E4%BB%8B/","content":"\n系统版本简介win10 business edition\nwin10 business edition为批量版（也称VOL版）指市面上的win10商业版集合。 business editions版本包含Education(教育版)、Enterprise (企业版)、Professional(专业版)\n\nwin10 consumer edition\nconsumer edition则为零售版，指的是市面上的win10普通版本集合。 business editions版本包含Education(教育版)、Enterprise (企业版)、Professional(专业版)\n\n扩展资料business edition和consumer edition均是win10的版本集合产品，而win10分有七个版本，具体如下：\n家庭版(Home)：\n\n供家庭用户使用，无法加入Active Directory和Azure AD，不允许远程链接。\n\n专业版(Professional)：\n\n供小型企业使用 在家庭版基础上增加了域账号加入、bitlocker、企业商店等功能。\n\n企业版(Enterprise)：\n\n供中大型企业使用 在专业版基础上增加了DirectAccess，AppLocker等高级企业功能。\n\n教育版(Education)：\n\n供学校使用 (学校职员, 管理人员, 老师和学生) 其功能基本和企业版的一样。\n\n移动版(Mobile)：\n\n面向尺寸较小、配置触控屏的移动设备，例如智能手机和平板电脑，集成有与Windows 10家庭版相同的通用Windows应用和针对触控操作优化的Office\n\n移动企业版(Mobile Enterprise)：\n\n以移动版为基础的企业版本。该版本可以批量允许客户使用，添置企业管理更新功能，以及安全补丁软件的检查与更新功能。\n\n专业工作站版(Windows 10Pro for Workstations)：\n\n该版本重点优化了多核处理以及大文件处理的功能，提供6TB大内存、ReFS文件系统、高速文件共享和工作站模式。\n\n22 1# Copyright (c) 1993-1999 Microsoft Corp.2# This is a sample HOSTS file used by Microsoft TCP&#x2F;IP for Windows.3# This file contains the mappings of IP addresses to host names. Each4# entry should be kept on an individual line. The IP address should5# be placed in the first column followed by the corresponding host name.6# The IP address and the host name should be separated by at least one7# space.8# Additionally, comments (such as these) may be inserted on individual9# lines or following the machine name denoted by a ‘#’ symbol.10# For example:11#      102.54.94.97     rhino.acme.com          # source server12#       38.25.63.10     x.acme.com              # x client host13127.0.0.1       localhost14192.168.11.11  www.xiaoming.com15192.168.11.11  xiaoming.com16192.168.11.11  jia.xiaoming.com17192.168.11.11  yi.xiaoming.com18192.168.11.11  siusiu.xiaoming.com19192.168.11.11  www.wudiyouxi.com20192.168.11.11  wudiyouxi.com21192.168.11.11  ding.xiaoming.com22192.168.11.11  alist.xiaoming.comw\n\n面向小型低价设备，主要针对物联网设备t\n\n","categories":["系统","Win","System","系统安装"]},{"title":"Win11安装","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Win/System/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/Win11%E5%AE%89%E8%A3%85/","content":"\nwin11安装方法一：利用PE安装win11系统(可绕过TPM2.0和安全启动检测，无需主板支持tpm2.0)\n准备工作：\n首先下载PE系统工具，然后制作U盘启动，通过U盘进入PE系统，然后接下来操作。\n下载win11镜像\n注意事项：\n安装win11系统的电脑安装时注意引导模式和分区对应，legacy+mbr或uefi+gpt，否则安装后可能引导不了。\n制作完PE系统后通过快捷方式选择U盘进入PE，运行桌面的”小兵系统安装”工具，然后首先点击浏览，在U盘找到我们下载好的win11 iso镜像文件，以c盘为系统盘，把win11系统安装在c盘中，点击确定，如图所示： \n然后选择重装系统。进入安装界面后，第一步：选择在U盘找到我们下载好的win11 iso镜像文件，第二步：选择系统安装盘符，一般默认是C盘，但注意的是双硬盘的情况一定要选择正确的盘符，第三步：执行一键安装即可开始安装win11系统，如图所示：\n\n\n点击一键安装后.开始挂载iso镜像，挂载后选择install.wim文件，然后确定等待释放windows11安装程序，电脑便会自动重启电脑。\n\n\n拔掉U盘电脑重启后。系统会自动完成后续的程序安装，直到看到桌面，系统就彻底安装成功了。这种方法可以直接跳过TPM的检测而达到安装WIN11系统的目地，但建议配置太低的电脑不要安装win11。\n\nwin11安装方法二：采用软碟通制作u盘启动盘安装win11(可绕过TPM2.0和安全启动检测)\n软碟通做win11 u盘启动准备工作：\n1、8G左右U盘一个(注意备份数据)\n2、软碟通UltraISO工具\n2、win11系统镜像\n软碟通做win11 u盘启动方法操作步骤：\n1、插入你的U盘，这里显示的是H：盘。\n\n2、打开UltraISO后，选择主菜单中的“文件”——“打开”，打开刚才下载好的ISO文件（例如：win11 22000.65.iso）。\n\n3、然后选择“启动”——“写入硬盘映像”。\n\n4、在弹出的“写入硬盘映像”对话框中，请确保“硬盘驱动器”选中的是你的U盘。\n\n5、确认无误后点击“写入”按钮，弹出以下提示对话框，选择“是”，开始将系统写入U盘。\n\n6、等待刻录，大概写入个5、6分钟就完成了，显示“刻录成功”。\n\n7、刻录完成后设置U盘为第一启动项即可安装。\n制作u盘启动盘后，设置u盘启动开始安装win11,我们在在进行镜像安装时，Win11会提示“该电脑无法运行Win11”，该提示主要是由于微软对win11有最低配置要求,需要开启tpm2.0和安全启动才能通过检测，可以按以下方法进行操作安装即可。\n1，设置u盘启动开始安装win11，通常你可以按F12、F2、F11、ESC、F9键来调出启动项选择界面，然后选择USB进入Win11安装界面,如下图所示；\n\n\n2，选择我没有产品密钥，如下图所示；\n\n3，如果你的电脑没有开启tpm2.0和开启安全启动，可能提示“这台电脑无法运行windows11”,如下图所示；\n\n4，在这个界面按Shift+F10，打开命令行界面，输入regedit打开注册表，然后定位到HKEY_LOCAL_MACHINESYSTEMSetup，接着创建一个名为“LabConfig”的项如下图所示；\n\n\n5，接着在“LabConfig”下创建两个DWORD值：键为“BypassTPMCheck”，值为“00000001”，键为“BypassSecureBootCheck”，值为“00000001”，如下图所示；\n\n5，接着我们返回上一步，再点一步就不会提示该电脑无法安装windows11了，如下图所示；\n\n\n大家就可以正常安装Win11,接下来我们等待安装win11即可。\nwin11安装方法三：利用win10系统直接升级win11(需要开启TPM2.0和安全启动检测)\n在win10系统下载win11镜像后，我们通过虚拟光驱或解压iso，运行setup.exe进行升级win11,我们在在进行镜像安装时，Win11会提示“该电脑无法运行Win11”，该提示主要是由于微软对win11有最低配置要求,需要开启tpm2.0和安全启动才能通过检测，可以按以下方法进行操作安装即可。\n1，通过虚拟光驱或解压iso，运行setup.exe进行升级win11，如下图所示；\n\n2，我们点击下一步准备升级win11，如下图所示；\n\n3，如果你的电脑没有开启tpm2.0和开启安全启动，可能提示“这台电脑无法运行windows11”,如果开启了tpm2.0后点击接受协议升级win11,如下图所示；\n\n4，开始升级，这可能需要几分钟时间，下图所示；\n\n5，我们点击”安装”按钮准备升级win11，如下图所示；\n\n6，升级过程中会重启几次系统，我们耐心等待即可，如下图所示；\n\n6，正在升级win11，等待完成即可看到桌面，如下图所示；\n\n","categories":["系统","Win","System","系统安装"]},{"title":"Office非系统盘安装","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Win/%E8%BD%AF%E4%BB%B6/%E5%8A%9E%E5%85%AC%E8%BD%AF%E4%BB%B6/Office%E9%9D%9E%E7%B3%BB%E7%BB%9F%E7%9B%98%E5%AE%89%E8%A3%85/","content":"\n修改注册表首先按下“Ctrl+r”输入“regedit”打开注册表。依次展开*HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersion*。\n\n进入目录后，将以下三项注册表进行备份导出\n\n把上面这三项注册表的值改为office安装路径.\n例如“D:Microsoft Office”就将这三项注册表的值改为此路径。\n\n通过Office_Tool安装office版本\n安装设置的话 体系结构,自己操作系统是多少位选多少位 通道:可选可不选 安装方式在线安装就好 安装模块默认就好 语言设置,默认是匹配系统操作语言,默认就好 可选设置,默认就好, 然后点击开始安装 \n\n修改注册表\n当系统提示安装完成之后,我们就要把注册表给改回来 如果你上一步把注册表关闭了就再来一次上面的打开注册表的操作 并定位至 HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersion 然后将你修改的那三个键值对给修改回来(就是下面这三个) ProgramFilesDir\n\nC:Program FilesProgramFilesDir (x86)C:Program Files (x86)ProgramW6432DirC:Program Files\n\n修改快捷键目标位置\n将注册表改回来了还没完,当你点击比如说execl表格的快捷键的时候你会发下它会报错 (因为我已经将路径改回来了,所以这里就不贴报错的图了) \n它会告诉你说快捷方式存在问题 目标框中指定名称路径无效,是否删除该快捷方式我们点击否 ,然后选中该快捷方式并右键单击然后在弹出来的菜单栏的最下面点击属性那一栏,他会弹出一个属性界面如下图我弹出来了Excel的属性界面\n我们再点击快捷方式,如下图可以看到,我的快捷方式的目标是 “D:Program FilesMicrosoft OfficerootOffice16EXCEL.EXE”这是因为我的Execl就是安装在那个路径上如下图 \n我这是改好了的,所以,你就需要将你的快捷方式的指定目标改成你软件所在的路径 也就是你刚刚注册表所修改的值再加上Microsoft OfficerootOffice16 \n比如说你上面的步骤是将注册表的值修改成了 D:LinDdaWangWuSuoBuNeng 那么你软件的安装路径就是 D:LinDdaWangWuSuoBuNengMicrosoft OfficerootOffice16 具体看你上面将注册表的值改成什么了 然后快捷方式的目标就是你软件所在文件夹的路径加你软件的名字比如下图 改完之后,重启电脑系统。就可以使用Office全家桶了。\n\n","categories":["系统","Win","软件","办公软件"]},{"title":"OneNote文字样式","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Win/%E8%BD%AF%E4%BB%B6/%E5%8A%9E%E5%85%AC%E8%BD%AF%E4%BB%B6/OneNote%E6%96%87%E5%AD%97%E6%A0%B7%E5%BC%8F/","content":"\n标题1：\n\n\n字体大小：小三号（约16磅）\n段前：12磅\n段后：6磅\n行距：24磅\n\n\n标题2：\n\n\n字体大小：四号（约14磅）\n段前：12磅\n段后：6磅\n行距：21磅\n\n\n标题3：\n\n\n字体大小：小四号（约12磅）\n段前：6磅\n段后：3磅\n行距：18磅\n\n\n标题4：\n\n\n字体大小：小四号（约12磅）\n段前：6磅\n段后：3磅\n行距：18磅\n\n\n标题5：\n\n\n字体大小：小四号（约12磅）\n段前：6磅\n段后：3磅\n行距：18磅\n\n\n标题6：\n\n\n字体大小：小四号（约12磅）\n段前：6磅\n段后：3磅\n行距：18磅\n\n\n","categories":["系统","Win","软件","办公软件"]},{"title":"Vmware安装MacOs","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/Vmware%E5%AE%89%E8%A3%85MacOs/","content":"\n\n 昨天给大家分享了VMware的安装教程，今天就给大家分享使用VMware安装MacOS系统的详细教程。\n大部分Windows用户都想体验一下简洁易用的MacOS系统，但是如果Windows+MacOS双系统UEFI引导，安装黑苹果，如果没有好用的EFI，安装非常花费时间，那么可以使用VMware体验一把MacOS系统，当让也可以进行办公娱乐等等，只不过稍微有点卡，没有固态双系统体验那么好。\nOK！开始干！\n\n一、准备工作因为VMware默认是不支持安装MacOS的，因此我们需要使用解锁工具解锁VMware。\n安装环境：\n宿主机Windows 10 20H2 + 虚拟机VMware15.5（小e的安装环境）Windows和VMware版本可以和小e不同，VMware安装教程小e已经分享过，若没有安装VMware，见VMware安装教程！\n\n所需工具：\nVMware解锁工具MK-Unlocker 或 Unlocker_v3.0.3 + MacOS Mojave 10.14懒人包\n\n资源下载：全部资源：\n\n   解锁工具（MK-Unlocker + Unlocker_v3.0.3）   MacOS镜像懒人包（MacOS Mojave 10.14.6懒人包 + MacOS Catalina10.15.5懒人包 ）   优化卡顿工具（beamoff）链接：https://pan.baidu.com/s/1UYK4e--BA8512pSD5Xl4qA  提取码：zqrr \n\n部分资源：\n\n解锁工具（MK-Unlocker + Unlocker_v3.0.3）\n链接：https://pan.baidu.com/s/1lXzyW2YRui_OJzVGtOWPJA 提取码：txgp \nMacOS****镜像懒人包（MacOS Mojave 10.14.6懒人包 + MacOS Catalina10.15.5懒人包 ）\n链接：https://pan.baidu.com/s/1tp-1DIRssL9WMOTmGyDQRw 提取码：9e60 \n优化卡顿工具（beamoff）\n链接：https://pan.baidu.com/s/1ceag0nXeBgv-OT_CkriXaQ 提取码：y7vh \n\n二、安装教程首先安装VMware，VMware的安装小e在此就不赘述了，见之前VMware安装教程！\n注意：\n\n安装完虚拟机后记得要在BIOS中开启intel VT（虚拟化），否则安装过程中会出错，提示“Intel VT-x处于禁用状态”。\n默认的VMware不支持识别和安装MacOS镜像，需要解锁，解锁前记得关闭杀毒软件以及windefender。\n关闭虚拟机，解压解锁工具MK-Unlocker，以管理员身份运行[win-install.cmd]。\n运行后会弹出dos命令窗口，等待运行完成，运行完成后会自动关闭窗口。\n注：MK-Unlocker文件路径不能出现中文，否则会出现Can’t load frozen modules的错误。\n\n\n\n解锁后打开VMware15.5虚拟机，创建一个新的虚拟机。\n\n\n\n勾选[自定义（高级）]，下一步。\n\n\n\n硬件兼容性选择[Workstation 15.x]，下一步。\n\n\n\n如果你下载小e打包的MacOS懒人包，那么下载的10.14的懒人包后缀为.iso，需要把.iso后缀改为.cdr，懒人包都是用原版镜像制作的。（也可以在网上自行找.cdr懒人包，那么忽略此步骤）\n\n\n重命名，直接把iso后缀改为cdr即可。\n\n\n\n点击[浏览]，选择后缀为.cdr的懒人包，注意把右下角选择[所有文件]，选中后[打开]。\n\n\n\n操作系统选择[Apple Mac OS X]，版本选择[macOS 10.14]，此为Vmware虚拟机解锁后的效果，如果前面没有解锁或者解锁失败，此处是没有[Apple Mac OS X]选择项的。\n\n\n\n修改MacOS的安装位置，建议新建一个专门的文件夹，路径中不要出现中文。\n\n\n\n由于小e笔记本硬件为1个处理器，总共4核，因此给虚拟机设置1处理器和2个核的配置，大家按照自己的电脑实际配置自行设置。（宿主机处理器核配置可以在设备管理器中都能看到）\n\n\n\n小e宿主机内存大小为16G，给虚拟机设置4G左右内存大小，按照自己电脑配置自行设置。（内存大小可以直接在任务管理器中查看）\n\n\n\n网络连接选择[使用网络地址转换]。\n\n\n\n使用默认推荐设置[LSI Logic]。\n\n\n\n硬盘类型选择推荐设置[SATA]。\n\n\n\n在虚拟机中安装系统需要创建虚拟磁盘用来安装操作系统，勾选[创建新虚拟磁盘]。\n\n\n\n虚拟磁盘大小自行设置，小e这里设置100G大小，其他默认。\n\n\n\n配置完成，点击[完成]，配置好后先不要启动MacOS系统。\n\n\n\n找到MacOS的安装位置（上面步骤中已自行设置），使用记事本打开后缀为.vmx的[macOS 10.14.vmx]的文件。\n\n\n\n在最后添加以下代码smc.version &#x3D; 0保存退出。\n\n\n\n这时候[开启虚拟机]，启动MacOS系统。\n\n\n\n启动MacOS界面。\n\n\n\n选择语言[简体中文]。\n\n\n\n点击[磁盘工具]，如果没有此界面，可以在[实用工具]下找到。\n\n\n\n选择刚才新建的虚拟磁盘，因为MacOS和Windows磁盘大小的计算方式不一样，所以刚才设置的100G大小的虚拟磁盘在Mac中显示并不是100G，但是相差不大，选择近似的即可。\n虚拟磁盘还好，不会对宿主机本地磁盘有影响，但是在黑苹果双系统安装中一定要仔细分辨出哪个是Windows的安装分区，哪个是MacOS安装分区，否则一旦抹掉，数据就会全部丢失，具体小e在双系统安装黑苹果教程中再谈！\n选择正确磁盘后点击[抹掉]，相当于格式化磁盘。\n\n\n\n名称自行设置，[格式]设置为[Mac OS扩展（日志式）]，方案为[GUID分区图]，点击[抹掉]。\n\n\n\n如果想对这块虚拟磁盘分区的话也可以点击分区，进行分区，小e在此使用一个分区为例，不再分区了。\n\n\n\n磁盘抹掉后关闭磁盘工具，点击[安装mac OS]。\n\n\n\n点击继续。\n\n\n\n同意。\n\n\n\n选择刚才抹掉的磁盘来安装系统，磁盘名称即为刚才抹盘时设置的。\n\n\n\n耐心等待。\n\n\n\n耐心等待！\n\n\n\n设置区域[中国大陆]。\n\n\n\n键盘选择[ABC]，至于简体中文后面进入系统后可以自己添加。\n\n\n\n继续。\n\n\n\n勾选[现在不传输任何信息]，没有进系统前能不设置就不设置。\n\n\n\n稍后设置，跳过。\n\n\n\n同意。\n\n\n\n创建账户和设置密码，自行设置。\n\n\n\n继续。\n\n\n\n选择外观，自行选择。\n\n\n\n进入系统，可以看到系统界面很小，VMware虚拟机需要安装VMware Tools才能全屏。\n\n\n\n安装VMware Tools前右键先推出安装程序install macOS Mojave。\n\n\n\n点击VMware上方选项卡[虚拟机]-&gt;[安装VMware Tools]，出现如下界面，双击安装VMware Tools。\n\n\n\nMac上安装软件不需要像Windows那样麻烦，因为Mac的程序管理非常方便，直接安装即可，安装成功后重新启动。\n\n\n\n重新启动后就可以看到铺满了，如果想要全屏的话在VMware选项卡[查看]中全屏即可。\n\n\nOK！MacOS在虚拟机上的安装就到此结束了。\n\n\n三、优化\n安装成功后重启Mac系统，你会发现启动后很卡，重启后完全加载出桌面可能好久，而且在日常使用Mac虚拟机时，可能你会感到有点卡，比如你已经右键鼠标了，但是过了一两秒，Mac才弹出右键菜单。\n这是因为VMware不支持给MacOS图形加速，像Windows和MacOS这种大型GUI桌面系统，没有3D图形加速要想流畅确实不太可能。\n再者看到虚拟机给MacOS的图形显存只有128M，实在是太小了。综上，虚拟机对MacOS的优化支持实在有点差。\n根本原因还是macOS系统只被允许在苹果的硬件设备上运行，在非苹果设备上公开支持macOS肯定是违规的，也就没有厂商愿意冒着风险开发显卡优化程序。\n\n\n\n不过小的优化还是有的，有一款MacOS虚拟机优化软件beamoff，GitHub项目地址：https://github.com/JasF/beamoff。\nbeamoff是VM上Mac虚拟机的优化神器，下载链接小e都打包了，见资源下载。\n下载后在宿主机解压，因为已经安装了VM Tools，因此直接从宿主机拖动到Mac虚拟机桌面。（如果拖动中mac出现隐私安全弹窗，按照提示设置即可）\n然后从桌面拖动到应用程序（打开访达即可看到）即可安装。\n\n\n\n安装后要设置为每次开机自启动，在设置-&gt;用户与群组，点击你的账户，点击右侧登录项，点击+号添加beamoff应用程序即可。\n然后重启你就会感到开机加载桌面没有以前那么慢了，很明显。在日常使用时延迟也没有之前那么大了。\nOK！长篇大文，两千多字，码字好几个小时，终于完成了，以后小e有时间还会分享Mac系统的新手配置教程，敬请期待！\n分享不易，希望大家多多支持小e！\n\n\n","categories":["网络","本地服务","Vmware"]},{"title":"Linux相关站点","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Linux/Linux%E7%B3%BB%E7%BB%9F/Linux%E7%9B%B8%E5%85%B3%E7%AB%99%E7%82%B9/","content":"\n\n\n\n名称\n简介\n123云盘\n来源\n\n\n\nVmware安装包\nCentos 7镜像\n🔰\nlinuxdown\n\n\nLinux相关网站\nLinux系统下载网： https://www.linuxdown.com/网易开源镜像站: http://mirrors.163.com/阿里云官方镜像站:http://mirrors.aliyun.comLinux.org: https://www.linux.org/\n\nLinux各系统版本下载CentOS\nCentOS官网： https://www.centos.org/.CentOS各个版本下载： https://www.centos.org/.CentOS 版本选择：\n\n\nDVD版：这个是常用版本，就是普通安装版了，推荐大家安装。里面包含大量的常用软件，大部分情况下安装时无需再在线下载，体积为4G左右。\nEverything版：顾名思义，包含了所有软件组件，当然体积也庞大，高达DVD版的2倍。\nLiveCD版：就是一个光盘CentOS系统，可通过光盘启动电脑，启动出CentOS系统，也有图形界面，也有终端。也可以安装到计算机，但是有些内容可能还需要再次到网站下载（自动）。\nMinimal版：精简版本，包含核心组件，体积才600多MB。\nNetInstall版：顾名思义，网络安装版本，一般不用这个版本。\n\nUbuntu\nUbuntu官网： https://ubuntu.com/downloadUbuntu桌面版： https://ubuntu.com/download/desktopUbuntu服务器版： https://ubuntu.com/download/server\n\nFedora\nFedora官网： https://getfedora.org/Fedora Workstation： https://getfedora.org/en/workstation/download/Fedora Server: https://getfedora.org/en/server/download/\n\nKali\nKali Linux官网： https://www.kali.org/Kali Linux Downloads： https://www.kali.org/downloads/\n\nGentoo\nGentoo Linux下载1: https://www.gentoo.org/Gentoo Linux下载2: https://www.gentoo.org/downloads/\n\nDebian\nDebian官网： https://www.debian.org/Debian下载： https://www.debian.org/distrib/\n\nArch\nArch Linux官网： https://www.archlinux.org/Arch Linux下载： https://www.archlinux.org/download/\n\nOpenSuse\nOpenSuse官网： https://www.opensuse.org/OpenSuse下载： https://software.opensuse.org/distributions/leap\n\n","categories":["系统","Linux","Linux系统"]},{"title":"Auto.js","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Android/Auto.js/","content":"\n\n  \n\n\n\n\n\n\n\n名称\n简介\nOnedrive下载\n来源\n\n\n\nAutojs\n手机脚本工具\n🧰\n\n\n\nAuto.jsREADME in English\n简介​\tAuto.js (Pro)是Android上基于JavaScript的面向编程学习与效率提升的代码开发平台。\n软件下载\n官网: https://pro.autojs.org\n官方文档: https://pro.autojs.org/docs\n官方博客: https://blog.autojs.org\n\n开源说明本仓库为Auto.js 4.1的开源代码，从Auto.js Pro开始不再开源。\n为了避免之前的开源代码继续传播，现删除本仓库所有源代码。\nLicense\n基于Mozilla Public License Version 2.0并附加以下条款：\n\n非商业性使用 — 不得将此项目及其衍生的项目的源代码和二进制产品用于任何商业和盈利用途\n\n","categories":["系统","Phone","Android"]},{"title":"安卓 Tiktok","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Android/%E5%AE%89%E5%8D%93%20Tiktok/","content":"\n\n\n\nTiktok\n抖音国际版\n🧰\nTelegram\n\n\n\n\n","categories":["系统","Phone","Android"]},{"title":"港区Apple ID注册","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Iphone/%E6%B8%AF%E5%8C%BAApple%20ID%E6%B3%A8%E5%86%8C/","content":"\n\n以下注册流程较繁琐，你也可以到第三方平台如：https://taohao.me/product/、https://fk.appledi.com/product/ 购买Apple ID。  \n\n步骤一(浏览器操作)：\n1.使用浏览器访问 https://appleid.apple.com, 点击右上角创建您的 Apple ID链接，打开注册页面  \n\n2.填写姓名、出生日期、邮箱、密码等信息，国家或地区选择香港, 填写待验证的手机号码，如无香港手机号码，可以选择并填写中国大陆手机号码。  \n\n3.根据图片提示，填入验证码，然后点击下方继续按钮进入下一步。  \n  \n\n4.查看电子邮箱获得邮箱验证码，并填入文本框中，点击继续。  \n\n5.填入手机验证码到文本框中，点击继续。  \n\n6.验证成功。\n\n\n步骤二(手机AppStore操作)：\n1.手机打开AppStore，使用新注册的AppleId登陆\n\n\n\n2.输入手机验证码验证\n3.在弹出来的弹框中，选择检查  \n4.在下一个页面中，打开同意条款与条件选项开关\n5.注意在该页面中，如果没有付款的需求，千万不要选择付款方式，否则会无法消除选项，需要退出再登录才能消除。  \n付款人姓名保持原样，然后在下方填入香港账单地址和电话（街道地址和电话可在https://www.meiguodizhi.com/hk-address生成）。  \n填完后点击右上角的下一页。\n6.注册完成。\n\n\n","categories":["系统","Phone","Iphone"]},{"title":"Iphone相关网站","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Iphone/Iphone%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99/","content":"\n\n\n\n网站\n简介\n\n\n\nApple\n官网\n\n\n苦心ios导航\n各类ios系统相关资源导航\n\n\nunc0ver\n越狱工具h\n\n\n","categories":["系统","Phone","Iphone"]},{"title":"Tiktok-IOS","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Iphone/Tiktok-IOS/","content":"\n\n\n\n名称\n简介\nOnedrive\n来源\n\n\n\n\nTiktok\n国际版抖音\n🧰\nyoutube\n下载地址\n\n\nTikTokTool\n去水印下载\n🧰\n\n\n\n\n方法一来源YouTube\n科技猎奇\n\n2023年8月最新国际版抖音Tiktok免拔卡教学，IOS苹果手机，安卓手机，都可以免拔卡使用，超简单！ | tiktok ios免拔卡 | tiktok安卓免拔卡 | tiktok教学\n科技猎奇\n \n\n我们先下载爱思助手和TikTok安装包（以下有链接）\n\n爱思助手：https://www.i4.cn\nTikTok安装包： https://www.mediafire.com/file/ktzoowbwe129khk/TikTok_26.5.0.ipa/file\n\n下载完成之后就是这样一个安装包\n[]\n然后打开爱思助手连接上手机，点击上方的工具箱，在更多工具中找到IPA签名（第5排第2个）\n[]\n点击上方的添加IPA文件，选中刚才下载的TikTok安装包\n[\n然后导入到IPA签名中，在点击左下角的使用Apple ID签名，输入自己的Apple ID账号和密码（注意不要输入错误）\n[]然后点击开始签名，多尝试几次，第一次可能不成功\n签名成功之后点击上方的已签名IPA位置，然后这个窗口可以关闭了\n[\n然后打开已签名IPA位置的文件夹\n[打开上方的我的设备，然后点击应用游戏\n[]\n将第3步的已签名后的安装包拖入这个应用游戏窗口，然后就会开始自动下载\n[]\n等待安装完成之后就可以拔掉数据线了，现在手机上会出现TikTok应用\n\n点击设置–&gt;通用–&gt;VPN与设备管理–&gt;点击TikTok–&gt;然后点击信任\n\n现在即可打开TikTok应用，即可正常使用！！\n方法二\nhttps://itiktok.best/\n\n\n10月最新 永久有效！在线安装免签名！IOS免拔卡！TikTok2023免拔卡解锁完美教程，亲测关注正常！可看直播！可升级到最新版本！操作简单，适合新手，国际版抖音旧版安装\n\n\n","categories":["系统","Phone","Iphone"]},{"title":"模拟器","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Mobile%20phone%20simulater/%E6%A8%A1%E6%8B%9F%E5%99%A8/","content":"\n\n\n\n名称\n简介\n123云盘\n来源\n\n\n\nDnmultiplayer\n雷电模拟器\n🧰\n官网\n\n\nMEmuConsole\n逍遥模拟器\n🧰\n官网\n\n\n","categories":["系统","Phone","Mobile phone simulater"]},{"title":"Mind map","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Software/Mind%20map/","content":"\n\n  \n\n\ns\n\n\n\n\n\n\n\n文档https://wanglin2.github.io/mind-map/#/doc/zh/deploy\n部署本项目的web目录下提供了一个基于simple-mind-map库、Vue2.x、ElementUI开发的完整项目，数据默认存储在电脑本地，此外可以操作电脑本地文件，原意是作为一个线上demo，但是也完全可以直接把它当做一个在线版思维导图应用使用，在线地址： https://wanglin2.github.io/mind-map/。 如果你的网络环境访问GitHub服务很慢，你也可以部署到你的服务器上。\n部署到静态文件服务器项目本身不依赖后端，所以完全可以部署到一个静态文件服务器上，可以依次执行如下命令：\ngit clonehttps://github.com/wanglin2/mind-map.gitcdmind-mapcdsimple-mind-mapnpm inpm linkcd..cdwebnpm inpm link simple-mind-map\n\n  然后你可以选择启动本地服务：   npm run serve 也可以直接打包生成构建产物： npm run build 打包完后的入口页面index.html可以在项目根目录找到，对应的静态资源在根目录下的dist目录，html文件中会通过相对路径访问dist目录的资源，比如dist&#x2F;xxx。你可以直接把这两个文件或目录上传到你的静态文件服务器，事实上，本项目就是这样部署到GitHub Pages上的。 如果你没有代码修改需求的话，直接从本仓库复制这些文件也是可以的。 如果你想把index.html也打包进dist目录，可以修改web&#x2F;package.json文件的scripts.build命令，把vue-cli-service build &amp;&amp; node ..&#x2F;copy.js中的 &amp;&amp; node ..&#x2F;copy.js删除即可。 如果你想修改打包输出的目录，可以修改web&#x2F;vue.config.js文件的outputDir配置，改成你想要输出的路径即可。 如果你想修改index.html文件引用静态资源的路径的话可以修改web&#x2F;vue.config.js文件的publicPath配置。以及web&#x2F;public&#x2F;index.html文件的window.externalPublicPath配置。 另外默认使用的是hash路由，也就是路径中会在#，如果你想使用history路由，可以修改web&#x2F;src&#x2F;router.js文件，将：\nconstrouter = newVueRouter(&#123;  routes&#125;)\n\n改成：  \nconstrouter = newVueRouter(&#123;  mode: &#x27;history&#x27;,  routes&#125;)\n\n不过这需要后台支持，因为我们的应用是个单页客户端应用，如果后台没有正确的配置，当用户在浏览器直接访问子路由时会返回404，所以呢你要在服务端增加一个覆盖所有情况的候选资源：如果URL匹配不到任何静态资源，则应该返回同一个index.html页面。  \nDocker非常感谢水车，本小节由他编写，对应的 Docker 包也由他维护。 直接从 Docker hup 中安装:\ndocker run -d -p 8082:8080 shuiche/mind-map:latest\nmind-map在容器中启动了8080端口作为web服务入口，通过docker运行容器时，需要指定本地映射端口，上面案例中，我们通过本地的8081端口映射到容器端口8080。 安装完成后，通过 docker ps 查看容器运行状态。 浏览器打开 127.0.0.1:8081 即可使用Web 思维导图功能。 此时，项目的新建保存功能还不能使用需要进行如下操作将ssl证书部署到容器内才能通过https的方式正常保存新建项目。 ssl证书部署到容器以失败告终，最终采用直接克隆复制到wordpress根目录的方式在网站打开使用，同时需要部署证书到网站以使用https。这样最终才能使用打开保存新建的功能。\n\n打开宝塔面板设置中的ssl证书功能，找到ssl证书的安装路径：&#x2F;www&#x2F;server&#x2F;panel&#x2F;ssl\ndocker run [cool_goldberg] -d -p 8082:8080 -v&#x2F;www&#x2F;server&#x2F;panel&#x2F;ssl&#x2F;cert:&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;7227f8fa2a45c1e2a793e0632943a8af7ef0a63bcf8f6f806cb152fd1c664e2c:latest\n容器id：7227f8fa2a45c1e2a793e0632943a8af7ef0a63bcf8f6f806cb152fd1c664e2c\n容器路径：var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;7227f8fa2a45c1e2a793e0632943a8af7ef0a63bcf8f6f806cb152fd1c664e2c\n证书路径：www&#x2F;server&#x2F;panel&#x2F;ssl\n容器名称：&#x2F;cool_goldberg\n\n直接部署到docker的命令如下： docker run -d -p 8082:8080 -v www/server/panel/ssl/cert:var/lib/docker/containers/7227f8fa2a45c1e2a793e0632943a8af7ef0a63bcf8f6f806cb152fd1c664e2c:latest 在群晖上以 Docker 方式安装\n对接自己的存储服务应用数据默认存储在浏览器本地，浏览器本地存储容量是比较小的，所以当在思维导图中插入更多图片后很容易触发限制，所以更好的选择是对接你自己的存储服务，这通常有两种方式： 第一种 直接clone本仓库代码，然后修改web&#x2F;src&#x2F;api&#x2F;index.js内的相关方法即可实现从你的数据库里获取数据，以及存储到你的数据中。 第二种 很多时候，你可能想始终使用本仓库的最新代码，那么第一种方式就不太方便，因为你要手动去合并代码，所以提供了第二种方式。 具体操作步骤： 1.复制web应用打包后的资源 包括：dist目录和index.html文件。 2.修改复制后的index.html文件 首先在head标签里插入如下代码：\n&lt;script&gt;  window.takeOverApp = true&lt;/script&gt;\n\n这行代码会提示应用不要初始化应用即：new Vue()，而是把控制权交给你，接下来再在body的最后插入你自己的js代码，内联或则外链都可以，内联示例如下：  \n&lt;script&gt;  // 你自己的请求数据的方法constgetDataFromBackend = () =&gt;&#123;    returnnewPromise((resolve, reject) =&gt;&#123;      setTimeout(() =&gt;&#123;        resolve(&#123;          // 思维导图数据mindMapData: &#123;            root: &#123;              &quot;data&quot;: &#123;                  &quot;text&quot;: &quot;根节点&quot;&#125;,              &quot;children&quot;: []            &#125;,            theme: &#123; &quot;template&quot;:&quot;avocado&quot;,&quot;config&quot;:&#123;&#125; &#125;,            layout: &quot;logicalStructure&quot;,            config: &#123;&#125;,            view: &#123;&#125;          &#125;,          // 页面语言，支持中文（zh）、英文（en）lang: &#x27;zh&#x27;,          // 页面部分配置localConfig: null&#125;)      &#125;, 200)    &#125;)  &#125;  // 注册全局方法constsetTakeOverAppMethods = (data) =&gt;&#123;    window.takeOverAppMethods = &#123;&#125;    // 获取思维导图数据的函数window.takeOverAppMethods.getMindMapData = () =&gt;&#123;      returndata.mindMapData    &#125;    // 保存思维导图数据的函数window.takeOverAppMethods.saveMindMapData = (data) =&gt;&#123;      console.log(data)      // 该函数触发频率可能会很高，所以你应该做一下节流或防抖&#125;    // 获取语言的函数window.takeOverAppMethods.getLanguage = () =&gt;&#123;      returndata.lang    &#125;    // 保存语言的函数window.takeOverAppMethods.saveLanguage = (lang) =&gt;&#123;      console.log(lang)    &#125;    // 获取本地配置的函数window.takeOverAppMethods.getLocalConfig = () =&gt;&#123;      returndata.localConfig    &#125;    // 保存本地配置的函数window.takeOverAppMethods.saveLocalConfig = (config) =&gt;&#123;      console.log(config)    &#125;  &#125;  window.onload = async() =&gt; &#123;    if(!window.takeOverApp) return// 请求数据constdata = awaitgetDataFromBackend()    // 设置全局的方法setTakeOverAppMethods(data)    // 思维导图实例创建完成事件window.$bus.$on(&#x27;app_inited&#x27;, (mindMap) =&gt;&#123;      console.log(mindMap)    &#125;)    // 可以通过window.$bus.$on()来监听应用的一些事件// 实例化页面window.initApp()  &#125;&lt;/script&gt;\n\n如上所示，当你设置了window.takeOverApp &#x3D; true标志，应用不再主动进行实例化，而是会将实例化的方法暴露出来由你调用，那么你可以先从后端请求思维导图的数据，然后再注册相关的方法，应用内部会在合适的时机进行调用，从而达到回显和保存的目的。   这样做的好处是，每当本仓库代码更新了，你可以简单的复制打包后的文件到你自己的服务器，只要稍微修改一下index.html页面即可达到同步更新且使用自己的存储服务的目的。\n修改静态资源路径如果你想和上一节一样保持和本仓库代码的同步更新，但是又想修改静态资源的存放位置，比如默认的层级关系为：\n-dist--css--fonts--img--js-logo.ico-index.html\n\n而你想调整成这样：  \n-assets--dist---css---fonts---img---js-logo.ico-index.html\n\n那么你可以将index.html中的window.externalPublicPath配置由默认的.&#x2F;dist&#x2F;修改为：   window.externalPublicPath = &#39;./assets/dist/&#39; 同时index.html中内联的.ico、.js、.css资源的路径需要你手动修改。 需要注意的是，dist目录内的目录层级关系最好不要调整，否则可能会出现异常。 如果你想替换其中的一些静态资源，比如你想将主题图片和结构的图片替换成你自己设计的图片，那么可以直接同名覆盖。\n","categories":["网络","Github","Github Software"]},{"title":"GitKraken安装","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Software/GitKraken%E5%AE%89%E8%A3%85/","content":"\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nGitKraken\nGithub版本工具\n🧰\n\n\n\n\n在Windows上安装Node.js\n在 https://nodejs.org/dist/v16.14.0/node-v16.14.0-x64.msiorhttps://nodejs.org/dist/v16.14.0/node-v16.14.0-x86.msi。上下载并安装适合您计算机的版本（x64或x86）添加环境变量：将node.js的目录添加到系统变量path中，node路径不能存在中文!。\n\n安装GitKraken Pro 8.4.0 x64将CrackGitCracken文件夹内的文件放到安装目录覆盖。\n打开安装目录输入cmd，输入以下命令安装yarn\n\n安装    npm install yarn   （最好不要用别的安装命令，会没效果）卸载    npm uninstall yarn -g  如果出现错误执行此命令！\n\n添加环境变量：将yarnbin的路径添加到系统变量\n\n pathC:UsersAdministratorAppDataLocalgitkrakennode_modulesyarnbin\n\n重新打开cmd执行：yarn -v 查看版本号\n然后在文件夹目录输入cmd\n\n运行命令：打开GitKraken文件夹，然后在命令行中运行yarn install和yarn build来构建GitKraken。运行GitKraken破解程序：在命令行中运行node ./dist/bin/gitcracken-patcher.js以破解GitKraken。\n\n添加hosts：在hosts文件中添加“0.0.0.0 release.gitkraken.com”以屏蔽GitKraken的更新检查。删除本地配置文件：如果版本仍然缺失，请删除本地配置文件“%appdata%.gitkraken”（Windows），“~&#x2F;.gitkraken”（Linux或macOS）。\n汉化打开GitKraken_Chinese_translate-Installer_1.0install.bat，然后将string_8.2.1.json汉化文件拖入窗口完成汉化。\n","categories":["网络","Github","Github Software"]},{"title":"sun-panel","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Software/sun-panel/","content":"\n\n  \n\n\n\n\n官网：https://doc.sun-panel.top/\n一个服务器、NAS导航面板、Homepage、浏览器首页。\n","categories":["网络","Github","Github Software"]},{"title":"PicGo","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Software/PicGo/","content":"\n  \n  \n    \n      \n      \n        请在这里输入密码\n      \n    \n  \n\n","categories":["网络","Github","Github Software"]},{"title":"知名Github加速平台jsdelivr域名被墙，启用新方案加速Github静态文件","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/%E7%9F%A5%E5%90%8DGithub%E5%8A%A0%E9%80%9F%E5%B9%B3%E5%8F%B0jsdelivr%E5%9F%9F%E5%90%8D%E8%A2%AB%E5%A2%99%EF%BC%8C%E5%90%AF%E7%94%A8%E6%96%B0%E6%96%B9%E6%A1%88%E5%8A%A0%E9%80%9FGithub%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/","content":"\n\n转自：https://www.xpn.cc/5368/fy.html\n\n前言jsDelivr是一个免费、开源、不限带宽的CDN公共库，由Cloudflare、Fastly、StackPath、QUANTIL等CDN供应商提供了全球超过750个CDN节点，包括大陆数百个节点，可加速访问托管仓库内 [主要三种:NPM 、WordPress 、 Github 的静态资源，提升网站访问速度。 cdn.jsdelivr.net加速Github静态文件的方法是，首先新建一个公开仓库，放好静态资源，例如你的静态资源地址是这样的：https://github.com/用户名/仓库名/blob/main/style.css那么你使用了cdn.jsdelivr.net加速之后的链接就是这样的：https://cdn.jsdelivr.net/gh/用户名/仓库名@main/style.css 由于众所周知的原因最近cdn.jsdelivr.net被墙了，所以今天写这篇文章就是解决cdn.jsdelivr.net被墙，选用新方案加速你在Github的静态文件！\n正文开始方案一替换官方临时子域名，但这些CDN普遍速度一般，而且前途并不明朗，建议仅供临时使用，下面是我列举出来的几个临时域名 \n\nCloudFlare：test1.jsdelivr.netCloudFlare：testingcf.jsdelivr.netFastly：fastly.jsdelivr.netGCORE：gcore.jsdelivr.net\n\n 替换方法也很简单，比如你的原来的链接是：https://cdn.jsdelivr.net/gh/gzhzyz/www.qxqianzui.com@main/index.css 此时相信国内是打不开的，下面替换成临时域名https://test1.jsdelivr.net/gh/gzhzyz/www.qxqianzui.com@main/index.css \n方案二 自己做反向代理，自己准备一台大陆访问比较快的境外服务器比如香港，安装好宝塔面板，下面就以已经安装好面板做演示 首先新建一个站点  \n然后申请ssl，  ssl证书申请好之后我们点击反向代理，如下图新建一个反向代理  目标URL写要被反向代理的域名加协议https:&#x2F;&#x2F;然后保存就可以了  \n此时你的静态文件链接就是：xxx.com&#x2F;gh&#x2F;用户名&#x2F;仓库名@main&#x2F;style.css，例如https://jsdelivr.9io.net/gh/gzhzyz/www.qxqianzui.com@main/index.css \n方案三 推荐一些国内比较稳定、全面的静态资源库吧，其中不乏完全同步cdnjs内容的，可以逐步将静态资源替换过去。\n\n\n字节静态库：cdn.bytedance.com\n\n完整同步了cdnjs的内容，通过自家CDN加速，缺点是没有海外节点而且链接比较凌乱。\n\n360静态库：cdn.baomitu.com\n\n完整同步了cdnjs的内容，并且有提供Google fonts加速，通过自家CDN加速，前段时间启用了AWS CloudFront的海外节点，是目前国内公共CDN做的比较好的了。\n\n七牛静态库：staticfile.org\n\n通过自家融合CDN加速，海外节点较少不过也表现尚可，缺点就是担心org域名后续备案维护的问题。\n\n国外一个比较常用的静态资源库:unpkg.com unpkg.zhimg.com\n\n主域名国内的访问速度较慢，但有适合国内使用的镜像地址。\n\nloli: cdnjs.loli.net&#x2F;ajax&#x2F;libs&#x2F; *这个了解不多，速度还可以自己测试。\n\n\n\n","categories":["网络","本地服务","Vmware"]},{"title":"宝塔面板SSL证书","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BFSSL%E8%AF%81%E4%B9%A6/","content":"\n宝塔面板设置部署证书路径为： www/server/panel/ssl \n网站部署证书直接选中网站批量操作部署证书 http端口为80 https端口为443\n","categories":["网络","本地服务","Vmware"]},{"title":"从数据库批量删除或替换WordPress文章内容","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E6%88%96%E6%9B%BF%E6%8D%A2WordPress%E6%96%87%E7%AB%A0%E5%86%85%E5%AE%B9/","content":"\n从数据库批量删除或替换WordPress文章内容\n删除命令：\nUPDATE wp_posts    SET post_content = REPLACE( post_content, &#x27;要删除的内容&#x27;, &#x27;&#x27; );\n\n替换命令：\nUPDATE wp_posts    SET post_content = REPLACE( post_content, &#x27;原来的内容&#x27;, &#x27;要替换的内容&#x27; );\n\n","categories":["网络","本地服务","Vmware"]},{"title":"宝塔面板相关命令","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/","content":"\n安装\n宝塔面板7.9.4企业版 开心破解版一键脚本\nCentos安装命令\n默认安装是7.8.0 直接在线升级7.9.4:\n\nyum install -y wget &amp;&amp; wget -O install.sh http://io.bt.sy/install/install_6.0.sh &amp;&amp; sh install.shyum install -y wget &amp;&amp; wget -O install.sh http://www.510a.cn/sh/install_6.0.sh &amp;&amp; sh install.sh\n\n\nCentos安装命令（默认安装是7.8.0 直接在线升级7.9.4）：\n\nyum install -y wget &amp;&amp; wget -O install.sh http://io.bt.sy/install/install_6.0.sh &amp;&amp; sh install.sh\n\n\n试验性Centos&#x2F;Ubuntu&#x2F;Debian安装命令 独立运行环境（py3.7） 可能存在少量兼容性问题 不断优化中\n\ncurl -sSO http://io.bt.sy/install/install_panel.sh &amp;&amp; bash install_panel.sh\n\n\nUbuntu Deepin安装命令：\n\nwget -O install.sh http://io.bt.sy/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh\n\n\nDebian安装命令：\n\nwget -O install.sh http://io.bt.sy/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh\n\n\nFedora安装命令:\n\nwget -O install.sh http://io.bt.sy/install/install_6.0.sh &amp;&amp; bash install.sh\n\n\nLinux面板 7.9.4 升级企业版命令 1（7.9.4 官方版 &#x2F; 7.7.0 开心版 可以执行这个升级到 7.9.4 开心版）：\n\ncurl https://io.bt.sy/install/update_panel.shbash\n\n\nLinux面板 7.9.4 升级企业版命令 2（7.9.4 官方版 &#x2F; 7.7.0 开心版 可以执行这个升级到 7.9.4 开心版）：\n\ncurl http://io.bt.sy/install/update6.shbash\n\n\n\n常用命令\n升级命令1:\n\ncurl https://io.bt.sy/install/update_panel.shbash\n\n\n升级命令2:\n\ncurl http://io.bt.sy/install/update6.shbash\n\n\n取消安全入口命令 :\n\nrm -f /www/server/panel/data/admin_path.pl\n\n\n放行8888端口命令:\n\niptables -I INPUT -p tcp --dport 25301 -j ACCEPTiptables -I INPUT -p tcp --dport 8080 -j ACCEPTiptables -I INPUT -p tcp --dport 18443 -j ACCEPT\n\n\n放行7800端口命令:\n\niptables -I INPUT -p tcp --dport 31806 -j ACCEPT\n\n\n禁止防火墙:bt\n\nsystemctl stop firewalld.service\n\n\n禁止防火墙开机启动:\n\nsystemctl disable firewalld.service\n\n\n如果安装卡顿运行:\n\n/www/server/panel/BT-Task\n\n\n切换下载节点应对无法安装数据库:\n\necho &#x27;128.1.164.196 download.bt.cn&#x27; &gt;&gt;/etc/hosts\n\n\n面板自动获取节点:\n\nsed -i &quot;/bt.cn/d&quot; /etc/hosts\n\n\n\n卸载\n进入ssh 输入以下命令下载脚本\n\nwget http://download.bt.cn/install/bt-uninstall.sh\n\n\n执行脚本 （若是ubutnu用户请在前面加sudo  例子sudo sh bt-uninstall.sh）\n\nsh bt-uninstall.sh\n\n根据提示输入1或2后按回车清理面板或环境 （若输入其他值或不输入直接回车则只卸载面板）\n报错systemctl 无法启动新服务：lxc: Too many open files今天在机器上增加service服务报错：\nFailed to allocate directory watch: Too many open files\n解决方法：\nvim /etc/sysctl.conf\nfs.inotify.max_user_instances=512 fs.inotify.max_user_watches=262144\n\n生效\nsysctl -p\n\n分析：\n可能是 inotify 數量限制了，修改后服务可以正常启动\n宝塔面板 “无法连接宝塔云端服务器2” 的解决思路与方法！简单粗暴给大家推荐2种方法:\n使用官方节点修复工具进行修复，使用ssh工具链接服务器后执行代码，然后根据服务器所属地区进行修复后重启服务器即可。一般情况都能解决！\nwget http://125.90.93.52/tools/auto_fix.sh &amp;&amp; bash auto_fix.shwget https://download.bt.cn/tools/auto_node.sh &amp;&amp; bash auto_node.sh\n\n在宝塔面板中设置，根据服务器所在地区选择对应节点。请求线路多为IPv4！\n正常来说，按照上面2步执行完，请重启服务器后应该就完美解决这个问题了。\n查看linux系统网络设置本地dns是否为光猫192.168.1.1地址！！！！！\n在如下设置里，勾选ipv6选项。\n","categories":["网络","本地服务","Vmware"]},{"title":"WP Super Cache安装使用","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/WP%20Super%20Cache%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/","content":"\nWP Super Cache 能帮助动态WordPress博客生成静态html文件，避免每次访问网站都通过php获取。有助于提高网站访问速度。 安装方法：\n在WordPress插件里搜索 “WP Super Cache”安装，并启用\n\n接着，进入WP Super Cache设置 点击“高级”，开启缓存功能，勾选推荐选项，并点击下方的“更新”。如下图所示\n\n接着，点击“预缓存”，选择预缓存模式，点击“立即预加载缓存”。\n\n 选择通用，点击“更新”。再点击“测试缓存“，可以看一下效果，正常会显示OK字样。 \n\n如何查看缓存是否已经生效？ 新开一个浏览器隐私窗口（无登录用户），打开网站首页，鼠标右键查看网页源代码。 将页面拖动到最底部，如果出现了下图所示的一段代码，这说明缓存已经生效。\n\n以上就是关于WordPress静态缓存插件WP Super Cache的使用方法。\n","categories":["网络","本地服务","Vmware"]},{"title":"Wordpress插件合集","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/Wordpress%E6%8F%92%E4%BB%B6%E5%90%88%E9%9B%86/","content":"\n\n\n\n名称\n简介\nOnedrive下载\n来源\n\n\n\nWP  Super Cache\n提高网站访问速度\n🧰\n\n\n\nWP  Rocket\n缓存插件\n🧰\n\n\n\nWp  sheet editor\n数据批量导入插件\n🧰\n\n\n\nWP  All Import Pro\n数据批量导入插件\n🧰\n\n\n\nAll-in-One  WP Migration\n备份还原插件\n🧰\n\n\n\nElementor\n网页生成器插件\n🧰\n\n\n\nLogin  to view all\n代码隐藏插件\n🧰\nt\n\n\n","categories":["网络","本地服务","Vmware"]},{"title":"WordPress配置Memcached缓存教程","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/WordPress%E9%85%8D%E7%BD%AEMemcached%E7%BC%93%E5%AD%98%E6%95%99%E7%A8%8B/","content":"\n\n已剪辑自: https://themeforwp.net/wordpress-config-memcached/\n很多人都知道WordPress可以通过缓存来提高网站加载速度，其实除了WordPress本身可以缓存外，我们还可以在服务器上来使用对象缓存来加速网站，在本文中我们为大家带来WordPress配置Memcached缓存方法\n本教程采用宝塔面板和WordPress缓存插件，无需修改代码\n\n安装Memcached首先我们需要到宝塔面板中安装Memcached，需要安装2个东西，一个是Memecached本身，服务端，另一个是PHP的Memcached扩展\n打开软件管理 – 运行环境 – 安装Memcached，建议使用编译安装\n\n安装过程会持续一段时间，可以稍等一会儿再回来\n安装完成后，我们继续安装PHP的Memcached扩展\n打开PHP设置 – 管理，安装 memcached 缓存器扩展\n\nPHP扩展安装很快就会安装上\n这样我们的网站环境就算配置好Memcached了，接下来可以为WordPress配置对象缓存了\nWordPress配置Memcached为WordPress配置Memcached，我们可以借助 W3 Total Cache 这款插件，这是一个非常好用而且功能强大的WordPress缓存插件，它内置了对象缓存选项，让我们可以直接使用\n安装好W3插件后，选择Performance – General Settings\n把需要用到的缓存都切换成Memcached\n页面缓存\n\n数据库缓存\n\n对象缓存\n\n完成后保存所有的选项\n刷新前台页面，查看页面源代码如果能够在最底部发现下面的内容，就证明你的WordPress已经成功配置好Memcached缓存\n\n使用Memcached可以非常好的提升网站加载速度，对于速度有要求的站长非常建议安装\n另外，除了Memcached，你还可以使用Redis，二者选一即可\n","categories":["网络","本地服务","Vmware"]},{"title":"Wordpress主题","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/Wordpress%E4%B8%BB%E9%A2%98/","content":"\n\n\n名称\n简介\n123云盘下载\n来源\n\n\n\nArgon\n一个轻盈、简洁的  WordPress 主题\n🧰\n\n\n\nCorePress\n专为极客制作的一款主题\n🧰\n\n\n\nWebStack\n静态响应式网址导航网站\n🧰\n\n\n\nPuock\n基于WordPress开发的高颜值的自适应主题\n🧰\n\n\n\n子比\n收费模块主题\n🧰\n官网\n\n\nRipro9.0\n收费模块主题\n🧰\n官网\n\n\nArgon\n📖 Argon - 一个轻盈、简洁的 WordPress 主题\n使用文档: https://argon-docs-old.solstice23.top/\n演示地址: https://solstice23.top/\n\nCorePress\nCorePress，是一款多功能的WordPress主题，专为极客制作的一款主题，主题功能完善，设置丰富。\n使用文档: https://www.yuque.com/applek/corepress\n演示地址: https://www.lovestu.com/\n\nWebStack\n❤️静态响应式网址导航网站\n最初开源地址: https://github.com/WebStackPage/WebStackPage.github.io\n使用配置说明: https://github.com/owen0o0/WebStack\n\n主题安装说明\n环境要求:\n\nWordPress 4.4+\nWordPress 伪静态\nPHP 5.7+ 7.0+\n\n安装指南\n\n安装 WordPress ，教程百度\n设置伪静态(以下规则根据服务器环境任何选一种)\nNginx 伪静态规则:\nlocation /  &#123;   try_files $uri $uri/ /index.php?$args;  &#125;  rewrite /wp-admin$ $scheme://$host$uri/  permanent; \n\n宝塔添加方法，复制对应规则到下图位置，也可以点下拉菜单选择wordpress。其他环境请自行百度。\n如果点击地址出现404，请到WordPress 后台「设置」栏目 -&gt; 固定链接 -&gt; 保存更改\n\nPuock\n🎨 一款基于WordPress开发的高颜值的自适应主题，支持白天与黑夜模式&#x2F;无刷新加载&#x2F;第三方登录等众多功能\n使用文档: https://licoy.cn/puock-doc.html\n演示网站: https://licoy.cn/\n\n子比\n官网: https://www.zibll.com/Zibll子比主题专为网站开发，设计简约优雅、功能全面。UI界面模块化、多种布局、多种显示效果可选择，高度自由化，更容易搭配出自己喜欢的网站。支持付费阅读，付费下载功能和用户VIP会员系统，为站长提供有力的生产力。整体的开发理念都是围绕着阅读体验！减少花里胡哨的沉郁功能，把核心都集中在内容上。页面的布局、间距、功能都精心设计，只为让页面浏览更加自然，让用户更加易于阅读，让作者更加易于写作。\n\nRipro9.0\n官网: https://ritheme.com/theme/198.html全新发布，更加专业，资源，素材，源码站运营首选，支付宝原生&#x2F;当面付、微信扫码&#x2F;H5支付、码支付、虎皮椒、PAYJS。QQ&#x2F;微信&#x2F;微博一键登录，付费下载、付费查看、支持卡密、会员、推广佣金、作者佣金、前端发布资源等。\n安装\n伪静态设置：（重要）\n\n","categories":["网络","本地服务","Vmware"]},{"title":"Host文件修改","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/Host%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9/","content":"\n\n\n\n名称\n简介\nOnedrive下载\n来源\n\n\n\nWordPress文章更新器\nwordpress文章更新工具\n🔰\n资源分享网\n\n\nHost文件编辑器1.1\nHost文件编辑\n🔰\n果核剥壳\n\n\nHFE\nHost文件编辑\n🔰\n芊芊精典\n\n\nHFE\nHosts File Editor+ 是一款主机文件编辑器，可无缝地编辑 Hosts文件、简单直接的备份或创建新的 Hosts 文件，您还可通过编辑 Hosts 文件管理访问网站和网络流量。\n\nWordPress文章更新器\n水淼WordPress 站群文章更新器 v1.3.6.0 破解版，一款可以给 WordPress 博客站群批量更新文章的软件。支持指定或随机分类分布、支持指定用户或随机用户发布、支持定时发布、SEO 友好的文章访问地址（多种地址类型可选，如首拼、全拼、随机数字字母、递增数值、地址前缀后缀）等等。\n\nHost文件编辑器1.1\nHOST文件编辑器是一款由果核剥壳开发的一款快捷host文件编辑工具，能够对本地host文件进行编辑，以免自己去目录修改的麻烦。hosts是win系统一个很重的文件，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统再会将网址提交DNS域名解析服务器进行IP地址的解析。我们用hsot文件最常用的就是屏蔽修改的软件，让软件不再联网以便达到修改的目的。软件使用易语言编写,压缩后大小只有80多kb，非常小巧方便。如果杀毒软件报毒，请放行。\n\nHost文件代码# Copyright (c) 1993-1999 Microsoft Corp.# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.# This file contains the mappings of IP addresses to host names. Each# entry should be kept on an individual line. The IP address should# be placed in the first column followed by the corresponding host name.# The IP address and the host name should be separated by at least one# space.# Additionally, comments (such as these) may be inserted on individual# lines or following the machine name denoted by a &#x27;#&#x27; symbol.# For example:#      102.54.94.97     rhino.acme.com          # source server#       38.25.63.10     x.acme.com              # x client host127.0.0.1       localhost192.168.11.11  www.xiaoming.com192.168.11.11  xiaoming.com192.168.11.11  jia.xiaoming.com192.168.11.11  yi.xiaoming.com192.168.11.11  siusiu.xiaoming.com192.168.11.11  www.wudiyouxi.com192.168.11.11  wudiyouxi.com192.168.11.11  ding.xiaoming.com192.168.11.11  alist.xiaoming.com","categories":["网络","本地服务","Vmware"]},{"title":"Vmware中设置固定ip","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/Vmware%E4%B8%AD%E8%AE%BE%E7%BD%AE%E5%9B%BA%E5%AE%9Aip/","content":"\n\nVMware中的虚拟机每次重启IP都会变化，为了解决这个问题需要设置静态IP。\n\n一、查看虚拟网址信息在VMware安装的宿主机查看网址信息，发现多出如下两个虚拟网卡\n\n\n以太网适配器 VMware Network Adapter VMnet1\n以太网适配器 VMware Network Adapter VMnet8\n\n\n\nimage.png\n二、将虚拟机中的系统静态IP绑定到VMnet8上获取******VMnet8******虚拟网卡的网段\n由于IP一直变化，我们想固定IP，可以通过将虚拟机中的系统静态IP绑定到VMnet8上来实现。\n通过ipconfig -all查询到VMnet8网卡的网段为192.168.211\n，这个等会需要使用。\n\n\n编辑虚拟机虚拟网络打卡VMware，进入虚拟网络编辑器\n选择VMnet8网卡，点击NAT设置\n记录子网IP，网关IP192.168.211.2\n等信息\n点击已经安装好的虚拟机，选择网络适配器（也可以直接右击虚拟机，进入设置）\n将网络是配置网络连接方式设置为自定义，并且选择VMnet8虚拟网卡，点击确定\n![(https://gcore.jsdelivr.net/gh/kunba9527/works-img@main/img/20250619014240870.gif)\n三、虚拟机中网络配置进入安装好的CentOS7中配置网络IP，先做这两个操作 -&gt;\n*3.1* *查看网卡信息*\n\nimage.png\n*3.2* *编辑网卡信息配置*\n查看配置文件\ncd etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;\nls\n![主 f c f g- 10 fdown ifdown- bnep ifdown- eth ifdown- ib fdown _ IPPP ifdown- ipv6 fdown 主 fdown- post [ 1 主 z 主 ba 飢 主 z 主 ba network- S C ripts] 一 1 主 主 ba 飢 主 主 ba network- scripts] 1 ifup- ipv6 ifup- plip ifdown- tunnel ifup- plusb ifup- post ifup- bnep ifup- eth fc fg- 9n016777736 主 fdown- PPP fdown ifdown- SIt fdown _ Team ifdown- TeamPort ifup ifup ifup- ib ifup _ IPPP ifup ifup _ PPP ifup fup- SIt ifup- Team ifup- TeamPort ifup- tunnel ifup- 丙 主 0919ss init. ipv6- g10b31 network- functions network- functions- ipv6 _ 31 主 孛 子](file:&#x2F;&#x2F;&#x2F;C:&#x2F;Users&#x2F;Administrator&#x2F;AppData&#x2F;Local&#x2F;Temp&#x2F;msohtmlclip1&#x2F;01&#x2F;clip_image018.gif)\nimage.png\n编辑配置文件\nvi etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eno16777736\n配置文件的初始信息如下\n修改后的配置文件信息如下 -&gt;\nIPADDR&#x3D;”192.168.211.104”     # 当前设置的固定IP地址，注意网段与VMnet8一致\nNETMASK&#x3D;”255.255.255.0”     #  子网掩码，VMnet8的子网掩码，上面也可以看到\nDNS1&#x3D;”192.168.3.1”     # 宿主机的DNS，可以通过ipconfig查看\nGATEWAY&#x3D;”192.168.211.2”   # 网关地址，前面第二步中网关地址\n\n*3.3* *重启网络*\nservice network restart\n\n*3.4* ***查看虚拟机网络****IP*\n此时已经为我们修改后的固定IP 192.168.211.104\n![ \nimage.png\n*3.5* ***重启虚拟机再次查看****IP*\n仍然是192.168.211.104\n\ncentos7****桌面版本系统的设置\n可以直接进入网络设置配置相关参数具体如下图：\n[\n []\n   注意在设置网络时必须添加虚拟机与本地网络或者局域网的端口转发，wordpress站点网站必须转发80端口。\n","categories":["网络","本地服务","Vmware"]},{"title":"开机启动VMware虚拟机的设置","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E8%AE%BE%E7%BD%AE/","content":"\n\n很多用windows系统电脑开发的童鞋，会在自己电脑上装一个虚拟机，然后在装一个linux系统当作服务器来使用。但每次电脑开机  都要去重启一下虚拟机电源，实在是不划算。下面博主教大家在windows系统上，设置VMware开机自动启动，虚拟机也启动。\n\n\n复制vmware程序快捷方式到桌面(到其他地方也可以)\n\n\n虚拟机的全路径\n\n\n找到你要启动的虚拟机的全路径文件夹，找到以你要启动的虚拟机名称开头”.vmx”结尾的文件，并复制完整的地址。\n\n\n如：【D:VMware-osU-NAS4.04U-NAS_4.0.4.vmx】或者【D:VMware-osU-NAS4.04*.vmx】\nVMware虚拟机地址详细位置\nVMware软件的全路径\n\n\n右键查看VMware快捷方式属性，在VMware的全路径目标那里的地址后面加上【 -x 】以及上面复制的要启动的虚拟机地址。\n\n\n示例：VMware 的 vmware.exe 位置：【”D:Program Files (x86)VMwareVMware Workstationvmware.exe”】\n注意：【 -x 】前后各有一个空格；【 -X 】大写情况下，开机自动进入虚拟机项目全屏状态\n在快捷方式，目标处填入下方内容\n“D:Program Files (x86)VMwareVMware Workstationvmware.exe” -x “D:VMware-osU-NAS4.04U-NAS_4.0.4.vmx”\n  或”D:Program Files (x86)VMwareVMware Workstationvmware.exe” -x “D:VMware-osU-NAS4.04*.vmx”\nVMware虚拟机快捷方式目标位置\n\n\n最后把这个快捷方式复制到 Windows系统开机启动的文件夹里\n\n\nwin10启动文件夹的路径是C:ProgramDataMicrosoftWindowsStart MenuProgramsStartUp ，直接按照该路径，就可以打开win10开机启动文件夹目录。\n按组合键“win+R”打开“运行”，在其中输入“shell:startup”并按回车键;\n输入：%programdata%MicrosoftWindowsStart MenuProgramsStartup，点击确定进入即可。(programdataMicrosoftWindowsStart MenuProgramsStartup就是路径)\n\n","categories":["网络","本地服务","Vmware"]},{"title":"苹果CMS","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Phpstudy/%E8%8B%B9%E6%9E%9CCMS/","content":"\n \n  \n\n\n\n\n简介\n下载地址： https://maccmsbox.com/ or  https://github.com/magicblack/maccms_down官方网站：  https://www.maccms.la/安装文档：  https://www.showdoc.com.cn/mytheme/2725594647008379\n\n安装\n源码介绍： 苹果cms成品站打包+mxone模板破解版电影先生6.1.1模板优化版自带15W视频数据。 苹果cms做影视站最麻烦的就是新站采集，一个资源站就是几万数据，我是深有体会，给大家省点事 我站上打包下来的，省了很多事，15W+的数据，今天刚打包的，资源基本上都是新的，播放器也是配置好的，直接导入数据库就行了\n\n安装环境：\nphp7.0SQL5.6安装sg11+fileinfo扩展\n\n设置静态规则在苹果CMS伪静态设置之前，我们需要确定自己使用的服务器环境，然后根据你所用的系统环境，上传伪静态规则至你网站空间根目录。不同环境对应伪静态格式\n\niis6.x 下使用 httpd.ini 规则iis7.x 下使用 web.config 规则apache 下使用 .htaccess 规则nginx 下使用 maccms.conf 规则\n\niis6.x、iis7.x、apache环境\niis6.x、iis7.x、apache环境，直接上传至网站空间根目录即可，这些规则在苹果cms的安装包里已经自带打包在里面 自己对号入座上传即可。规则上传完后进行下一步操作在苹果cms后台，系统—&gt;URL地址设置—&gt;路由伪静态设置中开启对应功能按钮即可大功告成。最后网址规则就修改对应的路由规则就可以了。\n\nnginx环境下\nnginx环境下如果无法调用根目录下的伪静态配置文件，这样就需要我们手动配置了.来到宝塔面板中的伪静态设置页面下，复制下面maccms.conf文件内的规则到这里，然后保存即可！\n\nlocation / &#123;if (!-e $request_filename) &#123;rewrite ^/index.php(.*)$ /index.php?s=$1 last;rewrite ^/admin.php(.*)$ /admin.php?s=$1 last;rewrite ^/api.php(.*)$ /api.php?s=$1 last;rewrite ^(.*)$ /index.php?s=$1 last;break;   &#125; &#125;\n\n搬家苹果CMSv10如何快速搬家到新服务器呢？这是每个站长都有可能遇到的问题，苹果cms网站搬家非常简单，只需要在管理后台数据库备份一下，然后到把网站目录打包上传到新服务器就可以了。\n\n备份数据\n打包站点 \n上传到新的服务器解压后吧 applicationdatainstallinstall.lock 文件删除了，\n打开域名进入全新的安装界面，填写数据库配置和后台管理员账号密码完成安装\n\n\n还原数据还原完成备份数据会替换当前所有数据，恢复原来网站的信息数据，包括之前的后台管理账号密码都是一样的。苹果CMS网站搬家完美结束\n\n插件\n苹果CMS盒子： https://maccmsbox.com/Admin采集： https://www.admincj.com/萌芽采集： https://www.mycj.pro/\n\n","categories":["网络","本地服务","Phpstudy"]},{"title":"warp-sh","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/warp-sh/","content":"[github author&#x3D;”fscarmen” project&#x3D;”warp-sh” &#x2F;]\n\n  \n\n\n\n\nwarp 运行脚本\n首次运行\nwget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence/url/token]\n再次运行\nwarp [option] [lisence]\n[github author&#x3D;”fscarmen” project&#x3D;”sing-box” &#x2F;]\nSing-box for VPS 运行脚本:\nbash &lt;(wget -qO- https://raw.githubusercontent.com/fscarmen/sing-box/main/sing-box.sh)\n","categories":["网络","科学上网"]},{"title":"mack-a-八合一脚本","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/mack-a-%E5%85%AB%E5%90%88%E4%B8%80%E8%84%9A%E6%9C%AC/","content":"\n\n  \n\n\n\n\n博客 \n\n支持快捷方式启动，安装完毕后，shell输入【vasma】即可打开脚本，脚本执行路径[&#x2F;etc&#x2F;v2ray-agent&#x2F;install.sh]\n\nGithub\n\n\nwget -P /root -N --no-check-certificate &quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh\n\n官方网站【备用】\n\nwget -P /root -N --no-check-certificate &quot;https://www.v2ray-agent.com/v2ray-agent/install.sh&quot; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh\n","categories":["网络","科学上网"]},{"title":"winstonxg","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/winstonxg/","content":"\n  \n\n\n\n\n博客 \n纯IPV4&#x2F;纯IPV6的VPS直接运行一键脚本\nwget -N https://gitlab.com/rwkgyg/x-ui-yg/raw/main/install.sh &amp;&amp; bash install.sh\n","categories":["网络","科学上网"]},{"title":"P3TERXwarp","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/P3TERXwarp/","content":"[github author&#x3D;”” project&#x3D;”” &#x2F;] \n\n  \n\n\n\n\n首次运行\nbash &lt;(curl -fsSL git.io/warp.sh) menu\n日常维护\nbash warp.sh\n","categories":["网络","科学上网"]},{"title":"MisakaNo の 小破站","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/MisakaNo%20%E3%81%AE%20%E5%B0%8F%E7%A0%B4%E7%AB%99/","content":"\n博客\n\nMISAKA:\n\n- 首次运行\nwget -N https://gitlab.com/Misaka-blog/warp-script/-/raw/main/warp.sh &amp;&amp; bash warp.sh\n      - 日常维护\nbash warp.sh\n","categories":["网络","科学上网"]},{"title":"vaxilu-x-ui","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/vaxilu-x-ui/","content":"\n  \n\n\n\n\nbash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)\n","categories":["网络","科学上网"]},{"title":"vveg26","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/vveg26/","content":"\n  \n\n\n\n\n博客\n使用教程\nreality和hysteria2 vmess ws三合一脚本\nbash &lt;(curl -fsSL https://github.com/vveg26/sing-box-reality-hysteria2/raw/main/beta.sh)\nreality hysteria2二合一脚本\nbash &lt;(curl -fsSL https://github.com/vveg26/sing-box-reality-hysteria2/raw/main/install.sh)\nhysteria2端口跳跃功能\n因为只有官方客户端和nekobox支持端口跳跃，meta和sing-box并不会支持，所以脚本不添加，如果想要开启端口跳跃可根据ipv4或v6执行：\n# IPv4\niptables -t nat -A PREROUTING -i eth0 -p udp --dport 20000:50000 -j DNAT --to-destination :8443\n# IPv6\nip6tables -t nat -A PREROUTING -i eth0 -p udp --dport 20000:50000 -j DNAT --to-destination :8443\n上述命令的作用就是做了一个简单的流量转发，通过监听20000到50000端口的udp流量，并将它们转发到hysteria2的8443端口。\n关闭hy2端口跳跃：\n# IPv4\niptables -t nat -D PREROUTING -i eth0 -p udp --dport 20000:50000 -j DNAT --to-destination :8443\n# IPv6\nip6tables -t nat -D PREROUTING -i eth0 -p udp --dport 20000:50000 -j DNAT --to-destination :8443\n项目\n程序/root/sbox/sing-box服务端配置/root/sbox/sbconfig_server.json重启systemctl restart sing-box状态systemctl status sing-box查看日志journalctl -u sing-box -o cat -e实时日志journalctl -u sing-box -o cat -f\n\nwarp解锁v4 v6等操作自行使用warp-go脚本 具体操作就不说了\nwget -N https://gitlab.com/fscarmen/warp/-/raw/main/warp-go.sh &amp;&amp; bash warp-go.sh\n","categories":["网络","科学上网"]},{"title":"nodescatch2-0","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E6%A2%AF%E5%AD%90%E5%B7%A5%E5%85%B7/nodescatch2-0/","content":"名称\n\n  \n\n\n\n\n软件下载地址：点击下载无法下载的朋友直接进我的github仓库下载\n软件视频演示：当前版本目前已知问题：\n有效节点变无效：一般是vmess节点，导入节点使用的是subconverter进行节点格式转换，但是windows版的subconverter有个bug，转换clash后会将vmess节点的aid参数丢失，如果你是直接粘贴clash配置文件到节点列表，可能会导致本来可以使用的vmess节点测速显示无效，目前的解决方法是直接粘贴url格式的节点到节点列表再测速，剩下的只有等工具作者修复\n无法导入节点：和clash.net有冲突，因为clash.net也内置了subconverter，解决方法是直接删掉测速软件目录里的subconverter目录，但是这样的话在使用测速软件时就必须运行clash.net。或者先退出clash.net再测速\n切换测速配置文件失败：存在clash不支持的节点，建议导入到CFW看看是什么原因导致的clash内核不允许 h2/grpc 的节点tls为false，解决方法是将传输协议为h2或者grpc的节点删除或者使用Xray内核测速\n测速出现未授权：因为nodesCatch没有单独指定clash的配置路径，导致和CFW共用，又因为最新版CFW0.19.12新增了生成secret密码，而nodesCatch默认secret为空就导致了未授权的情况，所以使用最新版CFW的用户在测速会出现未授权的情况。解决方法：打开CFW主界面-&gt;打开Home Directory-&gt;用文本编辑器打开config.yaml-&gt;将secret这行删掉，secret为空最极端的情况会导致配置信息被篡改，并不会导致节点信息被泄露\n\n解决老版本遗留的问题：\n某些电脑无法运行（感谢小冷和大象帮忙测试）\n测下载中途有时会卡死\n节点名称乱码，部分节点无法导入\n内核启动失败导致节点全部被删除\n\n主要新增功能：\n集成subconverter订阅转换\nclash和Xray双内核测速\n节点直接推送到clash使用\n多线程测延迟和测下载\n测下载新增快速模式\n\n支持测速的协议：ShadowsocksShadowsocksRVmessVless(使用Xray内核)Trojansocks5http(s)\n测速对节点的影响：这个测速软件的原理就是下载一个10M大小的文件，通过下载所需的时间来推算速度，随便浏览几个网页都不止10M了，所以对节点几乎没有影响（仅对本软件的补充说明，不代表其他测速工具也是一样的原理）\n软件仅支持64位windows操作系统，32位系统没做测试，可以尝试替换以下依赖为32位：subconverter、clash、Xray(下载地址在软件的关于软件页面内，请自行解决)\n","categories":["网络","科学上网","工具"]},{"title":"解决vps节点无法访问chat-gpt的问题","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/%E8%A7%A3%E5%86%B3vps%E8%8A%82%E7%82%B9%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEchat-gpt%E7%9A%84%E9%97%AE%E9%A2%98/","content":"方法一：先putty登录vps服务器,用root权限安装如下脚本命令：\n# 自动配置 WARP WireGuard IPv4 网络\nbash &lt;(curl -fsSL git.io/warp.sh) 4\n完成安装后即可使用vps访问chatgpt了\n如果想关闭Cloudflare WARP功能：\n# Cloudflare WARP 一键配置脚本 功能菜单\nbash &lt;(curl -fsSL git.io/warp.sh) menu\n按提示选择管理WARP WireGuard网络\n再选择相应的功能即可\n参考https://p3terx.com/archives/cloudflare-warp-configuration-script.html\n方法二：因为chatgpt把很多机房IP封了。\n把VPS的IP伪装成家用IP。用warp来伪装，原理就是把VPS的出口流量转发到另一个IP（由cloudfare免费提供）上进行代理。\n具体操作：\n在VPS上\nbash &lt;(curl -fsSL git.io/warp.sh) d\n直接用一个解锁chatgpt的机场，例如https://songshuyun.top。\n亲测好用，搞完浏览器清一下缓存即可访问ChatGPT。这篇文章讲的很详细《Cloudflare WARP 一键安装脚本 使用教程》\n原来还要清浏览器缓存，怪不得一直不行\n","categories":["网络","科学上网"]},{"title":"Vps初始化","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/Vps%E5%88%9D%E5%A7%8B%E5%8C%96/","content":"更新debain系统更新包列表：\nsudo apt update\n升级已安装的软件包：\nsudo apt upgrade\n对于有可用的新版本的软件包，执行：\nsudo apt full-upgrade\n注意：在升级系统前，最好备份重要的文件。同时，建议在系统更新前确认好网络连\n修改hosts本地解析安装nano命令\nsudo apt updatesudo apt install nano\n编辑hosts文件将主机名 1151150048woiden.localdomain 与 IP 地址关联起来：\nsudo nano /etc/hosts127.0.0.1 localhost127.0.1.1 5163889416woiden.localdomain\n\n请注意，您需要将 1151150048woiden.localdomain 替换为您的实际主机名。完成后，请使用 Ctrl+O 和 Ctrl+X 保存并退出编辑器。   在nano编辑器中，你可以使用以下命令： Ctrl + O: 保存修改后的文件 Ctrl + X: 退出nano编辑器 Ctrl + K: 剪切当前行 Ctrl + U: 粘贴剪切的行 Ctrl + W: 搜索关键字 Ctrl + : 替换关键字 接下来，我们需要重新启动 Nginx 服务。您可以使用以下命令来重新启动 Nginx：\nsudo systemctl restart nginx\n查询端口占用，并禁用相关服务\nsudo lsof -i:80\n要禁用 Apache 服务器，可以使用以下命令：\nsudo systemctl stop apache2.servicesudo systemctl disable apache2.service\n\n      更新centos系统\n可以使用以下命令来更新CentOS 7.9系统： 首先，更新系统软件包缓存：\nsudo yum makecache\n然后，执行以下命令进行系统更新：\nsudo yum update\n如果有可用的安全更新，可以使用以下命令进行安全更新：\nsudo yum update--security\n这些命令将更新系统上所有已安装的软件包。更新过程中，可能需要您确认一些更改或输入密码。更新完成后，建议重新启动系统以应用所有更改。\n","categories":["网络","服务器","科学上网"]},{"title":"Gitbook安装与配置","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Page/Gitbook/Gitbook%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","content":"\n相关网站常用网站Markdown 和 GitBook 相关资源 \n          \n            \n              \n                \n              \n              Markdown 指南中文版 \n              Markdown 使用教程和指南\n            \n          \n          \n            \n              \n                \n              \n              npm \n              GitBook 插件 ancre-navigation\n            \n          \n          \n            \n              \n                \n              \n              程维扬的 GitBook 教程 \n              GitBook 教程和文档\n            \n          \n          \n            \n              \n                \n              \n              Jiangming's GitBook \n              GitBook 文档示例\n            \n          \n          \n            \n              \n                \n              \n              Snowdreams GitBook \n              开源 GitBook 示例\n            \n          \n          \n            \n              \n                \n              \n              Smoothies GitBook \n              GitBook 使用文档\n            \n          \n          \n            \n              \n                \n              \n              LBB4511 GitBook \n              GitBook 内容示例\n            \n          \n          \n            \n              \n                \n              \n              Haoqiangchen's GitBook \n              GitBook 配置指南\n            \n          \n          \n            \n              \n                \n              \n              Jiangming's Third Plugins \n              GitBook 第三方插件\n            \n          \n\n \n简介GitBook 是一种基于 Markdown 和 Git 的文档撰写和托管平台，它提供了一种简单的方式，用 Markdown 语言来写作，并将作品转换成电子书或者文档网站，方便阅读和分享。\nGitBook 的优点在于其易用性、灵活性和可定制性，适用于各种文档编写和托管需求，例如技术文档、手册、文档网站等。下面是 GitBook 的一些特点：\n\nMarkdown 支持：GitBook 使用 Markdown 作为文档撰写语言，支持 Markdown 所有的语法和扩展，使得文档编写变得简单、轻松和高效。\n版本控制：GitBook 基于 Git 版本控制系统构建，可以使用 Git 来管理文档的版本，以及进行协作编辑和审核。\n多种输出格式：GitBook 支持将文档导出为多种格式，包括 PDF、ePub 和 mobi 等电子书格式，以及网站的形式。\n插件支持：GitBook 允许用户根据自己的需求添加额外的功能，包括主题定制、插件扩展、搜索引擎优化等。\n部署方便：GitBook 可以将文档部署到多种静态站点托管服务上，例如 GitHub Pages、Netlify 和 Heroku 等。\n\nGitBook 适用于个人文档的撰写和管理，也适用于团队的协作和文档管理。\nGitBook.com 是一个围绕 GitBook 发行书籍的社区，提供免费和付费的服务，免费账户就可以享受诸多服务，包括：\n\n1 本私有书籍\n托管不限数量的公开书籍\n售卖不限数量的书籍，并分享 80% 的书籍收入\n不限数量的协作者\n免费的在线书籍编辑器\n\n对于普通用户来说，免费账号已经足够使用，虽然限制为 1 本私有书籍，但没有限制书籍的大小，非常适合个人的学习笔记。\n安装安装 GitBook 可以分为两种方式：全局安装和本地安装。\n全局安装 GitBook\n安装 Node.js：\n\n首先需要安装 Node.js，可以在 Node.js 官网上下载适合自己操作系统的版本进行安装。Node.js 版本在 10.x 版本不会报错，其他版本可能会报错。\n\n在 Windows 操作系统中，要将 Node.js 添加到系统环境变量中，可以按照以下步骤进行：\n\n打开“开始菜单”，搜索“环境变量”，选择“编辑系统环境变量”选项。\n在“系统属性”窗口中，选择“高级”选项卡，并点击“环境变量”按钮。\n在“环境变量”窗口中，找到“系统变量”区域，选择“Path”变量，并点击“编辑”按钮。\n在“编辑环境变量”窗口中，点击“新建”按钮，并输入 Node.js 的安装路径（例如：C:\\Program Files\\nodejs）。\n点击“确定”按钮保存修改，然后关闭所有窗口。\n\n\n添加完成后，可以在命令行终端中使用 Node.js 的命令和模块了。可以运行以下命令验证 Node.js 是否安装成功：\n\n\nnode -v\n\n如果输出了 Node.js 的版本号，则说明 Node.js 安装成功。\n\n安装 GitBook：\n\n打开命令行终端，运行以下命令来安装 GitBook：\n\nnpm install gitbook-cli -g\n\n这个命令会安装 GitBook 的命令行工具 gitbook-cli，并将其安装到系统全局路径中。\n\n验证安装：\n\n安装完成后，可以运行以下命令验证 GitBook 是否安装成功：\n\ngitbook --version\n\n如果显示 GitBook 的版本号，则说明 GitBook 安装成功。\n\n\n本地安装 GitBook\n安装 Node.js：同全局安装步骤。\n\n在项目目录下安装 GitBook：\n\n打开命令行终端，进入到项目目录下，运行以下命令来安装 GitBook：\n\nnpm install gitbook-cli --save-dev\n\n这个命令会将 GitBook 安装到项目目录下的 node_modules 目录中，并将其作为项目的开发依赖保存在 package.json 文件中。\n\n验证安装：\n\n安装完成后，可以运行以下命令验证 GitBook 是否安装成功：\n\n./node_modules/.bin/gitbook --version\n\n如果显示 GitBook 的版本号，则说明 GitBook 安装成功。\n\n\n安装完成后，可以使用 GitBook 来创建新的文档、编写和编辑文档，并将其导出为电子书或文档网站的形式。可以参考 GitBook 的官方文档来学习如何使用 GitBook：GitBook 官方文档\n使用GitBook 的基本用法非常简单，基本上就只有两步：\n\n使用 gitbook init 初始化书籍目录\n使用 gitbook serve 编译书籍\n\n下面将结合一个非常简单的实例，来介绍 GitBook 的基本用法。\ngitbook init首先，创建如下目录结构：\n$ tree book/book/├── README.md└── SUMMARY.md0 directories, 2 files\n\nREADME.md 和 SUMMARY.md 是两个必须文件，README.md 是对书籍的简单介绍：\nmarkdown复制代码# READMEThis is a book powered by [GitBook](https://github.com/GitbookIO/gitbook).\n\nSUMMARY.md 是书籍的目录结构，内容如下：\nmarkdown复制代码# SUMMARY* [Chapter1](chapter1/README.md)  * [Section1.1](chapter1/section1.1.md)  * [Section1.2](chapter1/section1.2.md)* [Chapter2](chapter2/README.md)\n\n创建了这两个文件后，使用 gitbook init，它会为我们创建 SUMMARY.md 中的目录结构。\nbash复制代码$ cd book$ gitbook init$ tree.├── README.md├── SUMMARY.md├── chapter1│   ├── README.md│   ├── section1.1.md│   └── section1.2.md└── chapter2    └── README.md2 directories, 6 files\n\n注意：gitbook init 只支持两级目录！\ngitbook serve书籍目录结构创建完成以后，就可以使用 gitbook serve 来编译和预览书籍了：\nbash复制代码$ gitbook servePress CTRL+C to quit ...Live reload server started on port: 35729Starting build ...Successfully built!Starting server ...Serving book on http://localhost:4000\n\ngitbook serve 命令实际上会首先调用 gitbook build 编译书籍，完成以后会打开一个 web 服务器，监听在本地的 4000 端口。\n现在，可以用浏览器打开 http://127.0.0.1:4000 查看书籍的效果，如下图所示：\n（这里可以插入预览图）\nGitBook 为我们创建了书籍目录结构后，就可以向其中添加真正的内容了。文件的编写使用 Markdown 语法，在文件修改过程中，每一次保存文件，gitbook serve 都会自动重新编译，所以可以持续通过浏览器来查看最新的书籍效果！\n发布部署到 GitHub将编译好的 _book 文件内容直接推送到 GitHub 仓库。\nbash复制代码# 初始化 Git 仓库$ git init# 添加远程仓库$ git remote add origin &lt;你的 GitHub 仓库地址&gt;# 添加所有文件$ git add .# 提交更改$ git commit -m &quot;Initial commit&quot;# 推送到远程仓库$ git push -u origin master\n\n完成上述步骤后，书籍就会部署到 GitHub 上了，可以通过 GitHub Pages 进行访问\n常用插件\n\n安装插件命令：\ngitbook init\n\nbook.js文件需要放在gitbook项目目录中\n\n常用插件列表\n\n\n插件名\n安装命令\n功能\n\n\n\naccordion\nnpm i  gitbook-plugin-accordion\n手风琴-折叠内容段落\n\n\nhide-element(插件没有效果)\nnpm i  gitbook-plugin-hide-element\n隐藏类名\n\n\ncode\nnpm i  gitbook-plugin-code-fox\nGitBook 的代码插件\n\n\nsharing\nnpm i  gitbook-plugin-sharing\n共享按钮\n\n\nsharing-plus\nnpm i  gitbook-plugin-sharing-plus\n一个强大的 GitBook 搜索插件\n\n\ndonate\nnpm i  gitbook-plugin-donate\nGitbook 捐赠打赏插件\n\n\nanchor-navigation-ex\nnpm i  gitbook-plugin-anchor-navigation-ex\n锚点-导航插件\n\n\nexpandable-chapters\nnpm i  gitbook-plugin-expandable-chapters\n为每个章节添加一个图标\n\n\nsidebar-style\nnpm i  gitbook-plugin-sidebar-style\n侧边栏样式\n\n\nsplitter\nnpm i  gitbook-plugin-splitter\n该插件提供了一个垂直条来划分摘要和主要内容\n\n\nemphasize\nnpm i  gitbook-plugin-emphasize\n强调并突出显示内容的特定部分\n\n\nedit-link\nnpm i  gitbook-plugin-edit-link\n在每个页面上添加了“编辑此页面”链接\n\n\ngithub\nnpm i  gitbook-plugin-github\n在右上角添加github图标\n\n\nlightbox\nnpm i  gitbook-plugin-lightbox\n点击图片弹窗显示\n\n\nyoutube\nnpm i  gitbook-plugin-youtube\n插入YouTube视频\n\n\ncopyright\nnpm i  gitbook-plugin-copyright\n版权保护插件\n\n\ntbfed-pagefooter\nnpm i  gitbook-plugin-tbfed-pagefooter\n版权信息插件\n\n\npageview-count\nnpm i  gitbook-plugin-pageview-count\n文档页面阅读数插件\n\n\naccordionExamplehttps://artalar.github.io/gitbook-plugin-accordion/\nUsageIn GitBook editor (or any else):\n%accordion%Some title here%accordion%Any content here%/accordion%\n\nthat`s all! But each tag should be in one paragraphsimilarly you can include accordion in accordion (like content)IE11+ (flexboxes)573 B minified, 282 B minified + gzipped\n\nInstallUpdate `book.json`, like: &#123;  &quot;gitbook&quot;: &quot;3.2.2&quot;,  &quot;title&quot;: &quot;Cool book&quot;,  &quot;plugins&quot;: \\[&quot;accordion&quot;\\] &#125;\nThen rungibook install \nThat`s all, see Usage\nhide-element插件没有效果\n隐藏您不想看到的元素。\n在book.json的plugins参数中添加插件名和配置信息：\n&#123;  &quot;plugins&quot;: \\[  &quot;hide-element&quot;  \\],  &quot;pluginsConfig&quot;: &#123;  &quot;hide-element&quot;: &#123;  &quot;elements&quot;: \\[&quot;.gitbook-link&quot;\\]  &#125;  &#125; &#125;\n上面的配置信息中设置了隐藏的类名，所以Published by GitBook 、本书使用 GitBook 发布 就看不见了。\n以下为可用方法：%accordion%隐藏删除 gitbook Published with GitBook 的方法%accordion%\n说明\n用GitBook生成的网页中，在左侧目录下方默认有一个Published with GitBook连接，可以将这个连接去掉，或者替换成其它连接。\n方法\n在gitbook站点目录创建_layouts-&gt;website-&gt;summary.html\n\n\n在summary.html中填写下面内容:\n&#123;% macro articles(\\_articles) %&#125;  &#123;% for article in \\_articles %&#125;  &lt;li class=&quot;chapter &#123;% if article.path == file.path and not article.anchor %&#125;active&#123;% endif %&#125;&quot; data-level=&quot;&#123;&#123; article.level &#125;&#125;&quot; &#123;% if article.path %&#125;data-path=&quot;&#123;&#123; article.pathresolveFile &#125;&#125;&quot;&#123;% endif %&#125;&gt;  &#123;% if article.path and getPageByPath(article.path) %&#125;  &lt;a href=&quot;&#123;&#123; article.pathresolveFile &#125;&#125;&#123;&#123; article.anchor &#125;&#125;&quot;&gt;  &#123;% elif article.url %&#125;  &lt;a target=&quot;\\_blank&quot; href=&quot;&#123;&#123; article.url &#125;&#125;&quot;&gt;  &#123;% else %&#125;  &lt;span&gt;  &#123;% endif %&#125;  &#123;% if article.level != &quot;0&quot; and config.pluginsConfig\\[&#x27;theme-default&#x27;\\].showLevel %&#125;  &lt;b&gt;&#123;&#123; article.level &#125;&#125;.&lt;/b&gt;  &#123;% endif %&#125;  &#123;&#123; article.title &#125;&#125;  &#123;% if article.path  or article.url %&#125;  &lt;/a&gt;  &#123;% else %&#125;  &lt;/span&gt;  &#123;% endif %&#125;  &#123;% if article.articles.length &gt; 0 %&#125;  &lt;ul class=&quot;articles&quot;&gt;  &#123;&#123; articles(article.articles, file, config) &#125;&#125;  &lt;/ul&gt;  &#123;% endif %&#125;  &lt;/li&gt;  &#123;% endfor %&#125; &#123;% endmacro %&#125; &lt;ul class=&quot;summary&quot;&gt;  &#123;% set \\_divider = false %&#125;  &#123;% if config.links.sidebar  %&#125;  &#123;% for linkTitle, link in config.links.sidebar  %&#125;  &#123;% set \\_divider = true %&#125;  &lt;li&gt;  &lt;a href=&quot;&#123;&#123; link &#125;&#125;&quot; target=&quot;\\_blank&quot; class=&quot;custom-link&quot;&gt;&#123;&#123; linkTitle &#125;&#125;&lt;/a&gt;  &lt;/li&gt;  &#123;% endfor %&#125;  &#123;% endif %&#125;  &#123;% if \\_divider %&#125;  &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;  &#123;% endif %&#125;  &#123;% for part in summary.parts %&#125;  &#123;% if part.title %&#125;  &lt;li class=&quot;header&quot;&gt;&#123;&#123; part.title &#125;&#125;&lt;/li&gt;  &#123;% elif not loop.first %&#125;  &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;  &#123;% endif %&#125;  &#123;&#123; articles(part.articles, file, config) &#125;&#125;  &#123;% endfor %&#125;  &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;  &lt;!--&lt;li&gt;--&gt;  &lt;!--&lt;a href=&quot;https://www.gitbook.com&quot; target=&quot;blank&quot; class=&quot;gitbook-link&quot;&gt;--&gt;  &lt;!--&#123;&#123; &quot;GITBOOK\\_LINK&quot;t &#125;&#125;--&gt;  &lt;!--&lt;/a&gt;--&gt;  &lt;!--&lt;/li&gt;--&gt; &lt;/ul&gt;\n重启gitbook serve即可，下面是效果\n\n%&#x2F;accordion%\ncodeGitBook 的代码插件\n代码块很酷，但还可以更酷。该插件添加了多行块的行号和复制按钮以轻松复制块的内容。\n太酷了，我可以看到它工作吗？\n下图显示了单行代码块：\n\n当显示多行代码时，会添加行号：\n\n我该如何使用这个插件？您只需编辑 book.json 并修改它，添加如下内容：\n&quot;plugins&quot; : \\[ &quot;code&quot; \\],\n这将为您设置好一切。如果您想摆脱复制按钮，请也添加此部分：\n&quot;pluginsConfig&quot;: &#123; &quot;code&quot;: &#123; &quot;copyButtons&quot;: false &#125;&#125;\nsharing该插件在 GitBook 网站工具栏中添加了共享按钮，用于在社交网络上共享书籍。\n禁用此插件这是一个默认插件，可以使用配置禁用它book.json：\n&#123;    plugins: \\[&quot;-sharing&quot;\\]&#125;\n配置该插件可以在以下位置配置book.json：\n默认配置是：\n&#123;    &quot;pluginsConfig&quot;: &#123;        &quot;sharing&quot;: &#123;            &quot;facebook&quot;: true,            &quot;twitter&quot;: true,            &quot;google&quot;: false,            &quot;weibo&quot;: false,            &quot;instapaper&quot;: false,            &quot;vk&quot;: false,            &quot;all&quot;: \\[                &quot;facebook&quot;, &quot;google&quot;, &quot;twitter&quot;,                &quot;weibo&quot;, &quot;instapaper&quot;            \\]        &#125;    &#125;&#125;\nsharing-plus一个强大的 GitBook 搜索插件。\n特征* Search any character* Search across element (for search code)* Remember search url\n使用这个插件在使用此插件之前，您应该先禁用默认的搜索插件，这是一个book.json配置示例：\n&#123;    plugins: \\[&quot;-lunr&quot;, &quot;-search&quot;, &quot;search-plus&quot;\\]&#125;\n\n注意：仅 gitbook &gt;&#x3D; 3.0.0 支持\n\n例子  \n打开https://lwdgit.github.io/gitbook-plugin-search-plus/或者自己测试一下\ngit clone &#x67;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;:lwdgit&#x2F;gitbook-plugin-search-plus.git -b gh-pagescd gitbook-plugin-search-plusnpm installnpm start然后打开http://127.0.0.1:4000\ndonateConfig:\n&#123;    &quot;plugins&quot;: \\[&quot;donate&quot;\\],    &quot;pluginsConfig&quot;: &#123;        &quot;donate&quot;: &#123;          &quot;wechat&quot;: &quot;例：/images/qr.png&quot;,          &quot;alipay&quot;: &quot;http://blog.willin.wang/static/images/qr.png&quot;,          &quot;title&quot;: &quot;默认空&quot;,          &quot;button&quot;: &quot;默认值：Donate&quot;,          &quot;alipayText&quot;: &quot;默认值：支付宝捐赠&quot;,          &quot;wechatText&quot;: &quot;默认值：微信捐赠&quot;        &#125;    &#125;&#125;\n演示：http://money.js.cool/\n如果喜欢，请打赏\nanchor-navigation-ex❗ 插件配置不兼容V1. X版本如下\n😘 我的英文不好，这个文档是通过机器翻译的，如果你不明白，请阅读中文文档，翻译本身\n插件功能\nH1-H6给页面标题增加锚点效果\n浮动导航模式\n页面顶部导航模式\n图标层次显示前的导航标题，H1、H3级别图标的自定义\nplugins[“theme-default”],页面标题级别与默认主题官方showLevel层次结构关联\nplugins[“theme-default”],插件风格网站默认主题三种风格：White、Sepia、Night\n&lt;extoc&gt;&lt;/extoc&gt;向页面添加标签会在此处生成 TOC 目录\n将标签添加&lt;! - ex_nonav -&gt;到页面，而不在该页面上生成浮动导航\nconfig.printLog&#x3D;true，打印过程当前进度，调试很有用\nconfig.multipleH1&#x3D;false，去掉丑陋的冗余1.序列号（比如你的书后面跟随一个只有一个H1标签的MD文件）\nconfig.showGoTop&#x3D;true,显示返回顶部按钮 V1.0.11+\nconfig.float.floatIcon ，可以配置浮动导航浮动图标样式 V1.0.12+\n&lt;!-- ex_nolevel --&gt;页面 添加标签，该页面不生成分层编号 V1.0.12+\n\n插件效果\n风格：简约\n点击查看效果图\n\n如何使用插件？在您的book. Json添加插件中：\n&#123;  &quot;plugins&quot;: \\[       &quot;anchor-navigation-ex&quot;  \\]&#125;\n然后安装插件：\ngitbook install ./\n可以使用的插件详细配置请点击这里查看\n或者安装单独的插件\nnpm install gitbook-plugin-anchor-navigation-ex --save\n\n打开 npm ：https://www.npmjs.com/package/gitbook-plugin-anchor-navigation-ex\n\n这设置了以下插件功能，并重写。\n\nhttps://github.com/zhangzq/gitbook-plugin-navigator\nhttps://github.com/yaneryou/gitbook-plugin-anchor-navigation\n\nexpandable-chapters该插件为每个章节添加一个图标，该图标有一个子级和用于子级列表折叠&#x2F;展开的 css 状态。\n如何使用它？将其添加到您的book.json配置中：\n&#123;    plugins: \\[&quot;collapsible-chapters&quot;\\]&#125;\n使用以下命令安装插件：\ngitbook install\n配置暂时不需要配置，可以留空。\n&#123;&quot;pluginsConfig&quot;: &#123;&quot;collapsible-chapters&quot;:&#123;&#125;&#125;&#125;\n也可以看看也许您会发现https://github.com/poojan/gitbook-plugin-toggle-chapters也很有用？\nsidebar-styleConfig:&#123;    &quot;plugins&quot;: \\[&quot;sidebar-style&quot;\\],    &quot;pluginsConfig&quot;: &#123;        &quot;sidebar-style&quot;: &#123;          &quot;title&quot;: &quot;书题&quot;,          &quot;author&quot;: &quot;作者&quot;        &#125;    &#125;&#125;\n如果 author 字段设置为空字符串，将不会显示作者信息\nsplitter\n该插件提供了一个垂直条来划分摘要和主要内容。\n\n其他功能\n它将把分离器的位置信息保存到sessionStorage中。\n\n如何使用它？将其添加到您的book.json配置中：\n&#123;    “插件” ：\\[ “分割器” \\] &#125;\n使用以下命令安装插件：\ngitbook init\n变更日志版本 0.0.6 (2016-12-06T16:54:38)\n\n修复：修复当屏幕尺寸的宽度为 600px 或更小时不执行任何操作 (#6)\n修复：将栏位置从“localStorage”更改为“sessiongStorage”（#10）\n\n版本 0.0.6 (2015-11-06T16:54:38)\n\n支持的 Gitbook v3\n\n版本 0.0.5 (2015-11-06T16:54:38)\n\n修复了 Gitbook V2.5.x 中摘要视图显示的切换按钮不起作用的问题\n\n该软件根据 MIT 许可证发布，请参阅 LICENSE.txt。\nemphasize强调 GitBook 中的文本\n强调并突出显示内容的特定部分\n如何使用它？\n在您的中配置插件book.json：\n&#123;    “插件”：\\[ “强调” \\] &#125;\n然后在您的 markdown&#x2F;asciidoc 内容中，使用以下命令突出显示一些文本：\n\n此文本已&#123;% em %&#125;突出显示！&#123;% endem %&#125;此文本&#123;% em %&#125;用 \\*\\*markdown\\*\\* 突出显示！&#123;% endem %&#125;此文本&#123;% em type=&quot;green&quot; %&#125;以绿色突出显示！&#123;% endem %&#125;此文本&#123;% em type=&quot;red&quot; %&#125;以红色突出显示！&#123;% endem %&#125;此文本&#123;% em color=&quot;#ff0000&quot; %&#125;使用自定义颜色突出显示！&#123;% endem %&#125;\n\nedit-link这个 GitBook 插件在每个页面上添加了“编辑此页面”链接。\n链接目标将是 Github 或 Gitlab 或任何存储库上该页面的源文件。\n截屏\n用法步骤1 - 更新book.json文件在你的 gitbookbook.json文件中，添加edit-link到plugins列表中。\n在 中pluginsConfig，设置base值，该值是 github 或 gitlab 或其他代码存储库的基本路径。尾部斜杠不是必需的。\n默认情况下，链接标签为“编辑此页面”。您可以使用插件配置更改它label。\nbook.jsongitbook 2.0.1 及以上版本的示例文件\n&#123;    &quot;gitbook&quot;: &quot;2.0.1&quot;,    &quot;plugins&quot;: \\[&quot;edit-link&quot;\\],    &quot;pluginsConfig&quot;: &#123;            &quot;edit-link&quot;: &#123;                &quot;base&quot;: &quot;https://github.com/USER/REPO/edit/BRANCH/path/to/book&quot;,                &quot;label&quot;: &quot;Edit This Page&quot;            &#125;    &#125;&#125;\nbook.jsongitbook 版本 2.0.1+ 和多语言标签的示例文件&#123;    &quot;gitbook&quot;: &quot;2.0.1&quot;,    &quot;plugins&quot;: \\[&quot;edit-link&quot;\\],    &quot;pluginsConfig&quot;: &#123;            &quot;edit-link&quot;: &#123;                &quot;base&quot;: &quot;https://github.com/USER/REPO/edit/BRANCH/path/to/book&quot;,                &quot;label&quot;: &#123;                    &quot;en&quot;: &quot;Edit This Page&quot;,                    &quot;de&quot;: &quot;Seite bearbeiten&quot;                &#125;            &#125;    &#125;&#125;\nbook.json旧版 gitbook 版本 &lt;&#x3D; 1.5.0 的示例文件&#123;    &quot;gitbook&quot;: &quot;1.5.0&quot;,    &quot;plugins&quot;: \\[&quot;edit-link@1.1.0&quot;\\],    &quot;pluginsConfig&quot;: &#123;            &quot;edit-link&quot;: &#123;                &quot;base&quot;: &quot;https://github.com/USER/REPO/edit/BRANCH/path/to/book&quot;,                &quot;label&quot;: &quot;Edit This Page&quot;            &#125;    &#125;&#125;\n注意book.json：如果您的书还没有，上面的代码片段可以用作完整文件。\n\nGithub&#x2F;Gitlab：在 string 中，如果您希望源文件以读取模式打开，而不是直接在 github&#x2F;gitlab 上以编辑模式打开，则...REPO/edit/BRANCH...可以替换edit为。tree\n\n步骤#2 - gitbook 命令跑步gitbook install。它会自动为你的书安装edit-linkgitbook 插件。这只需要一次。\n照常制作您的书 ( gitbook build) 或服务 ( )。gitbook serve\n故障排除\n如果您没有看到“编辑此页面”链接，请检查您的链接是否book.json有效。您可以使用这个在线工具 - http://json.parser.online.fr/beta/\n检查您是否使用默认的 gitbook 主题。不建议直接修改gitbook主题。\n\n已知问题Gitbook 2.0.1 删除了page:after该插件所需的钩子。这里报告了一个问题 - https://github.com/GitbookIO/gitbook/issues/724但同时该插件正在使用此拉取请求添加的解决方法 - https://github.com/rtCamp/gitbook-plugin-edit -链接/拉/4\n因此，当使用 Gitbook 2.0.1 时，您可能会在运行构建时在控制台中看到以下警告：\n\n警告：插件“gitbook-plugin-edit-link”使用的挂钩“page”已弃用，并将在未来版本中删除\n\n您现在可以安全地忽略上述警告。\n这是如何运作的？该插件只是在解析的页面内容中查找 HTML 注释&lt;!-- Actions Right --&gt;，并在 之前插入“编辑链接”HTML &lt;!-- Actions Right --&gt;。\n这意味着如果 HTML 注释发生变化，这个插件就会崩溃，但我希望在发生这种情况时能够轻松修复它。\ngithubgithub 插件会在右上角添加一个 github 的图标，可以通过插件属性配置链接，点击后可以进入自定义的链接页面。\n配置使用方法：\n&#123;    &quot;plugins&quot;: \\[         &quot;github&quot;     \\],    &quot;pluginsConfig&quot;: &#123;        &quot;github&quot;: &#123;            &quot;url&quot;: &quot;https://github.com/jiangminggithub&quot;        &#125;    &#125;&#125;\n插件 Github 地址：https://github.com/GitbookIO/plugin-github\nlightbox这个插件可以单击图片，以图片本身大小的方式弹窗显示图片和一些图片相关的 Alt 的信息。\n配置使用方法：\n&#123;    &quot;plugins&quot;: \\[        &quot;lightbox&quot;    \\],    &quot;lightbox&quot;: &#123;        &quot;includeJQuery&quot;: false,        &quot;sameUuid&quot;: true,        &quot;options&quot;: &#123;            &quot;resizeDuration&quot;: 500,            &quot;wrapAround&quot;: false        &#125;    &#125;&#125;\n配置参数介绍：\n\nincludeJQuery: 如果你的项目中已经引入了 JQuery 可以在此设置是否包含插件本身的 JQuery。\nsameUuid：在图片预览中添加上一个、下一个按钮来浏览本页面的图片配置。\noptions： 这个选项配置显示的动画时长，是否包裹等相关配置。\n\nyoutube如何使用它？\n将以下内容添加到您的book.json文件中，然后运行gitbook install：\n&#123;    “插件” ：\\[ “ youtube ” \\] &#125;\n您现在可以使用此标签将 YouTube 视频添加到您的图书中：\n看看这个视频：\n&#123;% youtube  %&#125;https://www.youtube.com/watch?v=hI6yCMjGoJs &#123;% endyoutube %&#125;\n该视频将被网站中的嵌入 iframe 以及电子书版本中的链接所取代。\ncopyright\ngitbook-plugin-copyright 是基于Gitbook实现的版权保护插件,用于复制内容时追加版权信息以及文章末尾添加版权小尾巴.\n\n🏠 主页\nGithub : https://snowdreams1006.github.io/gitbook-plugin-copyright/\nGitee : https://snowdreams1006.gitee.io/gitbook-plugin-copyright/\nGitlab : https://snowdreams1006.gitlab.io/gitbook-plugin-copyright/\n\n效果\n特色\n支持复制内容自动追加版本保护信息\n支持文章末尾自动生成版本保护尾巴\n支持自定义小尾巴版权保护图片\n支持 Gitbook 多语言环境\n\n✨ 示例不仅 gitbook-plugin-copyright 官方文档已整合 copyright 版权保护插件,此外还提供了示例项目,详情参考 example 目录.\n\n官方文档\n官方示例\n\n&#123;    &quot;plugins&quot;: \\[&quot;copyright&quot;\\],    &quot;pluginsConfig&quot;: &#123;        &quot;copyright&quot;: &#123;            &quot;site&quot;: &quot;https://snowdreams1006.github.io/gitbook-plugin-copyright&quot;,            &quot;author&quot;: &quot;雪之梦技术驿站&quot;,            &quot;website&quot;: &quot;雪之梦技术驿站&quot;,            &quot;image&quot;: &quot;https://snowdreams1006.github.io/snowdreams1006-wechat-open.png&quot;,            &quot;copyProtect&quot;: false        &#125;    &#125;&#125;\n🚀 用法Step #1 - 更新 book.json 配置文件\n在 book.json 配置文件中,添加 copyright 到 plugins 列表.\n在 book.json 配置文件中,配置 pluginsConfig 对象.\n\n单语言版简单示例 book.json\n&#123;    &quot;plugins&quot;: \\[&quot;copyright&quot;\\],    &quot;pluginsConfig&quot;: &#123;        &quot;copyright&quot;: &#123;            &quot;site&quot;: &quot;https://snowdreams1006.github.io/gitbook-plugin-copyright&quot;,            &quot;author&quot;: &quot;雪之梦技术驿站&quot;,            &quot;website&quot;: &quot;雪之梦技术驿站&quot;,            &quot;image&quot;: &quot;https://snowdreams1006.github.io/snowdreams1006-wechat-open.png&quot;,            &quot;copyProtect&quot;: false        &#125;    &#125;&#125;\n多语言版简单示例 book.json\n&#123;    &quot;plugins&quot;: \\[&quot;copyright&quot;\\],    &quot;pluginsConfig&quot;: &#123;        &quot;copyright&quot;: &#123;            &quot;site&quot;: &quot;https://snowdreams1006.github.io/gitbook-plugin-copyright&quot;,            &quot;author&quot;: &#123;                &quot;en&quot;: &quot;snowdreams1006&quot;,                &quot;zh&quot;: &quot;雪之梦技术驿站&quot;            &#125;,            &quot;website&quot;: &#123;                &quot;en&quot;: &quot;snowdreams1006&#x27;s Gitbook&quot;,                &quot;zh&quot;: &quot;雪之梦技术驿站&quot;            &#125;,            &quot;image&quot;: &#123;                &quot;en&quot;: &quot;https://img.shields.io/badge/github-snowdreams1006-brightgreen.svg&quot;,                &quot;zh&quot;: &quot;https://snowdreams1006.github.io/snowdreams1006-wechat-open.png&quot;            &#125;,            &quot;copyProtect&quot;: false        &#125;    &#125;&#125;\n其中,配置参数含义如下:\n\nsite : [必选]部署网站基本路径\nauthor : [必选]作者信息\nwebsite : [必选]网站名称\nimage : [可选]版权保护图片\ncopyProtect : [可选]复制内容是否追加版权保护信息\n\nStep #2 - 运行 gitbook 相关命令\n运行 gitbook install 命令安装到本地项目\n\ngitbook install\n\n运行 gitbook build 命令构建本地项目或者 gitbook serve 启动本地服务.\n\ngitbook build\n或者\ngitbook serve\ntbfed-pagefooter\n插件配置\n\n\n&quot;tbfed-pagefooter&quot;: &#123;&quot;copyright&quot;:&quot;&amp;copy Taobao FED Team&quot;,&quot;modify\\_label&quot;: &quot;该文件修订时间：&quot;,&quot;modify\\_format&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;&#125;&gt;&gt; \n\ncopyright 和 modify_label 支持 html 代码\npageview-count文档页面阅读数插件\nInstallation\nIn your book.json add the plugin:\n&#123; &quot;plugins&quot;: \\[ &quot;pageview-count&quot; \\]&#125;\n我的配置插件安装命令\ngitbook install ./\nbook.json文件如下：\n&#123;    &quot;title&quot;: &quot;我的电脑&quot;,    &quot;author&quot;: &quot;zhl&quot;,    &quot;description&quot;: &quot;我的电脑安装软件工具合集&quot;,    &quot;generator&quot;: &quot;site&quot;,    &quot;language&quot;: &quot;zh-hans&quot;,    &quot;links&quot;: &#123;      &quot;sidebar&quot;: &#123;        &quot;明&quot;: &quot; http://www.xxx.com/&quot;      &#125;    &#125;,    &quot;plugins&quot;: [      &quot;accordion&quot;,      &quot;hide-element&quot;,      &quot;code&quot;,      &quot;-sharing&quot;,       &quot;sharing-plus&quot;,      &quot;donate&quot;,      &quot;anchor-navigation-ex&quot;,      &quot;expandable-chapters&quot;,      &quot;sidebar-style&quot;,      &quot;splitter&quot;,      &quot;emphasize&quot;,      &quot;edit-link&quot;,      &quot;github&quot;,      &quot;lightbox&quot;,      &quot;youtube&quot;,      &quot;copyright&quot;,      &quot;tbfed-pagefooter&quot;,      &quot;pageview-count&quot;  ],    &quot;pluginsConfig&quot;: &#123;      &quot;hide-element&quot;: &#123;      &quot;elements&quot;: [&quot;.gitbook-link&quot;]  &#125;,    &quot;sharing&quot;: &#123;      &quot;douban&quot;: false,      &quot;facebook&quot;: false,      &quot;google&quot;: true,      &quot;pocket&quot;: false,      &quot;qq&quot;: false,      &quot;qzone&quot;: true,      &quot;twitter&quot;: false,      &quot;weibo&quot;: true,   &quot;all&quot;: [        &quot;douban&quot;, &quot;facebook&quot;, &quot;google&quot;, &quot;instapaper&quot;, &quot;linkedin&quot;,&quot;twitter&quot;, &quot;weibo&quot;,         &quot;messenger&quot;,&quot;qq&quot;, &quot;qzone&quot;,&quot;viber&quot;,&quot;whatsapp&quot;    ]  &#125;,    &quot;donate&quot;: &#123;      &quot;wechat&quot;: &quot; https://gcore.jsdelivr.net/gh/xxx/PicGo/tubiao/weixin.jpg&quot;,      &quot;alipay&quot;: &quot; https://gcore.jsdelivr.net/gh/xxx/PicGo/tubiao/zhifubao.jpg&quot;,      &quot;title&quot;: &quot;鼓励一下&quot;,      &quot;button&quot;: &quot;赏&quot;,      &quot;alipayText&quot;: &quot;支付宝打赏&quot;,      &quot;wechatText&quot;: &quot;微信打赏&quot;  &#125;,    &quot;sidebar-style&quot;: &#123;      &quot;title&quot;: &quot;我的电脑&quot;,      &quot;author&quot;: &quot;xxx作者&quot;  &#125;,  &quot;github&quot;: &#123;    &quot;url&quot;: &quot; https://github.com/&quot;  &#125;,  &quot;edit-link&quot;: &#123;    &quot;base&quot;: &quot; https://github.com/xxx/book/edit/html/&quot;,    &quot;label&quot;: &quot;编辑&quot;  &#125;,  &quot;lightbox&quot;: &#123;    &quot;includeJQuery&quot;: false,    &quot;sameUuid&quot;: true,    &quot;options&quot;: &#123;    &quot;resizeDuration&quot;: 200,    &quot;wrapAround&quot;: true    &#125;  &#125;,  &quot;copyright&quot;: &#123;    &quot;site&quot;: &quot; http://xx.xx.xxm&quot;,    &quot;author&quot;: &quot;xxx&quot;,    &quot;website&quot;: &quot;xx工作室&quot;,    &quot;image&quot;: &quot;&quot;,    &quot;copyProtect&quot;: false  &#125;,  &quot;tbfed-pagefooter&quot;: &#123;    &quot;copyright&quot;:&quot;Copyright &amp;copy namexxx 2022&quot;,    &quot;modify_label&quot;: &quot;该文件修订时间：&quot;,    &quot;modify_format&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;  &#125;                  &#125;&#125;\n","categories":["网络","Github","Github Page","Gitbook"]},{"title":"nvm 安装与使用","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Page/Hexo/nvm%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","content":"在我们的日常开发中经常会遇到这种情况：手上有好几个项目，每个项目的需求不同，进而不同项目必须依赖不同版的 NodeJS 运行环境。如果没有一个合适的工具，这个问题将非常棘手。\nnvm 应运而生，nvm 是 Mac 下的 node 管理工具，有点类似管理 Ruby 的 rvm，如果需要管理 Windows 下的 node，官方推荐使用 nvmw 或 nvm-windows。不过，nvm-windows 并不是 nvm 的简单移植，他们也没有任何关系。但下面介绍的所有命令，都可以在 nvm-windows 中运行。\n\nnvm 与 n 的区别node 版本管理工具还有一个是 TJ大神的 n 命令，n 命令是作为一个 node 的模块而存在，而 nvm 是一个独立于 node&#x2F;npm 的外部 shell 脚本，因此 n 命令相比 nvm 更加局限。\n由于 npm 安装的模块路径均为 &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules，当使用 n 切换不同的 node 版本时，实际上会共用全局的 node&#x2F;npm 目录。 因此不能很好的满足『按不同 node 版本使用不同全局 node 模块』的需求。\n\n卸载全局安装的 node&#x2F;npm在官网下载的 node 安装包，运行后会自动安装在全局目录，使用过程中经常会遇到一些权限问题，所以推荐按照以下方法卸载全局安装的 node&#x2F;npm。\n首先，打开你 Finder，按 shift+command+G，打开前往文件夹的窗口，分别输入下列目录进去之后删除 node 和 node_modules 相关的文件和文件夹:\n\n打开 &#x2F;usr&#x2F;local&#x2F;lib，删除 node 和 node_modules 相关的文件和文件夹\n打开 &#x2F;usr&#x2F;local&#x2F;include，删除 node 和 node_modules 相关的文件和文件夹\n如果你是使用的 brew install node 安装的 NodeJS，那么你还需要在终端中执行 brew uninstall node 命令来卸载\n检查你的个人主文件夹下面的所有的 local、lib 以及 include 文件夹，并且删除所有与 node 和 node_modules 相关的文件以及文件夹\n打开 &#x2F;usr&#x2F;local&#x2F;bin 并删除 node 可执行文件\n\n你可能还需要在你的终端中输入一些额外的指令：\nsudo rm /usr/local/bin/npmsudo rm /usr/local/share/man/man1/node.1sudo rm /usr/local/lib/dtrace/node.dsudo rm -rf ~/.npmsudo rm -rf ~/.node-gypsudo rm /opt/local/bin/nodesudo rm /opt/local/include/nodesudo rm -rf /opt/local/lib/node_modules\n\n\nWindows 安装首先最重要的是：一定要卸载已安装的 NodeJS，否则会发生冲突。然后下载 nvm-windows 最新安装包，直接安装即可。\n\nOS X&#x2F;Linux 安装与 Windows 不同，我们并不一定要先卸载原有的 NodeJS。当然我们推荐还是先卸载掉比较好。另外，你还需要 C++ 编译器，Linux 发行版一般不用担心，像 Ubuntu 都可以直接用 build-essential 套件，OS X 的话，可以用 X-Code 的命令行工具。运行这个命令即可：\nxcode-select --install\n\n在 Linux 中：（如果是 Debian 发行版）\nsudo apt-get install build-essential\n\n然后我们可以使用\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash\n\n或者\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash\n\n从远程下载 install.sh 脚本并执行。注意这个版本年数字 v0.33.0 会随着项目开发而变化。随时通过官方最新安装命令来检查最新安装版本是有好处的。\n\n安装多版本 node&#x2F;npm例如，我们要安装4.2.2版本，可以用如下命令：\nnvm install 4.2.2\n\nnvm 遵守语义化版本命名规则。例如，你想安装最新的 4.2 系列的最新的一个版本的话，可以运行：\nnvm install 4.2\n\nnvm 会寻找 4.2.x 中最高的版本来安装。\n你可以通过以下命令来列出远程服务器上所有的可用版本：\nnvm ls-remote\n\nWindows 的话，就是：\nnvm ls available\n\n\n在不同版本间切换每当我们安装了一个新版本 Node 后，全局环境会自动把这个新版本设置为默认。\nnvm 提供了 nvm use 命令。这个命令的使用方法和 install 命令类似。\n例如，切换到 4.2.2：\nnvm use 4.2.2\n\n切换到最新的 4.2.x：\nnvm use 4.2\n\n切换到 iojs：\nnvm use iojs-v3.2.0\n\n切换到最新版：\nnvm use node\n\n每次执行切换的时候，系统都会把 node 的可执行文件链接放到特定版本的文件上。\n我们还可以用 nvm 给不同的版本号设置别名：\nnvm alias awesome-version 4.2.2\n\n我们给 4.2.2 这个版本号起了一个名字叫做 awesome-version，然后我们可以运行：\nnvm use awesome-version\n\n下面这个命令可以取消别名：\nnvm unalias awesome-version\n\n另外，你还可以设置 default 这个特殊别名：\nnvm alias default node\n\n\n列出已安装实例nvm ls\n\n\n上面绿色箭头是当前正在使用的版本，下面列出的还有设置过的别名。\n\n在项目中使用不同版本的 Node我们可以通过创建项目目录中的 .nvmrc 文件来指定要使用的 Node 版本。之后在项目目录中执行 nvm use 即可。**.nvmrc** 文件内容只需要遵守上文提到的语义化版本规则即可。另外还有个工具叫做 avn，可以自动化这个过程。\n\n在多环境中，npm该如何使用呢？每个版本的 Node 都会自带一个不同版本的 npm，可以用 npm -v 来查看 npm 的版本。全局安装的 npm 包并不会在不同的 Node 环境中共享，因为这会引起兼容问题。它们被放在了不同版本的目录下，例如 ~&#x2F;.nvm&#x2F;versions&#x2F;node&#x2F;&#x2F;lib&#x2F;node_modules 这样的目录。这刚好也省去我们在 Linux 中使用 sudo 的功夫了。因为这是用户的主文件夹，并不会引起权限问题。\n但问题来了，我们安装过的 npm 包，都要重新再装一次？幸运的是，我们有个办法来解决我们的问题，运行下面这个命令，可以从特定版本导入到我们将要安装的新版本 Node：\nnvm install v5.0.0 --reinstall-packages-from=4.2\n\n\n其他命令直接运行特定版本的 Node\nnvm run 4.2.2 --version\n\n在当前终端的子进程中运行特定版本的 Node\nnvm exec 4.2.2 node --version\n\n确认某个版本Node的路径\nnvm which 4.2.2\n\n安装 Node 的其他实现，例如 iojs（一个基于 ES6 的 Node 实现，现在已经和 Node 合并）\nnvm install iojs-v3.2.0\n\n快捷命令：\n\nnvm install node 安装最新版 Node\nnvm install iojs 安装最新版 iojs\nnvm install unstable 安装最新不稳定版本的 Node\n\n","categories":["网络","Github","Github Page","Hexo"]},{"title":"Hexo安装与配置","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Page/Hexo/Hexo%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","content":"Node\n下载网站：https://nodejs.org/en/download\nNode.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。\nNode.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)\n下载预构建的二进制文件\nnode版本Gitbook版本限制在14左右，hexo不同版本会有一些插件报错。\n将下载后的压缩包解压到安装目录后，在电脑系统环境变量path里添加node的路径即可。\n\n\nNode.js 版本限制\n如果你坚持使用旧的 Node.js，你可以考虑安装 Hexo 的过去版本。\n请注意，我们不提供对过去版本 Hexo 的错误修复。\n我们强烈建议永远安装 最新版本 的 Hexo，以及 推荐的 Node.js 版本。\n\n\n\nHexo 版本\n最低版本 (Node.js 版本)\n最高版本 (Node.js 版本)\n\n\n\n7.0+\n14.0.0\nlatest\n\n\n6.2+\n12.13.0\nlatest\n\n\n6.0+\n12.13.0\n18.5.0\n\n\n5.0+\n10.13.0\n12.0.0\n\n\n4.1 - 4.2\n8.10\n10.0.0\n\n\n4.0\n8.6\n8.10.0\n\n\n3.3 - 3.9\n6.9\n8.0.0\n\n\n3.2 - 3.3\n0.12\n未知\n\n\n3.0 - 3.1\n0.10 或 iojs\n未知\n\n\n0.0.1 - 2.8\n0.10\n未知\n\n\n\nGit\nWindows：下载并安装 git。\nMac：使用 Homebrew, MacPorts 或者下载 安装程序。\nLinux (Ubuntu, Debian)：sudo apt-get install git-core\nLinux (Fedora, Red Hat, CentOS)：sudo yum install git-core\n\n\nMac 用户\n如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。\n\n\nWindows 用户\n对于中国大陆地区用户，可以前往 淘宝 Git for Windows 镜像 下载 git 安装包。\n\nhexo安装全局安装所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n$ npm install -g hexo-cli\n\n局部安装和使用对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。\n$ npm install hexo\n\n安装以后，可以使用以下两种方式执行 Hexo：\n\nnpx hexo &lt;command&gt;\nLinux 用户可以将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo &lt;command&gt;：\n\necho &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile\n\n\n\nButterfly主题安装与配置git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n\n参考链接：https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D\n","categories":["网络","Github","Github Page","Hexo"]},{"title":"免费节点","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E7%A7%91%E5%AD%A6%E8%8A%82%E7%82%B9/%E5%85%8D%E8%B4%B9%E8%8A%82%E7%82%B9/","content":"\n订阅链接\nhttps://github.com/freefq/free\nhttps://bulinkbulink.com/freefq/free/master/v2\nhttps://github.com/selierlin/Share-SSR-V2ray\nhttps://github.com/Pawdroid/Free-servers\nhttps://ghproxy.com/https://raw.githubusercontent.com/Pawdroid/Free-servers/main/sub\n\n\n\n收费节点\nV\nC\n\n\n\n\n\n\nGitHub 1\nV\nC\nFree-servers\nhttps://v2cross.com/\n\n\n\nGitHub 2\nV\nC\nfree\nhttps://www.burstlinker.com/\n\n\n\nGitHub 3\nV\nC\nNoMoreWalls\nhttps://peasoft.github.io/NWalls.html\n\n\n\nGitHub 4\nV\nC\nAuto_proxy\n\n\n\n\nGitHub 5\nV\nC\nv2ray\n\n\n\n\nGithub 6\nV\nC\nchromego_merge\nhttps://blog.mareep.net/\n\n\n\nGithub 7\nV\nC\nchromegopacs\n\n\n\n\n","categories":["网络","科学上网","科学节点"]},{"title":"ThinkPad E530 黑苹果","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Mac/%E9%BB%91%E8%8B%B9%E6%9E%9C/ThinkPad%20E530%20%E9%BB%91%E8%8B%B9%E6%9E%9C/","content":"\n\n  \n\n\n\n\n\nEFI：Github\n镜像地址：https://cloud.189.cn/t/BfM7NbEVvEV3 （访问码：hqw0）来自黑果小兵\nBios设置: 关于Thinkpad的bios选项（转载） - rookieagle - 博客园 (cnblogs.com)\n常见报错:  \n\n这个“安装 macOS Mojave” 应用程序副本已损坏,不能用来安装macOS\n如何解决“macOS Sonoma与此Mac不兼容。”的问题，简单的解决方式\n\n\nEFI修正更新\n\n如何解决“macOS Sonoma与此Mac不兼容。”的问题，简单的解决方式修改2019以后的机型\n\nU盘镜像加工利用balenaEtcher加工，没啥好说的\n优化小软件\n  \n\n\n\n","categories":["系统","Mac","黑苹果"]},{"title":"搬瓦工相关网站","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF/%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99/","content":"\n\n\n\n网站\n域名\n简介\n\n\n\nBandwagonHost 主站点\nhttps://bandwagonhost.com/\n搬瓦工主网站\n\n\nBandwagonHost 备用站点\nhttps://bwh81.net/\n搬瓦工备用网站\n\n\n搬瓦工后台\nhttps://kiwivm.64clouds.com/\n搬瓦工后台管理页面\n\n\n搬瓦工VPS\nhttps://www.bandwagonhost.net/\n搬瓦工测试方案\n\n\n搬瓦工的维基百科\nhttps://bwg.wiki/\n把瓦工的相关资料\n\n\n","categories":["网络","服务器"]},{"title":"配置Linux虚拟机使用主机的v2ray代理","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/%E9%85%8D%E7%BD%AELinux%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E4%B8%BB%E6%9C%BA%E7%9A%84v2ray%E4%BB%A3%E7%90%86/","content":"\n\n虚拟机下安装一些工具时需要访问外网，由于主机下有v2ray客户端，所以可以使用主机的代理。\n\n主机端设置（Windows）\n修改config.json中”inbounds”下的”listen”为”0.0.0.0”，并修改config.json文件属性为只读，防止GUI修改该文件\n\nv2ray的UI中“参数设置”-“v2rayN设置”-“允许来自局域网的连接”\n\n防火墙设置：“设置”-“Windows安全中心”-“防火墙和网络保护”-“高级设置”-“入站规则”-“虚拟机监控（回显请求-ICMPv4&#x2F;v6-in）”，防止虚拟机ping不通网关\n\n使用ipconfig查看VMware Network Adapter VMnet8的ip地址\n\n\n\n虚拟机端设置（Ubuntu）\n“System      Settings”-“Network”-“Network proxy”，在Socks Host里写入之前查到的ip地址\n\n修改火狐浏览器的代理设置：“设置（齿轮按钮）”-“General”-“Network Settings”-“Configure Proxy Access to the Internet”，设置为Use system proxy settings \n\n尝试使用Google成功。 \n\n\n部分命令可能需要工具proxychains，见这篇教程\n","categories":["网络","本地服务","Vmware"]},{"title":"微星Z490 A黑苹果配置过程","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Mac/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E5%BE%AE%E6%98%9FZ490%20A%E9%BB%91%E8%8B%B9%E6%9E%9C%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B/","content":"\n参考\n  \n\n\n\n\n参考内容如下：\nEFI文件： https://github.com/evling2020/OpenCore \n参考配置清单： https://zhuanlan.zhihu.com/p/431434807 \n123云盘链接： https://www.123pan.com/s/5a5DVv-poQ0v.html \n安装过程步骤：https://post.smzdm.com/p/agqq02rw/\nBios设置：https://www.youtube.com/watch?v=Pq9RPHglK64  \n\n主机配置清单\n\n\n部件\n选品名称\n尺寸\n功率\n淘宝价格&#x2F;链接\n京东价格\n闲鱼\n价格（元）\n\n\n\ncpu\n英特尔  i7 10700K\n37.5×37.5mm\n125W\n1790\n2300\n\n1780.00\n\n\n主板\n微星  Z490-A PRO\n30.5×24.4cm\n35W\n522\n1589\n\n539\n\n\n显卡\n蓝宝石  RX 6600XT 白金 OC 8G\n240x120x45mm\n160W\n1348\n2300\n\n1908\n\n\n内存\n金士顿32g  3600 单条\n\n20W\n600\n\n\n569\n\n\n硬盘\n西部数据黑盘 sn750 500G2    2392  西数机械硬盘1T               439\n80x22x2mm\n10W\n478\n\n\n259\n\n\n机箱\n乔思伯U4  PLUS\n440 x  210 x 483mm\n\n260\n\n\n879\n\n\n电源\n金牌巨龙  GW-6800电竞版(600W)\n15014086mm\n700W\n359\n\n\n350\n\n\nCPU散热器\n九州风神大霜塔V5\n129136157mm\n200W\n190\n\n\n\n\n\n机箱散热\n利民c12c台式电脑机箱散热\n12012025mm\n\n88\n\n\n\n\n\n\n\n\n\n5535\n\n\n6280\n\n\nCPU英特尔 i7 10700K⏩淘宝链接\n\ni7-10700K 是英特尔第十代酷睿系列的处理器，采用了14纳米工艺，具有8个物理核心和16个线程，主频为3.8 GHz，可加速至最大5.1 GHz。它还配备了16MB的L3缓存，以及内置的UHD Graphics 630显卡。\n总体来说，i7-10700K 是一款性能强劲的处理器，适用于多任务处理和高性能计算。它可以处理大量数据、多线程应用和高负载游戏。不过需要注意的是，这款处理器的功耗相对较高，需要搭配散热器进行散热，同时需要一块支持Z490芯片组的主板来发挥最大性能。\n以下是i7-10700K的详细参数：\n\n物理核心数：8\n线程数：16\n主频：3.8 GHz\n最大睿频：5.1 GHz\n缓存：16 MB L3\n集成显卡：Intel UHD Graphics 630\n最大支持内存频率：DDR4-2933\n支持的最大PCIe通道数：16\n支持的最大存储器数目：2\nTDP：125 W\n制造工艺：14 nm\n套接字：LGA1200\n\n最大支持内存频率指的是i7-10700K处理器所支持的内存速度的最高值，即在主板和内存组合支持的情况下，可以使用的最高内存频率。对于i7-10700K，最大支持内存频率为DDR4-2933，这意味着它可以使用支持DDR4-2933及以下频率的内存模块，但如果使用超过该频率的内存模块，则处理器可能无法正常工作，甚至会出现系统稳定性问题。所以在选择内存时，应该选择与i7-10700K处理器相匹配的内存模块，以发挥最佳性能。\n\nCPU风扇九州风神大霜塔V5⏩淘宝链接\n\n以下是九州风神大霜塔V5的详细参数：\n\n尺寸：140mm x 165mm x 165mm（宽 x 长 x     高）\n散热器材质：铝合金 + 镍铜合金\n风扇尺寸：120mm x 120mm x 25mm\n风扇转速：700-1500RPM\n噪音等级：≤26.1dB(A)\n风量：51.15CFM\n散热器重量：1096g\n支持CPU类型：Intel LGA     775&#x2F;115x&#x2F;1366&#x2F;1200&#x2F;2066；AMD AM2&#x2F;AM2+&#x2F;AM3&#x2F;AM3+&#x2F;AM4&#x2F;FM1&#x2F;FM2&#x2F;FM2+\n功率：TDP≤250W\n\n\n主板微星 Z490-A PRO⏩淘宝链接\n\n微星 Z490-A PRO是一款主打性价比的Intel Z490系列主板，适用于第10代Intel Core处理器。下面是该主板的主要规格和特点：\n\nCPU支持：适用于第10代Intel Core处理器，包括Intel     Core i9&#x2F;i7&#x2F;i5&#x2F;i3&#x2F;Pentium&#x2F;Celeron处理器。\n内存支持：支持双通道DDR4内存，最高支持128GB内存容量，支持频率达到4800MHz。\n扩展插槽：提供1个PCI-E 3.0 x16插槽、1个PCI-E     3.0 x16插槽（x4模式）、3个PCI-E 3.0 x1插槽。\n存储接口：提供6个SATA     6Gb&#x2F;s接口和2个M.2接口，支持Intel Optane存储技术。\n网络支持：提供Realtek 8111H千兆以太网接口。\n后置I&#x2F;O接口：提供PS&#x2F;2键盘&#x2F;鼠标接口、2个USB     2.0接口、4个USB 3.2 Gen     1接口、1个HDMI接口、1个DisplayPort接口、1个DVI-D接口、1个RJ45千兆网口、6个音频接口。\n其他特点：支持Intel Turbo Boost技术、Intel     Optane内存技术、Intel Rapid Storage技术、Intel Extreme Memory Profile（XMP）等。\n\n总之，微星 Z490-A PRO主板提供了稳定的性能、丰富的扩展和存储选项、良好的网络连接和音频支持等功能，是一款性价比较高的主板。\n\n显卡蓝宝石 RX 6600XT 白金 OC 8G ⏩京东链接⏩淘宝链接\n\n蓝宝石 RX 6600XT 白金 OC 8G是一款AMD显卡，以下是该显卡的主要技术参数：\n\n显卡核心：AMD Radeon RX 6600 XT\nGPU架构：AMD RDNA 2\n制造工艺：7nm\n流处理器：2048个\n像素填充率：105.0 GP&#x2F;s\n纹理填充率：330.2 GT&#x2F;s\n显存类型：GDDR6\n显存容量：8GB\n显存频率：16 Gbps\n显存位宽：128-bit\n核心时钟：2359 MHz\n游戏时钟：2170 MHz\n加速时钟：2589 MHz\n输出接口：HDMI 2.1、DisplayPort 1.4a\n\n\n内存金士顿32g 3600⏩淘宝链接\n\nKingston HyperX Fury DDR4 32GB 3600MHz 内存条是一款性价比很高的产品，它的主频较高，具备一定的超频潜力，能够提供出色的性能表现。同时，它还采用了比较高端的散热设计，能够有效地降低温度，提高稳定性，延长使用寿命。总的来说，如果你需要一款价格实惠、性能出色、稳定性高的内存条，这款产品是不错的选择。\nKingston HyperX Predator DDR4 3600MHz 32GB Kit (HX436C17PB3K2&#x2F;32)。\n这款内存条的主要参数如下：\n\n容量：32GB\n频率：3600MHz\n类型：DDR4\n时序：CAS延迟为17\n电压：1.35V\n\n值得一提的是，内存条的性能不仅取决于容量和频率，还受到时序和品牌的影响，因此具体型号可能有所不同。\n\n硬盘西部数据黑盘 sn750⏩淘宝链接\n\n西部数据黑盘 SN750是一款高性能的M.2 NVMe固态硬盘，采用西部数据的第二代3D NAND闪存技术，并配备了高速的PCIe Gen3 x4接口，支持NVMe 1.3协议。它具有高速的读写性能和低延迟，可用于高性能计算机系统和游戏设备中。\n以下是该产品的主要规格：\n\n存储容量：250GB、500GB、1TB、2TB\n读取速度：最高可达3,470MB&#x2F;s\n写入速度：最高可达3,000MB&#x2F;s\n随机读取IOPS：最高可达420,000\n随机写入IOPS：最高可达380,000\n芯片类型：西部数据第二代3D NAND闪存\n接口类型：PCIe Gen3 x4，支持NVMe 1.3协议\n尺寸：80mm x 22mm x 2.38mm\n重量：约6.5g\n保修期限：5年\n\n500GB尺寸：80mm x 22mm x 2.38mm\n\n电源金牌巨龙 GW-6800电竞版⏩淘宝链接\n\n金牌巨龙 GW-6800电竞版(600W) 的参数如下：\n\n最大输出功率：600W\n80PLUS认证级别：金牌\n输入电压范围：100V-240V\n输入电流：8A-4A\n额定频率：50Hz-60Hz\n电源尺寸：150mm x 140mm x 86mm\n电源重量：1.9kg\n风扇规格：12cm\n接口类型：20+4PIN主板电源接口、8PIN CPU     12V电源接口、6+2PIN显卡电源接口、SATA电源接口、IDE电源接口\n\n\n机箱散热扇利民c12c⏩淘宝链接\n\n品牌：Thermalright型号：TL-C12成色：全新\n风扇尺寸：120120925mm\n\n机箱乔思伯 U4 PLUS⏩淘宝链接\n\n乔思伯 U4 PLUS 机箱的主要规格如下：\n\n尺寸：440 x 210 x 483mm（长 x 宽 x 高）\n重量：5.8kg\n适用主板：ATX、Micro-ATX、Mini-ITX\n扩展槽位：7个PCI插槽\n前置接口：2 x USB 2.0、2 x USB 3.0、1 x     麦克风接口、1 x 音频输出接口\n硬盘位：2 x 3.5英寸、2 x 2.5英寸\n散热系统：支持120&#x2F;140mm水冷排，最大支持高度160mm的CPU风冷\n\n其他特性：透明侧板、内部灯光效果、支持多种尺寸显卡、背线管理设计等\n\n工具\n\n\nA\nB\nC\n\n\n\n名称\n简介\n下载链接\n\n\nEFI\n适配硬件的EFI文件\n\n\n\nbalenaEtcher\n启动U盘刻录\n\n\n\nOCAT\n生成三码,升级修改oc驱动，win系统专用软\n\n\n\nU盘制作\n下载镜像\n我们国内黑苹果小兵前辈会经常更新一些懒人镜像，这些镜像很适合小白使用。大家可以去前辈的博客去下载就行了，双分区、三分区的都是可以的。如果大家想下载苹果官方的镜像，自己制作的话（不适合小白）可以直接参考 OC 官方文档，国光我就不搬运了，直接贴了地址：Creating the USB | OpenCore Install Guide推荐：https://sysin.org/blog/macOS-Big-Sur-boot-iso/  或者https://blog.daliansky.net/\n\n\n\n写入镜像\n如果是https://sysin.org/blog/macOS-Big-Sur-boot-iso/镜像，请参考https://sysin.org/blog/macos-createinstallmedia/\n以下以https://blog.daliansky.net/下载的dmg镜像为示例\n重点提醒！一定要以管理员权限打开balendetcher，制作完成以后重新拔插再进行后续操作\n写入镜像实际上也有很多工具，国光这里推荐一个后来居上的工具 balenaEthcher官方支持 Windows、macOS、Linux 的版本，下载即可使用。下面简单说下安装制作镜像的方法：这个软件使用也比较简单，就是上图标记的三步，是不是很简单呢？由于国光我手上的这个 U 盘是固态改的，所以几分钟时间就写入完成了，写入成功后的提示信息如下：  \n\n\n\n结构讲解\n苹果环境下的目录结构\n\n\n黑苹果 U 盘制作完成了，下面来大概讲解一下目前 U 盘的结构划分情况，以及作用是啥，话不多说直接看图：macOS 下使用 Hackintool 可以直观的看到磁盘的结构信息：如果是 Windows 的话，使用经典的磁盘工具 DiskGenius 也是可以看到的。下面来给大家一一展示下这 3 个分区里面放着哪些内容。挂载 EFI¶绝大多数的情况下 EFI 分区默认是隐藏的，我们在 Hackintool 工具下「右键」选择「装载」输入密码后即可挂载 EFI 分区：挂载 EFI 分区后，桌面上的三个分区就全部显示出来了：EFI¶默认 EFI 分区下的文件内容如下：小兵前辈还放了 2 个 app，我们可以选择性保留。默认的 EFI 文件夹是 Clover 配套的，所以后续我们需要删掉整个 EFI 文件夹，然后将 OC 的 EFI 拷贝进来。WEPE¶默认 WEPE 分区下的文件内容如下：这个分区我们一般不用管，虽然这里也有 EFI 文件夹，但是这个是引导 Windows PE 使用的，了解一下就行。Install macOS XXX¶Install macOS XXX 分区下面就躺着苹果官方的系统安装包了，这个实际上是 .app 结尾的格式，苹果的应用基本上都是这个格式，实际上我们后续安装黑苹果成功之后，也可以去 AppStore 里面手动下载这个镜像：至此，启动盘初步就制作好了，接下来就是我们配置好一个适合我们机型的 EFI 驱动配置文件的事情了，配置好 EFI 直接放入到 U 盘 EFI 分区下即可。  \n\n\nWindows目录结构如下\n\n 在上述目录当中，只需要用制作好的EFI文件替换掉EFI分区下的EFI目录文件即可。\n PE分区为启动系统\n\nEFI文件修改自己配置EFI文件请参考Creating the USB | OpenCore Install Guide \n如果是别人的EFI文件，请注意同步到他所使用的oc版本，通过OCAT软件进行同步修改具体参考如下图所示\n\n打开OCAT拖拽导入EFI下的OC文件夹内的config.plist文件，点击升级同步oc版本至EFI作者的EFI文件所对应的版本根据实际情况解决红点！报错问题，可通过chat gpt解决\n\n修改三码\n打开网站检查3码的时候，如果提示序列号无效则证明可用。SystemProductName则需要根据实际情况填写相应的型号，修改后如果没有报错就保存退出。\n然后将修改后的EFI目录下的Boot和OC文件复制到启动盘的EFI文件夹里。\n三码的修改需要通过ProperTree-master修改，拖拽config.list值py文件上，需要配置phyton环境。\n\n\n\n安装磁盘配置新建安装磁盘，参数如下\nBIOS设置\n微星主板设置参考： https://www.youtube.com/watch?v=Pq9RPHglK64  \n\n双系统启动项配置\nPE系统操作\n当系统安装好后需要将U盘内的EFI文件复制粘贴到Mac安装磁盘内的ESP文件内，可通过PE系统直接进行文件复制，\n具体位置请参照下图\n\nMac系统操作\n目前我们启动还是用的U 盘上面的OC引导启动的，我们需要将这个可用的OC引导中的EFI文件添加到硬盘中，否则一直都需要 U 盘才能引导进入系统。\n\n🔺此时我们需要一个叫做『OpenCore Configurator』的工具，直接在MacOS的系统下直接下载安装即可。\n下载地址：https://mackie100projects.altervista.org/download-opencore-configurator/\n[]\n🔺下载下来后直接双击就能安装，首次安装会有安全提醒而安装失败，我们需要打开“设置—隐私与安全性”，在右边“安全性”下面会看到一个安全提示，我们选择“仍要打开”\n[]\n🔺这里会弹出输入密码的方框，输入我们设置的开机密码，点击“解锁”。\n[]\n🔺选择“打开”\n[]\n🔺打开『OpenCore Configurator』之后，先点一下该软件的界面，再点击左上角的“工具—挂载EFI”\n[]\n🔺然后就会出现上图中的挂载EFI界面。可以看出我这边图中的“EFI分区”下面有三个，分别为Windows安装盘里面的EFI，MacOS安装盘里面的EFI，以及安装U盘里面的EFI。我们现在要做的就是挂载MacOS安装盘里面的EFI以及安装U盘里面的EFI，将安装U盘里面的EFI替换到MacOS安装盘里面的EFI，点击“挂载分区”，会弹出提示方框，还是输入开机密码。\n[]\n🔺然后“打开分区”，MacOS安装盘EFI和U盘里面的EFI都要打开。\n[]\n🔺直接将U盘里面的EFI文件夹直接拖到MacOS安装盘EFI文件里面。有的时候MacOS安装盘会有一个原始的EFI文件夹，直接删掉，只保留U盘拖过来的EFI文件夹即可。\n这个时候我们就可以直接拔掉U盘了，而直接从硬盘上直接启动双系统了。\n[]\n🔺最后一步，记得去主板BIOS里面将安装MacOS的那块硬盘设置为第一启动项即可。\n至此，黑苹果系统才算是安装成功了。\n\n\n如果此时Windows系统引导缺失，请在PE系统内进行引导修复。如果后期需要升级Mac系统，请对应升级OC至最新版本后，再进行更新升级操作。\n","categories":["系统","Mac","黑苹果"]},{"title":"Android ROM站点","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Android/Android%20ROM%E7%AB%99%E7%82%B9/","content":"\n\n\n\n网站\n简介\n\n\n\n魔趣\nRom包\n\n\nRom仓库\nRom包\n\n\nRom中国\nRom包\n\n\n清华大学开源软件镜像站\nRom包\n\n\nAW表盘\n小米手环主题\n\n\ntheunlockr\n国外技术网站\n\n\nAllMobileTools\n国外技术网站\n\n\n","categories":["系统","Phone","Android"]},{"title":"Hexo 图片配置问题","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Page/Hexo/Hexo%20%E5%9B%BE%E7%89%87%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/","content":"图片路径问题解决方法通过下面命令下载插件:\nnpm i hexo-renderer-marked\n\n在自己的博客的source路劲下新建一个images文件夹\n在typora，进入到 文件–&gt;偏好设置–&gt;图像，然后选择复制到指定路径，选到上面新建的images文件夹路径，勾选下面红框的选项修改你博客的配置文件**_config.yml**修改配置：添加上下面语句：\n\nmarked:  prependRoot: true  postAsset: true\n\n之后，你每次复制图片过来，图片路径就是相对路径了当然，对于网络位置的图片回自动是网络上的图片链接，这种图片在博客上是完全没问题的，比如：\n\n\nname.github.io配置\n在该环境中由于上述的操作配置，所以在source文件夹中，图片的存放目录必须为images。否则图片会出现加载错误，图片路径大致为..&#x2F;images\n\n\nname.github.io&#x2F;XXX配置\n\n修改_config.yml的Hexo配置文件，格式如下:\nurl: https://name.github.io/xxxroot: /xxx/\n\n修改主题配置文件主题.yml,需要将引入的css文件路径和js文件路径前添加&#x2F;xxx&#x2F;，否则会出现加载错误，举例如下：\ninject: head:   - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx/config/css/custom.css&quot;&gt;\n\n注意有些插件也需要做出必要的路径修改才能生效\n\n关于图片的文件目录大致是这样的：在source中需要建立一个XXX文件夹，该文件夹里有一个images。同时需要复制xxx&#x2F;images到source目录中。图片路径大致为..&#x2F;xxx&#x2F;images&#x2F;,其中xxx&#x2F;images本地文件并无实际意义，只是为了在topya编辑的时候用于显示预览，当hexo编译静态文件的时候会自动读取source目录下的images文件夹内的图片并在前添加&#x2F;xxx&#x2F;。所以必须保证两个images的文件同步。\n\n\n","categories":["网络","Github","Github Page","Hexo"]},{"title":"Qexo 安装与配置","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Page/Hexo/Qexo%20%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","content":"\n  \n\n\n\n\n一个快速、强大、漂亮的在线 Hexo 编辑器，您的 Star 是对我最大的支持。\n请查看 文档\n\n部署Vercel 部署 (PostgreSQL&#x2F;Vercel)#你可以通过 Vercel 提供的免费数据库。但请注意这是个 Beta 功能\n一键部署#部署到 Vercel\n首次部署会报错, 请无视并进行接下来的步骤\n部署后需进入项目setting\n申请 Vercel 数据库#进入Vercel Storage 界面 然后点击右上角的 Create Database 并选择 Postgres 创建免费 PostgreSQL 数据库, 在 Connect 页面获取数据库连接信息。请注意在地区选择的位置选择与你上一步项目对应的地区（通常为 Washington, D.C., USA (East) - iad1）。\n绑定项目#在左侧边栏选择 Projects 点击 Connect Project 连接到你第一步创建的项目\n部署#回到你的项目页面，在 Deployments 点击 Redeploy 开始部署, 若没有 Error 信息即可打开域名进入初始化引导\n配置Vercel配置VERCEL_TOKEN您的 Vercel 账户密钥 在 此处 生成\nxxxxxxxxxxxxxxxxxxxxxxxx\n\nPROJECT_ID您 Qexo 部署所在项目的 ID 位于 Project Settings -&gt; General -&gt; Project ID\nprj_xxxxxxx\n\nGithub配置使用 Github如果部署中遇到问题, 可以访问 HPP校验助手 自检配置 仅支持Github, 若确认无误, 可检查仓库内是否有已经发布的文章\nGithub 仓库您 博客源码 自动化部署所在的仓库\nusername/repo\n\n参考文献:\nhttps://blog.cyfan.top/p/e626cb30.html\nhttps://www.oplog.cn/archives/24998.html\nhttps://crazywong.com/posts/74006f42\n项目分支您 博客源码 自动化部署所在仓库的分支\nmaster\n\nGithub 密钥于 Github 设置 生成的 Token (建议使用 Classical) 需要 Repo &amp; Workflow 下的权限 不建议给出所有权限\nwrq_P8sYPlYA9fjMlOPEYSKA84xxxxxxxxxxxxxx\n\n仓库路径您 博客源码 自动化部署所在仓库的路径 若为根目录请留空\npath/\n\n\n\nGithub仓库配置\n\n\n当通过qexo远程新建文章的时候，action代码将自动编辑静态文件并推送到ph-pages分支部署到github page。代码如下：\nname: Deploy Hexoon:  push:    branches:      - mainjobs:  build:    runs-on: ubuntu-latest    steps:    - name: Checkout code      uses: actions/checkout@v4    - name: Setup Node.js      uses: actions/setup-node@v4      with:        node-version: &#x27;20&#x27;    - name: Install dependencies      run: npm install    - name: Generate Hexo static files      run: |        npx hexo generate        echo &quot;Generated files in public directory:&quot;        ls -la public  # 确保 public 目录中有生成的文件    - name: Deploy to GitHub Pages      uses: peaceiris/actions-gh-pages@v3      with:        github_token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;        publish_dir: ./public\n\n","categories":["网络","Github","Github Page","Hexo"]},{"title":"局域网内访问虚拟机 web 服务器","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1/Vmware/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%20web%20%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"\nA1设置\n开启的热点连接所用的软件是myplblicWifi\n\nEthernet adapter 以太网 2:Media State . . . . . . . . . . . : Media disconnected   Connection-specific DNS Suffix  . :Wireless LAN adapter 本地连接* 9:Media State . . . . . . . . . . . : Media disconnected   Connection-specific DNS Suffix  . :Ethernet adapter VMware Network Adapter VMnet1:Connection-specific DNS Suffix  . :   Link-local IPv6 Address . . . . . : fe80::2f20:6b2:8ebd:e837%11   IPv4 Address. . . . . . . . . . . : 192.168.100.1   Subnet Mask . . . . . . . . . . . : 255.255.255.0   Default Gateway . . . . . . . . . :Ethernet adapter VMware Network Adapter VMnet8:Connection-specific DNS Suffix  . :   Link-local IPv6 Address . . . . . : fe80::d327:9db5:bb0:834b%10   IPv4 Address. . . . . . . . . . . : 192.168.137.1   Subnet Mask . . . . . . . . . . . : 255.255.255.0   Default Gateway . . . . . . . . . :Wireless LAN adapter 本地连接* 10:Connection-specific DNS Suffix  . :   Link-local IPv6 Address . . . . . : fe80::fec9:c392:6fde:9c11%16   IPv4 Address. . . . . . . . . . . : 192.168.5.1   Subnet Mask . . . . . . . . . . . : 255.255.255.0   Default Gateway . . . . . . . . . :Ethernet adapter 蓝牙网络连接:Media State . . . . . . . . . . . : Media disconnected   Connection-specific DNS Suffix  . :Wireless LAN adapter WLAN:Connection-specific DNS Suffix  . :   Link-local IPv6 Address . . . . . : fe80::cd23:7b7e:94c5:c91e%2   IPv4 Address. . . . . . . . . . . : 192.168.0.112   Subnet Mask . . . . . . . . . . . : 255.255.255.0   Default Gateway . . . . . . . . . : 192.168.0.1\n\nA2设置Windows IP 配置以太网适配器 以太网:媒体状态  . . . . . . . . . . . . : 媒体已断开连接   连接特定的 DNS 后缀 . . . . . . . :以太网适配器 VMware Network Adapter VMnet1:连接特定的 DNS 后缀 . . . . . . . :   本地链接 IPv6 地址. . . . . . . . : fe80::98a0:91e2:30dd:6c9b%17   IPv4 地址 . . . . . . . . . . . . : 192.168.80.1   子网掩码  . . . . . . . . . . . . : 255.255.255.0   默认网关. . . . . . . . . . . . . :以太网适配器 VMware Network Adapter VMnet8:连接特定的 DNS 后缀 . . . . . . . :   本地链接 IPv6 地址. . . . . . . . : fe80::7bea:3d95:7c52:e347%9   IPv4 地址 . . . . . . . . . . . . : 192.168.137.1   子网掩码  . . . . . . . . . . . . : 255.255.255.0   默认网关. . . . . . . . . . . . . :无线局域网适配器 WLAN:连接特定的 DNS 后缀 . . . . . . . :   本地链接 IPv6 地址. . . . . . . . : fe80::9b4b:4091:7137:7044%12   IPv4 地址 . . . . . . . . . . . . : 192.168.5.2   子网掩码  . . . . . . . . . . . . : 255.255.255.0   默认网关. . . . . . . . . . . . . : 192.168.5.1以太网适配器 蓝牙网络连接:媒体状态  . . . . . . . . . . . . : 媒体已断开连接   连接特定的 DNS 后缀 . . . . . . . :\n\nVmWare设置\n\n除了常用的网站dockers对应的端口外 https对应的443端口必须开\n\n参考链接：\n​\t已剪辑自: https://blog.csdn.net/qq_41538097&#x2F;article&#x2F;details&#x2F;121147797 用 vue 脚手架生成了一个项目做简单测试，简单说一下搭建流程，使用一种即可 详细过程可参考 ：https://blog.csdn.net/qq_61541602&#x2F;article&#x2F;details&#x2F;125215221 # vue-cli &gt;&#x3D; 3 模板\n\n","categories":["网络","本地服务","Vmware"]},{"title":"Butterfly安装与配置","url":"/2024/07/11/%E7%BD%91%E7%BB%9C/Github/Github%20Page/Hexo/Butterfly%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","content":"\n关联网站常用网站Hexo 和 Butterfly 相关资源 \n          \n            \n              \n                \n              \n              Hexo 官方文档 \n              Hexo 的官方文档\n            \n          \n          \n            \n              \n                \n              \n              Butterfly 主题按钮教程 \n              Butterfly 主题的按钮使用教程\n            \n          \n          \n            \n              \n                \n              \n              Butterfly 主题文档 \n              Butterfly 主题的使用文档\n            \n          \n          \n            \n              \n                \n              \n              Yisous 的博客 \n              Yisous 的技术博客\n            \n          \n          \n            \n              \n                \n              \n              Guole 的博客 \n              Guole 的个人博客\n            \n          \n\nButterfly安装Github安装Gitee安装npm安装穩定版【建議】\n在你的 Hexo 根目錄裏\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n\n測試版\n測試版可能存在 bug，追求穩定的請安裝穩定版\n如果想要安裝比較新的 dev 分支，可以\ngit clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n\n升級方法：在主題目錄下，運行 git pull\n穩定版【建議】\n在你的 Hexo 根目錄裏\ngit clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly\n\n測試版\n測試版可能存在Bugs，追求穩定的請安裝穩定版\n如果想要安裝比較新的dev分支，可以\ngit clone -b dev https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly\n\n升級方法：在主題目錄下，運行 git pull\n此方法只支持 Hexo 5.0.0 以上版本\n通過 npm 安裝並不會在 themes 裏生成主題文件夾，而是在 node_modules 裏生成\n在你的 Hexo 根目錄裏\nnpm install hexo-theme-butterfly\n\n升級方法：在 Hexo 根目錄下，運行 npm update hexo-theme-butterfly\n\n\n插件Butterfly主题文档包含的插件hexo-renderer-pug\nHexo 的 Pug 渲染器。\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-renderer-pug --save支持PugJS选项。这些是传递给compile()的选项。\n在您的项目根目录中创建一个pug.config.js：\nmodule.exports = &#123;  compile: &#123;  // Passed to compile().    basedir: process.cwd(),    // ...Other options.  &#125;  // No other methods are supported for now.&#125;\n\nhexo-renderer-stylus\nHexo 的 Stylus 渲染器\n\n\n  \n\n\n\n\n安装配置扩展举例先决条件：\n\nHexo 3：&gt;&#x3D; 0.2\nHexo 2：0.1.x\n\nnpm install hexo-renderer-stylus --save您可以在 中配置此插件_config.yml。\nstylus:  compress: false  sourcemaps:    comment: true    inline: true    sourceRoot: &#x27;&#x27;    basePath: .  plugins: &#x27;nib&#x27;\n\n\ncompress - 压缩生成的CSS（默认值false：）\n源映射\ncomment - 将注释添加到sourceMappingURL生成的 CSS 中（默认值true：）\ninline - 使用 base64 格式的完整源文本内联源映射（默认值false：）\nsourceRoot -sourceRoot生成的源映射的属性\nbasePath - 源映射和所有源都是相对的基本路径（默认值.：）\n\n\n插件- Stylus 插件（默认nib：）\n设置手写笔变量\n可以设置可在 Stylus 中使用的变量。设置变量的目的是避免直接修改Stylus代码，从而使主题更加通用\n例如，代替硬编码：\ndiv color #FFCC44\n\n您可以引用一个变量：\ndiv color convert(hexo-config(&quot;moody_red&quot;))\n\n在主题的配置中，您可以定义此变量：\nmoody_red: &quot;#8B0001&quot;\n\n（上面的“convert”函数在这里将字符串转换为实际的手写笔颜色）\n您还可以在 main 中使用 theme_config 变量_config.yml：\ntheme_config:  moody_red: &quot;#8B0001&quot;\n\n可扩展性\n该插件提供了一个过滤器stylus:renderer，允许您扩展它。当您无法在 Stylus 中执行某些操作时，请在 JavaScript 中定义它！\n例如，定义一些全局变量：\nhexo.extend.filter.register(&#x27;stylus:renderer&#x27;, function(style) &#123;  style    // we may define a global variable by passing a `Node`    .define(&#x27;has-canvas&#x27;, require(&#x27;stylus&#x27;).nodes.false);    // stylus also casts JavaScript values to their Stylus equivalents when possible    .define(&#x27;families&#x27;, [&#x27;Helvetica Neue&#x27;, &#x27;Helvetica&#x27;, &#x27;sans-serif&#x27;])    // also allows you to provide a JavaScript-defined function to Stylus    .define(&#x27;get-list&#x27;, function()&#123;      return [&#x27;foo&#x27;, &#x27;bar&#x27;, &#x27;baz&#x27;];    &#125;);&#125;)\n\n将文件保存在“scripts&#x2F;”文件夹中并照常运行 Hexo。\n注意：更多JavaScript api，请参考stylus的文档。\n\nhexo-generator-searchdb\n文档链接：https://butterfly.js.org/posts/ceeb73f/#%E6%90%9C%E7%B4%A2\n🔍 Hexo 的搜索数据生成器插件。\n该插件用于生成搜索索引文件，其中包含文章的所有必要数据，您可以使用这些数据为博客编写本地搜索引擎。支持XML和JSON格式输出。\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-generator-searchdb\n你需要安裝 hexo-generator-searchdb 或者 hexo-generator-search，根據它的文檔去做相應配置\n\n修改 主題配置文件\n\n\n# Local searchlocal_search:  enable: false  # Preload the search data when the page loads.  preload: false  # Show top n results per article, show all results by setting to -1  top_n_per_article: 1  # Unescape html strings to the readable one.  unescape: false  CDN:\t\t\t\t\n\n\n\n\n參數\n解釋\n\n\n\nenable\n是否开启本地搜索\n\n\npreload\n预加载，开启后，进入网页后会自动加载搜索文件。关闭时，只有点击搜索按钮后，才会加载搜索文件\n\n\ntop_n_per_article\n匹配的文章结果，默认显示最开始的 1段结果\n\n\nunescape\n将 html 字符串解码为可读字符串\n\n\nCDN\n搜索文件的 CDN 地址（默认使用的本地链接）\n\n您可以在 root 中配置此插件_config.yml。所有参数都是可选的。\nsearch:  path: search.xml  field: post  content: true  format: html\n\n\n路径- 文件路径。默认情况下是search.xml.如果文件扩展名是.json，则输出格式将为 JSON。否则将导出 XML 格式文件。\n\nfield\n- 您要搜索的搜索范围，您可以选择：\n\npost（默认）- 仅涵盖您博客的所有帖子。\n页面- 只会覆盖您博客的所有页面。\n全部- 将涵盖您博客的所有帖子和页面。\n\n\ncontent - 是否包含每篇文章的全部内容。如果false，则生成的结果仅包含标题和其他元信息，而不包含正文。默认情况下是true.\n\nformat\n- 页面内容的形式，选项有：\n\nhtml（默认）- 原始 html 字符串被缩小。\nstriptags - 原始 html 字符串被缩小，并删除所有标签。\nraw - 每个帖子或页面的降价文本。\n\n\n\n常问问题\n\n这个插件应该做什么?\n该插件用于从 Hexo 博客生成 xml &#x2F; json 文件，以提供搜索数据。\n\n\n这个文件保存在哪里？\n执行后，hexo g您将在公共文件夹中获得生成的结果。\n\n\n如何在我的 Hexo 博客中使用这个插件？\n你有两个选择：\n\n你不想自己编写搜索引擎。有许多主题使用此插件进行开箱即用的本地搜索。\n\n您熟悉 JavaScript 并且想编写自己的搜索引擎。您可以根据模板代码search.js自行实现一个。目前没有文档，但您可以在主题 NexT的源代码中找到它的用法。一般有3个步骤：\n\n编写一个搜索视图。这是显示搜索表单和搜索结果的地方；\n通过CDN加载search.js脚本，例如：\n\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/hexo-generator-searchdb@1.4.0/dist/search.js&quot;&gt;&lt;/script&gt;\n\nLocalSearch中提供了一个类search.js，告诉浏览器如何抓取搜索数据并过滤掉我们正在搜索的内容；\n1. 编写一个[搜索脚本](https://github.com/next-theme/hexo-theme-next/blob/v8.8.0/source/js/third-party/search/local-search.js)，利用上一个`LocalSearch`类。\n\n\n\n\n\nhexo-wordcount\nHexo 字数统计插件Butterfly文档地址:https://butterfly.js.org/posts/ceeb73f/#%E5%AD%97%E6%95%B8%E7%B5%B1%E8%A8%88\n\n\n  \n\n\n\n\n安装配置扩展举例\n要为Butterfly配上字数统计特性, 你需要如下几个步骤:\n打开 hexo 工作目录\nnpm install hexo-wordcount --saveoryarn add hexo-wordcount\n\n修改 主题配置文件:\nwordcount:enable: truepost_wordcount: truemin2read: truetotal_wordcount: true\n安装\nyarn add hexo-wordcountornpm i --save hexo-wordcount\n\n用法\n字数统计 WordCount\nwordcount(post.content)\n\n预计 Min2Read 的阅读时间长\nmin2read(post.content)\n\n设置阅读速度 设置阅读速度：\nmin2read(post.content, &#123;cn: 300, en: 160&#125;)// p.s. (v3.0.0 added)\n\n总字数统计 TotalCount\ntotalcount(site)帖子数：\n&lt;span class=&quot;post-count&quot;&gt;&#123;&#123; wordcount(post.content) &#125;&#125;&lt;/span&gt;\n\n发布分钟阅读：\n&lt;span class=&quot;post-count&quot;&gt;&#123;&#123; min2read(post.content) &#125;&#125;&lt;/span&gt;\n\n总数：\n&lt;span class=&quot;post-count&quot;&gt;&#123;&#123; totalcount(site) &#125;&#125;&lt;/span&gt;\n\n帖子数：\n&lt;span class=&quot;post-count&quot;&gt;&lt;%= wordcount(post.content) %&gt;&lt;/span&gt;\n\n发布分钟阅读：\n&lt;span class=&quot;post-count&quot;&gt;&lt;%= min2read(post.content) %&gt;&lt;/span&gt;\n\n总数：\n&lt;span class=&quot;post-count&quot;&gt;&lt;%= totalcount(site) %&gt;&lt;/span&gt;\n\n帖子数：\nspan.post-count= wordcount(post.content)\n\n发布分钟阅读：\nspan.post-count= min2read(post.content)\n\n总数：\nspan.post-count= totalcount(site)\n\n已安装插件hexo-butterfly-article-double-row\n将hexo-theme-butterfly文章的布局更改为双栏\n\n\n  \n\n\n\n\n安装配置扩展举例npm i hexo-butterfly-article-double-row --save# 或者cnpm i hexo-butterfly-article-double-row --save\n\n注意，一定要加 --save，不然本地预览的时候可能不会显示！！！新增网站根目录_config 配置项 (不是主题的)：\nYAMLbutterfly_article_double_row:  enable: true\n\nhexo-github-card\n同类功能网站：https://lab.lepture.com/github-cards/\n在您的 hexo 博客中显示 GitHub 配置文件和存储库的卡片。使用 Github-cards 实现\n当我写一篇新的博客文章时，有时我想包含 GitHub 存储库或 GitHub 配置文件的信息，并且我希望它们在我的博客中看起来很好，而不仅仅是一个简单的链接。\n目前，有一个名为hexo-github的 hexo 插件，它可以在您的博客中显示 GitHub 提交。但是，我觉得我并不需要显示特定的提交，而是需要显示更一般的信息，例如存储库的名称、其描述和作者。\n幸运的是，有一个名为github-cards的存储库，它非常适合我的需要。因此，我实现了这个简单的插件，以便博主可以轻松地在 GitHub 上添加信息。\n您可以通过阅读我的博客文章找到有关我如何创建插件的更多信息\n\n\n  \n\n\n\n\n安装配置扩展举例npm install --save hexo-github-card\n\nor\nyarn add hexo-github-card\n\nhexo-bilibili-card\n一个Hexo插件，在你的文章中插入b站的视频卡片，样式模仿和借鉴自b站。A hexo plugin insert a bilibili card into your page or article.\n\n\n  \n\n\n\n\n安装配置扩展举例npm i hexo-bilibili-card --save由于 b 站图片地址的跨域限制，因此需要配置图片代理，目前未找到大陆地区较为稳定的服务，默认使用的 https://images.weserv.nl/?url=，部分地区受到了 DNS 污染及反应过慢。建议参考 rsstt-img-relay 自建服务。\nDue to the CORS strategy of Bilibili, you need to configure an image proxy to get the image correctly. Unfortunately, we haven’t found any stable image proxy in China Mainland yet. The default image proxy is provided by https://images.weserv.nl/?url=, which has DNS pollution in some areas and the response is too slow. We suggest referring to rsstt-img-relay to build your image proxy instead.\nhexo_bilibili_card:    imageProxy: https://images.weserv.nl/?url=In your config file, insert follow codes:在你的 config 文件中插入以下片段\n&#123;% bilicard your_video_id %&#125;\n\n\nyour_video_id is the avid or bvid in Bilibili.\nyour_video_id 是b站的bv号或av号。then you will get the card in your page.然后你就可以看见文章中的卡片了。例子：\n\n&#123;% bilicard BV1ZJ4m1W7Pw %&#125;\n\n\n\nYou can click here to see the preview website.\n点击 这里 看预览哦\\x7e\n\n\nhexo-bilibili-bangumi功能笔记鸡肋，暂时用不上。对于动漫二次元患者像是个宝藏工具。已安装，没什么乱用。\n\n\n\nhexo 番剧页面插件，可选数据源：Bilibili, Bangumi\n为 Hexo 添加哔哩哔哩&#x2F;Bangumi追番&#x2F;追剧页面，参考自hexo-douban.\nDemo\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-bilibili-bangumi --save将下面的配置写入站点的配置文件 _config.yml 里(不是主题的配置文件).\nbangumi: # 追番设置  enable: true  source: bili  bgmInfoSource: &#x27;bgmApi&#x27;  path:  vmid:  title: &#x27;追番列表&#x27;  quote: &#x27;生命不息，追番不止！&#x27;  show: 1  lazyload: true  srcValue: &#x27;__image__&#x27;  lazyloadAttrName: &#x27;data-src=__image__&#x27;  loading:  showMyComment: false  pagination: false  metaColor:  color:  webp:  progress:  extraOrder:  order: latest  proxy:    host: &#x27;代理host&#x27;    port: &#x27;代理端口&#x27;  extra_options:    key: valuecinema: # 追剧设置  enable: true  path:  vmid:  title: &#x27;追剧列表&#x27;  quote: &#x27;生命不息，追剧不止！&#x27;  show: 1  lazyload: true  srcValue: &#x27;__image__&#x27;  lazyloadAttrName: &#x27;data-src=__image__&#x27;  loading:  metaColor:  color:  webp:  progress:  extraOrder:  order:  extra_options:    key: value\n\n\n带*为必填选项！\n\n\nenable: 是否启用\nsource: 数据源，仅支持追番，追剧仅支持哔哩哔哩源。bili: 哔哩哔哩源, bangumi: Bangumi源(bangumi.tv), bgm: Bangumi源(bgm.tv)\nbgmInfoApi: 获取Bangumi番剧信息时使用的Api，仅使用Bangumi源时此选项生效。bgmApi: Bangumi Api, bgmSub: Bangumi-Subject\nproxy: 代理设置，仅在使用支持bgm源追番时生效。默认false\npath: 页面路径，默认bangumis/index.html, cinemas/index.html\nvmid: 哔哩哔哩的 vmid(uid)如何获取？或Bangumi的用户id如何获取？\ntitle: 该页面的标题\nquote: 写在页面开头的一段话，支持 html 语法，可留空。\nshow: 初始显示页面：0: 想看, 1: 在看, 2: 看过，默认为1\nlazyload: 是否启用图片懒加载，如果与主题的懒加载冲突请关闭，默认true\nsrcValue: 设置封面图的默认src值, __image__为封面链接, __loading__为loading图片链接, lazyload选项为false时此选项生效\nlazyloadAttrName: 设置封面图的属性与属性值, 例lazyloadAttrName: &#39;data-src=__image__&#39;代表为img元素添加data-src属性, 其值为图片链接, lazyload选项为false时此选项生效\nloading: 图片加载完成前的 loading 图片，需启用图片懒加载\nmetaColor: meta 部分(简介上方)字体颜色（十六进制的颜色代码需要添加引号：metaColor: &#39;#FFFFFF&#39;）\ncolor: 简介字体颜色\nwebp: 番剧封面使用webp格式(此格式在safari浏览器下不显示，但是图片大小可以缩小 100 倍左右，仅支持哔哩哔哩源), 默认true\nprogress: 获取番剧数据时是否显示进度条，默认true\nextraOrder: 手动添加的番剧&#x2F;追剧数据是否优先显示，1为优先，其它为不优先\nshowMyComment: 使用bgm源时显示自己的评价及评论，默认false\npagination: 分页优化，只将第一页的数据渲染到html文件中，其余数据将通过异步请求加载，避免番剧过多时html文件过大导致页面加载缓慢，建议番剧较多时使用，默认false\norder: 排序，支持latest(默认，按添加时间排序), score(评分升序), -score(评分降序)\nextra_options: 此配置会扩展到Hexopage变量中\n\n使用\n\n在hexo generate或hexo deploy之前使用hexo bangumi -u命令更新追番数据，使用hexo cinema -u命令更新追剧数据！\n\n删除数据命令:hexo bangumi -d&#x2F;hexo cinema -d\n\nnpx hexo new page bilibili\n\n配置文件参数说明\npath: /bilibili/index.html\n vmid: 2764554544\n```yml新建页面yml参数设置title: bilibilidate: 2024-04-10 17:39:29type: &quot;bangumis&quot;\n\n\n\n获取 Bilibili uid\n登录哔哩哔哩后前往https://space.bilibili.com/页面，网址最后的一串数字就是 uid\n需要将追番列表设置为公开！\n获取 Bangumi id\n登录Bangumi后打开控制台(Ctrl+Shift+J)，输入CHOBITS_UID回车，下面会输出id\n示例\n\n\n手动添加番剧&#x2F;追剧数据\n因为某些番剧在哔哩哔哩上没有，但是又想在hexo中展示，怎么办呢？现在支持手动添加番剧数据了！\n在 sources/_data/ 目录下新建文件，命名为 extra_bangumis.json(追番数据)或extra_cinemas.json(追剧数据) ，并添加以如下内容:\n&#123;&quot;watchedExtra&quot;: [&#123;&quot;title&quot;: &quot;缘之空&quot;,&quot;type&quot;: &quot;番剧&quot;,&quot;area&quot;: &quot;日本&quot;,&quot;cover&quot;: &quot;https://cdn.jsdelivr.net/gh/mmdjiji/bangumis@main/Yosuga-no-Sora/cover.jpg&quot;,&quot;totalCount&quot;: &quot;全12话&quot;,&quot;id&quot;: 0,&quot;follow&quot;: &quot;不可用&quot;,&quot;view&quot;: &quot;不可用&quot;,&quot;danmaku&quot;: &quot;不可用&quot;,&quot;coin&quot;: &quot;不可用&quot;,&quot;score&quot;: &quot;不可用&quot;,&quot;des&quot;: &quot;远离都市的田园小镇，奥木染。春日野悠带着妹妹穹，来到了这座城镇。坐落在这里的是，儿时暑假经常造访的充满回忆的已故祖父的家。双亲因意外事故而丧生，变得无依无靠...&quot;&#125;]&#125;\n\ntitle 是番剧的标题，cover 是封面图链接， des 是简介，上述字段均根据需要修改。\n另外除了 watchedExtra 数组，还可以在后面添加新的数组，可用数组名如下:\n\n\n\n可用数组名\n含义\n\n\n\nwantWatchExtra\n想看\n\n\nwatchingExtra\n在看\n\n\nwatchedExtra\n看过\n\n\n需要注意，在两个数组之间需要用 , 分隔。\n\n\n多主题兼容\n\nFork此项目并克隆到本地；\n进入项目目录并安装依赖npm install;\n在src/lib/templates/theme/目录内添加主题.css文件（例：butterfly.css）；\n在主题.css文件内添加主题兼容样式表；\n运行命令npm run build;\n提交PR.\n\n\n\nhexo-douban-card\n在hexo文章中插入豆瓣读书,豆瓣电影,豆瓣音乐组件\n\n\n  \n\n\n\n\n安装配置扩展举例\n一个 HEXO 插件,实现了用 HEXO 语法来在博客中插入一个豆瓣读书卡片的功能,现在实现了读书和电影两个板块\nnpm install hexo-douban-card --save\n\n然后使用以下语法\n&#123;% douban movie 24745500 %&#125;&#123;% douban book 30376420 %&#125;&#123;% douban music 35099703 %&#125;\n\n参数阐述\n\n第一项douban 代表插件名\n第二项可选:movie,book,music\n第三项请填入对应的id例如:\n\n\n填写subject后面的那串数字就好\n插件配置\n需要在 _config.yml 中配置 doubanCard，但这并不是必选项，如果你遇到了某些需要登录的豆瓣网址，那么请填写 cookie，如果你遇到图片代理失效的问题，请自行替换 imgProxy。未经验证的代理网址可以参考这个 issue：图像加速服务weserv地址被reset了，不能显示图片\ndoubanCard:  enable: true  cookie: ABCDEFGHIJKLMNOPQRSTUVWXYZ  imgProxy: https://images.weserv.nl/?url=作品站点\n\nhttps://www.tanknee.cn/2020/07/08/Hexo%E8%B1%86%E7%93%A3%E6%96%87%E7%AB%A0%E6%8F%92%E4%BB%B6/\n\nhexo-douban\n💿 一个 Hexo 插件，可以帮助您生成豆瓣图书、电影、音乐和游戏的内容。\n一个在 Hexo 页面中嵌入豆瓣个人主页的小插件.\n\n原理\nhexo-douban 目前升级到了 2.x 版本，将原先由插件客户端自行获取数据的逻辑抽到了一个隐藏的服务端中进行，以统一解决数据获取、数据缓存、风控对抗等问题，提高页面生成的成功率和效率。\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-douban --save将下面的配置写入站点的配置文件 _config.yml 里(不是主题的配置文件).\ndouban:  id: 162448367  builtin: false  item_per_page: 10  meta_max_line: 4  customize_layout: page  book:    path: books/index.html    title: &#x27;This is my book title&#x27;    quote: &#x27;This is my book quote&#x27;    option:  movie:    path: movies/index.html    title: &#x27;This is my movie title&#x27;    quote: &#x27;This is my movie quote&#x27;    option:  game:    path: games/index.html    title: &#x27;This is my game title&#x27;    quote: &#x27;This is my game quote&#x27;    option:  song:    path: songs/index.html    title: &#x27;This is my song title&#x27;    quote: &#x27;This is my song quote&#x27;   option:  timeout: 10000 \n\n\nid: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？\nbuiltin: 是否将hexo douban命令默认嵌入进hexo g、hexo s，使其自动执行hexo douban 命令。默认关闭。\nitem_per_page: 每页展示的条目数，默认 10 。\nmeta_max_line: 每个条目展示的详细信息的最大行数，超过该行数则会以 “…” 省略，默认 4 。\ncustomize_layout: 自定义布局文件。默认值为 page 。无特别需要，留空即可。若配置为 abcd，则表示指定 //theme/hexo-theme/layout/abcd.ejs 文件渲染豆瓣页面。\npath: 生成页面后的路径，默认生成在 &#x2F;&#x2F;yourblog&#x2F;books&#x2F;index.html 等下面。如需自定义路径，则可以修改这里。\ntitle: 该页面的标题。\nquote: 写在页面开头的一段话,支持html语法。\ntimeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。\noption: 该页面额外的 Front-matter 配置，参考Hexo 文档。无特别需要，留空即可。\n\n如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。\n\n使用\n展示帮助文档\n$ hexo douban -hUsage: hexo doubanDescription:Generate pages from doubanOptions:-b, --books   Generate douban books only-g, --games   Generate douban games only-m, --movies  Generate douban movies only-s, --songs   Generate douban songs only\n\n\n主动生成豆瓣页面\n$ hexo doubanINFO  Start processingINFO  0 (wish), 0 (do),0 (collect) game loaded in 729 msINFO  0 (wish), 0 (do),20 (collect) song loaded in 761 msINFO  2 (wish), 0 (do),136 (collect) book loaded in 940 msINFO  30 (wish), 0 (do),6105 (collect) movie loaded in 4129 msINFO  Generated: books/index.htmlINFO  Generated: movies/index.htmlINFO  Generated: games/index.htmlINFO  Generated: songs/index.html\n\n如果不加参数，那么默认参数为-bgms。当然，前提是配置文件中均有这些类型的配置。\n需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy 的前缀都是hexo d。\n如果 builtin:false 时，执行 hexo g 之后发现将 douban 生成的页面删除了:\nINFO  Start processingINFO  Files loaded in 343 msINFO  Deleted: games/index.htmlINFO  Deleted: books/index.htmlINFO  Deleted: movies/index.htmlINFO  Deleted: songs/index.html\n\n那么重新执行 hexo clean 一下即可（原因是 db.json 的数据缓存）。\n第一次使用 hexo douban 时，后台会异步进行数据获取，一般需要等待一段时间（后台访问你的标记页面）才能查到数据。顺利情况下，平均一个页面会花10s。\n例如如果你有 150 个想读、150个已读、150个在读的图书，每页15条，则共需要翻30页。那么大约需要等待 30*10&#x2F;60&#x3D;5 分钟。如果长时间没有更新（一天以上），请及时提 issue 反馈。\n后续如果你的豆瓣数据更新了，hexo douban 同样也会自动进行更新（同样需要等待一段时间才会查到更新数据），不过出于安全考虑，一个用户id每半小时至多只会同步一次。\n由于豆瓣本身深分页的 RT 过高（上万条目的翻页 RT 会到 15s 到 60s），为了防止系统同步压力过大，每个用户的每一类条目最多只会同步 1w 条。\n\n\n升级\n我会不定期更新一些功能或者修改一些Bug，所以如果想使用最新的特性，可以用下面的方法来更新:\n\n修改 package.json 内 hexo-douban 的版本号至最新\n重新安装最新版本npm install hexo-douban --save\n\n或者使用npm install hexo-douban --update --save直接更新。\n\n\n显示\n如果上面的配置和操作都没问题，就可以在生成站点之后打开 //yourblog/books 和 //yourblog/movies, //yourblog/games, 来查看结果。\n\n\n菜单\n如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.\nmenu:Home: /Archives: /archivesBooks: /books     #This is your books pageMovies: /movies   #This is your movies pageGames: /games   #This is your games pageSongs: /songs   #This is your songs page\n\n\n通用环境\n如果有非 hexo 环境的部署需求，则可以考虑以引入静态资源的方式接入 idouban 。\n\n\n接口\n如果仅仅想对自己的豆瓣数据进行备份，可以尝试使用下面的接口，复用后端维护的数据提取服务 mouban ：\n# 将 &#123;your_douban_id&#125; 改为你的豆瓣数字ID# 用户录入/更新https://mouban.mythsman.com/guest/check_user?id=&#123;your_douban_id&#125;# 查询用户的读书评论https://mouban.mythsman.com/guest/user_book?id=&#123;your_douban_id&#125;&amp;action=wishhttps://mouban.mythsman.com/guest/user_book?id=&#123;your_douban_id&#125;&amp;action=dohttps://mouban.mythsman.com/guest/user_book?id=&#123;your_douban_id&#125;&amp;action=collect# 查询用户的电影评论https://mouban.mythsman.com/guest/user_movie?id=&#123;your_douban_id&#125;&amp;action=wishhttps://mouban.mythsman.com/guest/user_movie?id=&#123;your_douban_id&#125;&amp;action=dohttps://mouban.mythsman.com/guest/user_movie?id=&#123;your_douban_id&#125;&amp;action=collect# 查询用户的游戏评论https://mouban.mythsman.com/guest/user_game?id=&#123;your_douban_id&#125;&amp;action=wishhttps://mouban.mythsman.com/guest/user_game?id=&#123;your_douban_id&#125;&amp;action=dohttps://mouban.mythsman.com/guest/user_game?id=&#123;your_douban_id&#125;&amp;action=collect# 查询用户的音乐评论https://mouban.mythsman.com/guest/user_song?id=&#123;your_douban_id&#125;&amp;action=wishhttps://mouban.mythsman.com/guest/user_song?id=&#123;your_douban_id&#125;&amp;action=dohttps://mouban.mythsman.com/guest/user_song?id=&#123;your_douban_id&#125;&amp;action=collect\n\n\nhexon插件有点小问题。在初始化start的时候，无论设置的用户名是什么都无效，首次登录用户名必须是Administration。\n\n\n\n❔ 它是如何运作的？\nHexon 是带有 git 的 hexo GUI，可以为您运行命令和管理内容。\n⭐️特点 \n\n帖子和页面管理\n头条模板\n使用图像\n\n\n\n  \n\n\n\n\n安装配置扩展举例安装前\n确保您的git、hexo和Node.js工作流程正常。 Hexon 只为这些命令提供了 GUI，但没有实现它们。\n安装\ngit clone https://github.com/gethexon/hexon --depth 1cd hexonnpm install -g pnpm pnpm installpnpm run setup\n\n卸载\n只需删除刚刚克隆的文件夹即可\nrm -rf hexon\n\n开始\n对于普通 Node.js：\npnpm start\n\n使用pm2实现更好的 devOps\npnpm prd# or integrate pm2 with `pnpm start` manually\n\n更新\n只需卸载旧的并安装新的即可。命令\n\npnpm run setup: 安装和配置\npnpm start：以节点开始六边形\npnpm prd：用 pm2 启动六边形\npnpm resetpwd： 重设密码\npnpm script：管理自定义脚本\n\n您可以在 hexo 博客文件夹中将 hexon 命令替换为您自己的 bash 脚本。\n例如修改git sync脚本\n\n将你的脚本写在&lt;hexo-blog-path&gt;/git_sync.sh\n跑步pnpm script\n选择git sync\n将脚本设置为bash ./git_sync.sh\n👌🏻常见问题解答\n\nhexo-bridge\n由 hexo 提供支持的网站指挥中心。\n\n帖子和页面编辑器\n文件管理器\n网站设置编辑器\n主题和插件发现\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm i --save hexo-bridgehexo serveropen http://localhost:4000/bridge/\n\n\n\nhexo-blog-encrypt\nhexo 博客加密\n中文说明\n这是什么\n\n首先，hexo 中最好的后期加密插件。（但是其他插件呢？）\n它适合那些写了一篇文章但不希望每个人都阅读它的人。因此，某些页面需要密码才能访问这些加密的帖子。\n加密在 wordpress、emlog 或其他博客系统（hexo 除外）上很简单。 :(\n所以现在是“hexo-blog-encrypt”的时候了。\n\n特征\n\n输入正确的密码后，您就可以访问加密的帖子，并且密码会在本地记住。再次按下该按钮，存储的密码将被删除。如果帖子中有脚本，一旦帖子被解密，它们就会被执行。\n支持预设标签指定密码。\n所有功能均由原生API提供。我们在 Node.js 中使用Crypto ，并在浏览器中使用Web Crypto API。\nPBKDF2、SHA256用于派生密钥，我们使用AES256-CBC来加密和解密数据，我们还使用HMAC来验证消息认证码，以确保帖子被良好解密且未被修改。\nPromise被广泛使用，是为了保证我们的主程序是异步的，这样进程被阻塞的机会就很少，体验也会更加流畅。\n支持模板主题，您可以使用 [ default, blink, flip, shrink, surge, up, wave, xray] 设置您的模板主题，并在线查看。\n过时的浏览器可能无法正常工作。在这种情况下，请升级您的浏览器。\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm install --save hexo-blog-encryptoryarn add hexo-blog-encrypt\n快速开始\n\n将“密码”值添加到帖子的前面，例如：\n\n---title: Hello Worlddate: 2016-03-30 21:18:02password: hello---\n\n\n然后使用hexo clean &amp;&amp; hexo g &amp;&amp; hexo s在本地查看您的加密帖子。\n\n\n\n密码优先级\n帖子的头条 &gt; 加密标签\n\n\n高级设置\n\n在帖子的前面\n---title: Hello Worldtags:- encryptAsDiarydate: 2016-03-30 21:12:21password: mikemessiabstract: Here&#x27;s something encrypted, password is required to continue reading.message: Hey, password is required here.wrong_pass_message: Oh, this is an invalid password. Check and try again, please.wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.---\n\n\n\n在_config.yml\n\n例子\n# Securityencrypt: # hexo-blog-encryptabstract: Here&#x27;s something encrypted, password is required to continue reading.message: Hey, password is required here.tags:  - &#123;name: encryptAsDiary, password: passwordA&#125;  - &#123;name: encryptAsTips, password: passwordB&#125;  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.\n\n禁用标签加密\n只需将password前面的属性设置为 即可&quot;&quot;。\n例子：\n---title: Callback Testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedpassword: &quot;&quot;---Use a &quot;&quot; to disable tag encryption.\n\n配置优先级\n帖子的头条 &gt; _config.yml（在根目录下） &gt; 默认\n请参阅演示页面，**所有密码均为hello**。\n关于回调\n在某些博客中，某些元素解密后可能无法正常显示。这是一个已知的问题。目前的解决办法是查看自己博客中的代码，了解onload事件发生时调用了哪些函数。然后将这些代码写在帖子的末尾。例如：\n---title: Callback Testdate: 2019-12-21 11:54:07tags:    - Encrypted---This is a blog to test Callback functions. You just need to add code at the end of your post as follows:It will be called after the blog is decrypted.&lt;script&gt;    // add script tag and code at the end of your post    alert(&quot;Hello World&quot;);&lt;/script&gt;\n\n演示：回调示例。\n更多使用详情请参照：https://github.com/D0n9X1n/hexo-blog-encrypt\n\nhexo-butterfly-charts\n将 hexo poats、类别和标签的统计数据呈现到图表中。\n\n灵感来自 HEXO 主题 matery.\n\n\n包含\n发布统计\n发布日历\n标签统计\n分类统计\n分类雷达图\n\n\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-butterfly-charts --save点击查看使用方法\n修改 Butterfly config 配置  \n参照2\n#see https://www.npmjs.com/package/hexo-butterfly-chartscharts:  enable: true  postsChart:    title: 文章發佈統計     interval: 1  tagsChart:    title: Top 10 tags     interval: 1   postsCalendar_Title: 文章發佈日曆  categoriesChart_Title: 分類統計  categoriesRadar_Title: 分類雷達\n\n详细代码请看扩展举例具体修改参数参照1\n\n发布日历\n&lt;div id=&quot;posts-calendar&quot; class=&quot;js-pjax&quot;&gt;&lt;/div&gt;\n\n\n\n发布统计\n&lt;div id=&quot;posts-chart&quot; class=&quot;js-pjax&quot;&gt;&lt;/div&gt;\n\n\n\n标签统计\n&lt;div id=&quot;tags-chart&quot; data-length=&quot;10&quot; class=&quot;js-pjax&quot;&gt;&lt;/div&gt;\n\n\n\n分类统计（无标题）&#x2F;分类雷达图（无标题）\n&lt;div id=&quot;categories-chart&quot; class=&quot;js-pjax&quot;&gt;&lt;/div&gt;\n\n\n\n分类雷达图（无标题）\n&lt;div id=&quot;categories-radar&quot; class=&quot;js-pjax&quot;&gt;&lt;/div&gt;\n\n\n点击查看暗色模式截图发布日历发布统计标签统计分类统计（无标题）/分类雷达图（无标题）分类雷达图（无标题）\n\n-–\n\nhexo-generator-readme-file\nHexo plugin, generate a README.md file contains all of blogs posts link.Hexo 插件，可以生成一个包含所有的文章链接的README.md文件\ngenerate a README.md file contains all of blog posts link.\n为你的文章生成一个 README.md 文件，里面包含了所有的文章链接。\n\n相关hexo插件\n\nhexo-generator-issues：将您的 hexo 帖子发布到 github issues。将个人文章发布到github的指定仓库下，每一篇文章作为一个问题。\nhexo-generator-readme-file：生成一个README.md包含所有博客文章链接的文件。为你的文章生成一个README.md文件，里面包含了所有的文章链接。\nhexo-filter-link-post：将 markdown 文件中的相对帖子链接转移到帖子链接。将文件里的通过相对路径引用的markdown文件转为对应文章的链接。\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-generator-readme-file --save在配置文件（_config.yml）中添加以下内容：\nreadmeConfig:  postsHeader: &#x27;## My posts&#x27; # headers, support markdown  sort: &#x27;desc&#x27; # posts display sort: &#x27;desc&#x27; or &#x27;acs&#x27;. The default option is &#x27;desc&#x27;  groupType: &#x27;month&#x27; # &#x27;month&#x27; or &#x27;year&#x27; or &#x27;none&#x27;. The default option is &#x27;month&#x27;\n\nhexo-markmap\n一个 hexo 插件通过 markmap 在你的 hexo 博客中插入思维导图。在hexo博客中插入思维导图。\n通过 markmap 在你的 hexo 博客中插入思维导图。\n从现在开始，所有语法，如 HTML 代码、链接、内联代码、markdown KaTeX 和 Codeblocks 都可以使用。\n\n代码块仍然存在一些问题，可能会引发一些错误。更多预览请见我的博客。\n\n\n\n  \n\n\n\n\n安装配置扩展举例pnpm add hexo-markmap -D\n\nnpm install hexo-markmap --save-dev\n\nyarn add hexo-markmap --dev用法\n&#123;% markmap height [depth] %&#125;- Markdown- Syntax&#123;% endmarkmap %&#125;\n\n选项\n\nheight：思维导图画布高度\ndepth：可选，指定时自动折叠级别大于的节点depth\n\n详细配置参考：https://github.com/maxchang3/hexo-markmap&#123;% markmap 400px 2 %&#125;- links- **inline** ~~text~~ *styles*- multiline  text- `inline code`- ```js  console.log(&#x27;code block&#x27;);  console.log(&#x27;code block&#x27;);  ```- KaTeX - $x = &#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; \\over 2a&#125;$&#123;% endmarkmap %&#125;\n\nhexo-pro设置账号密码后无法登录，后经过测试。发现需要执行npm install和npm update\n\n\n\nhexo博客后台管理\n\nslogen：Hexo pro 一个属于你自己的博客后台\n\n修改这个项目的原因是自己用Hexo框架搭建的个人博客，Hexo-admin插件已经很久没有人维护了，随着博客量的不断增加一些体验方面不太好，不支持front-matter的，一开始是想用SpringBoot或者Go Hertz等后台框架来搭建后台服务，nginx托管静态文件，后台服务维护markdown文件，通过hexo命令行渲染更新静态文件，但是想了其实反而更复杂了，也看过github上开源的Hexo博客管理系统比如Qexo，感觉配置起来有点麻烦，还是直接安装hexo插件来的方便，不会引入更多的东西。\n我之前学的基本上都是头痛，前端属于入门的水平，如果有大佬对这个项目感兴趣欢迎一起来贡献，目前这个版本能够满足慢慢日常编写发布博客的需求，后续会迭代遍历路过的朋友、个人博客兴趣点个star支持下吧谢谢~~\n\n\n  \n\n\n\n\n\n安装配置扩展举例配置登陆账户及密码\n需要在hexo的_config.yml中增加以下配置来使用账户密码登陆后台，不配置后台会直接登陆。配置后使用jwt来保护后台访问的接口\nhexo_pro:  username: admim  password: 123  avatar: https: image for your own avata  secret: xxx // jwt secret keyHexo pro 插件支持 Hexo 3.x\n截图\n\n\n\n特性\n\n支持创建编写的博客\n支持创建编写页面\n支持图片粘贴上传\n支持post、page的front-matter编辑\n\n这个插件其实是采用前远程分离的方式编写的，这个插件在hexo的服务器上添加了中间件，其实是作为桌面，代理预留的静态文件，静态文件存放在www文件夹存放的。请看另外一个仓库：https://github.com/wuzheng228/hexo-pro-client ps：这里你可能会问，为什么不把客户端和仓库的代码放在同一个仓库里，因为hexo-pro-客户端使用了Arco-design pro作为脚手架放置在多级文件夹中启动dev服务器会有问题\n\nhexo-tag-embed\n警告\n请不要在低于 hexo 的情况下使用此插件v7.0.0。\n\n\n笔记\n这个插件的功能已经从https://github.com/hexojs/hexo划分出来了\n\nhexojs&#x2F;hexo#5064\nhexojs&#x2F;hexo#5067\nhexojs&#x2F;hexo#5065\nhexojs&#x2F;hexo#5066\n\n\n\n  \n\n\n\n\n安装配置举例npm i hexo-tag-embed要嵌入 Gist 片段：\n&#123;% gist gist_id [filename] %&#125;\n\n要嵌入 jsFiddle 片段：\n&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;\n\n插入响应式或指定尺寸的 Vimeo 视频。\n&#123;% vimeo video_id [width] [height] %&#125;\n\n插入 YouTube 视频。\n&#123;% youtube video_id [type] [cookie] %&#125;嵌入视频\n&#123;% youtube lJIrF4YjHfQ %&#125;\n\n嵌入播放列表\n&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#x27;playlist&#x27; %&#125;\n\n启用隐私增强模式\n此模式下不使用 YouTube 的 cookie。\n&#123;% youtube lJIrF4YjHfQ false %&#125;&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#x27;playlist&#x27; false %&#125;\n\nhexo-tag-collapse-spoiler\n它将隐藏您的内容，并通过按钮、链接或卡片将提示放置在顶部\n\n\n  \n\n\n\n\n安装配置举例npm install hexo-tag-collapse-spoiler --save&#123;% collapse(btn|link|card) HINT_SHOW HINT_HIDE %&#125;content&#123;% endcollapse(btn|link|card) %&#125;\n\n在全局_config.yml：&#x2F;在站点的配置文件_config.yml里\ncollapse:  border: false  # Whether to enable borders for content hidden using &#x27;collapsebtn&#x27; and &#x27;collapselink&#x27; / 是否开启按钮和链接样式的边框  hint_show: Show # Default text for &#x27;Show&#x27; operation / 展开默认提示文字  hint_hide: Hide # Default text for &#x27;Hide&#x27; operation / 收起默认提示文字\n对应标签 &#x2F; 代码\n&#123;% collapsebtn &quot;Click to show&quot; &quot;Click to hide&quot; %&#125;content1&#123;% endcollapsebtn %&#125;&#123;% collapselink Show Hide %&#125;content2&#123;% endcollapselink %&#125;&#123;% collapsecard 展开 收起 %&#125;&#123;% collapselink Show2 Hide2 %&#125;content3&#123;% endcollapselink %&#125;&#123;% endcollapsecard %&#125;\n\nhexo-tag-wikipedia\n适用于您的 Hexo 帖子的 Wikipedia 标签插件\n一个将 Wikipedia 内容嵌入到 Hexo 帖子中的插件。\n目前，它仅支持显示 Wiki 摘录（ 之前的第一部分Table of Contents）。\n\n\n  \n\n\n\n\n安装配置扩展举例npm i hexo-tag-wikipedia --save\n\n或者\nyarn add hexo-tag-wikipedia&#123;% wikipedia title:GitHub wikiButton:true %&#125;\n\n\n可用参数\n\n\n\n范围\n描述\n\n\n\ntitle:&lt;wiki_title&gt;\n例如，wiki URL https://en.wikipedia.org/wiki/Star_Wars，它是“Star_Wars”\n\n\nwikiButton:&lt;true&gt;\n是否显示维基百科页面链接。默认为false\n\n\nlang:&lt;code&gt;\n维基页面语言代码。en, fr, ja… 默认为en\n\n\nsentences:&lt;number&gt;\n如果指定，则限制要显示的句子数量。仅接受 1 到 10 之间的值。省略显示完整摘录\n\n\n\nhexo-tag-map\n给你的 Hexo 文章插入交互式地图吧！\n给你的 Hexo 文章插入交互式地图吧！支持GoogleMap、高德地图、百度地图、Geoq地图、openstreetMap常规地图+卫星地图+卫星标注地图！一个强大的地图插件。Insert an interactive map into your Hexo article! Support GoogleMap, Gaode map, Baidu map, Geoq map, openstreetMap regular map + satellite map + satellite annotated map! A powerful map plugin.\n\nauthor: guole\nhttps://blog.guole.fun/\nlicense: Apache-2.0\nhttps://github.com/kuole-o/hexo-tag-map/blob/main/LICENSE\nTutorials：https://blog.guole.fun/posts/41887/\n\n特性\n\n[混合地图]你将获得一个混合切换GoogleMap、高德地图、Geoq地图，常规地图+卫星地图+卫星标注地图共7个图层的地图\n[GoogleMap]你还将获得一个单独的谷歌地图+谷歌卫星地图\n[高德地图]你还将获得一个单独的高德地图+高德卫星地图+高德卫星标注地图\n[百度地图]你还将获得一个单独的百度地图+百度卫星地图+百度卫星标注地图\n[Geoq地图]你还将获得一个单独的Geoq地图+5种显示风格\n[openstreetMap]你还将获得一个单独的openstreetMap常规地图\n支持标记点提示文本\n支持各个地图缩放等级配置+经纬度配置+地图容器宽高配置+默认展示地图类型配置\n用法超级简单\nButterfly已验证，其他Hexo主题，欢迎体验\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-tag-map --save插入一个混合地图的示例： &#123;% map %&#125;插入一个高德地图的示例： &#123;% gaodeMap %&#125;插入一个openstreetMap的示例： &#123;% openstreetMap %&#125;插入一个百度地图的示例： &#123;% baiduMap %&#125;插入一个geoqMap的示例： &#123;% geoqMap %&#125;插入一个googleMap的示例： &#123;% googleMap %&#125;\n\n详细用法，请点击这里查看\n\nhexo-generator-index-custom\n支持置顶与隐藏文章的 Hexo 首页生成器插件。在官方的首页生成器的基础上添加了使用 top 置顶文章和 hide 隐藏文章的功能。参考\n\n\n  \n\n\n\n\n安装配置举例npm uninstall hexo-generator-indexnpm install hexo-generator-index-custom --save将以下部分添加或修改到您的根 _config.yml 文件\nindex_generator:  path: &#x27;&#x27;  per_page: 10  order_by: -date  pagination_dir: page\n\n\npath\n：博客索引页的根路径。\n\n默认： ””\n\n\nper_page\n：每页显示的帖子。\n\n默认值：config.per_page按照官方 Hexo 文档（如果存在）中的指定，否则10\n0禁用分页\n\n\norder_by\n：发布订单。\n\n默认值：日期降序\n\n\npagination_dir\n：URL 格式。\n\n默认值：“页面”\nawesome-page使第二页及以后的 URL 以“awesome-page&#x2F;”结尾。\n\n\n帖子Front-mattersticky中的或参数将用于将帖子固定到索引页的顶部。较高（或）意味着它将排名第一。top``sticky``top\n您还可以使用sticky: true或top: true将帖子固定到索引页面的顶部。\n---title: Hello Worlddate: 2013/7/13 20:46:25sticky: 100---\n\n---title: Hello Worlddate: 2013/7/13 20:46:25top: 100---\n\n帖子 Front-matter 中的参数hide将用于在索引页中隐藏帖子。\n---title: Hello Worlddate: 2013/7/13 20:46:25hide: true---\n\n\n\n鸡肋插件hexo-github-repo-tag该插件工作十分不稳定，原因不明。\n\n\n\nGitHub 存储库的简单而美观的标签。\n如果直接使用安装会有很大概率出现404报错！\n推荐保存到自己的仓库 \nnpm install https://github.com/fack058/hexo-github-repo-tag #branch-name在这个命令中，替换 branch-name 为你分叉后的分支名称。\n\n\n  \n\n\n\n\n安装配置扩展举例npm i hexo-github-repo-tag --save# Use this in your Markdown article&#123;% githubCard user:JoJoJotarou/hexo-github-repo-tagwidth:780 height:120 %&#125;&#123;% githubCard &#x27;tiangolo/fastapiwidth:780 height:120 %&#125;\n\n\n\nhexo-tag-bilibili该插件不能正常工作，好像是由于版权原因无法正常播放。\n\n\n\n在 Hexo 帖子&#x2F;页面中嵌入 bilibili 视频\n这是一个Hexo标签插件，用于 在帖子&#x2F;页面中嵌入Bilibili视频\n\n\n  \n\n\n\n\n\n\n安装配置扩展举例npm install --save hexo-tag-bilibili\n完整的标签格式如下：\n&#123;% bilibili [av_id] %&#125;or&#123;% bilibili [av_id] [page] %&#125;\n\n例子：\n&#123;% bilibili 2333333 3 %&#125;\n\n\n配置\n您可以在主 _config.yml 中配置类型、自动播放和大小：\n配置示例：\nbilibili:width: 452height: 544\n\n\n风格\n视频剪辑由带有 class 的 div 包裹bili_video。您可以在主题的 css 文件中修改它。\n\n\nhexo-tag-bilibili-bangumi该插件貌似需要安装后端支持，没仔细研读。感觉用不上，全是什么二次元！！\n\n\n\n一个专为 Hexo 设计的基于 Bilibili-Bangumi-JS 的 Bilibili 追番进度展示插件。\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-tag-bilibili-bangumi --save \n用法\n在需要插入追番进度的文章(post)或独立页面(page)中，使用如下标签即可插入。\n&#123;% bangumi &quot;key_1=value_1&quot; &quot;key_2=value_2&quot; ... &quot;key_n=value_n&quot; %&#125;\n\n其中key_n=value_n的键值对表示一个设置项及其对应的值，目前支持的设置项有：\n\napiUrl - （必填）设置后端域名，包括https://和末尾的/api（后端的安装请参考这里）。\nvmid - （必填）设置 Bilibili UID，可在个人空间中查看。\n\n示例：\n&#123;% bangumi &quot;apiUrl=https://bilibili-bangumi-js.vercel.app/api&quot; &quot;vmid=66745436&quot; %&#125;\n\n\n进阶\n在站点的config.yml中，可以对本插件进行更加高级的设置。\nhexo-tag-bilibili-bangumi:# （可选）设置静态资源的默认存放路径（因主题而异）js_path: /assets/js/css_path: /assets/css/\n\n\nhexo-tag-douban该插件不能正常工作，网络错误不能正常加载。\n\n\n\nHexo tag for Douban.\n\n\n  \n\n\n\n\n安装配置扩展举例// hexo root pathnpm i hexo-tag-douban --save// xxx-post.md&#123;% douban &quot;https://book.douban.com/subject/26541801&quot; %&#125;\n\n\n\nhexo-html-syncer测试过比较鸡肋，功能有点过时。加载不了图片，相较之下还是用onenote更好些。\n\n\n\n\nhexo 控制台命令将 html 转换为发布…\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-html-syncer --save// ornpm install github:lwz7512/hexo-html-syncer --save在hexo博客目录下：\n$ hexo syncer article_url_address# for example:$ hexo syncer http://mp.weixin.qq.com/s/Tp4W-_0MXMvN5Tw3jlrtLg\n\nhexo-encrypt已经好多年没更新了，相较之下已经使用hexo-blog-encrypt.\n\n\n\n加密帖子内容\n\n使用 AES 加密一篇帖子内容\n使用七牛私人空间作为img仓库（如果您想使用此功能，您需要先获得七牛帐户，搜索google寻求帮助）\n将本地img编码为base64类型，然后将其内联到html中\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-encrypt\n\n在hexo根目录中，编辑package.json，在依赖范围中添加以下代码\n&quot;hexo-encrypt&quot;: &quot;^0.2.0&quot;,配置加密密码\n\n在 _config.yml 中添加以下代码，注意，所有选项都是可选的，这意味着如果您不想使用此功能，您可以放弃所有选项\n# encryptencrypt:pwdfile: encrypt_password\t\t# this store the password in a file, the whole content of this file will be regarded as the password#password: 123456 # this set password herereplace_all_url: true # this will replace img url in all postsbase_url: http://you img base url/\t# this will connect with you img url in you post, except full url(start with http://)qiniu_ak: your qiniu access key qiniu_sk: your qiniu secrect key img_url_ttl: 3600  # 3600 second, the ttl for qiniu img urltype: qiniu # or base64, if base64, the base_url, qiniu_ak, qiniu_sk and img_url_ttl is unnecessarytemplate: &#x27;user defined decrpyt ui template&#x27; # optional, it&#x27;s html template include html and js. in js, you should call doDecrypt(password, onErrorCallbackFunc) with you password\n\n\n\n对于模板，下面是一个示例：\ntemplate: &#x27; &lt;input type=&quot;text&quot; style=&quot; border-radius: 5px; border-style: groove; height: 30px; width: 50%; cursor: auto; font-size: 102%; color: currentColor; outline: none; text-overflow: initial; padding-left: 5px;&quot;&gt;  &lt;input type=&quot;submit&quot; value=&quot;decrypt&quot; onclick=&quot;decrypt()&quot; style=&quot; width: 58px; height: 34px; border-radius: 5px; background-color: white; border-style: solid; color: currentColor; &quot;&gt; \t\t\t  &lt;div id=&quot;enc_error&quot; style=&quot; display: inline-block; color: #d84527; font: large; &quot;&gt;&lt;/div&gt;&lt;script&gt; \t\t\t\tvar onError = function(error) &#123; \t\t\t\t\t$(&quot;#enc_error&quot;)[0].innerHTML = &quot;password error!&quot;; \t\t\t\t&#125;;  function decrypt() &#123;      var passwd = $(&quot;#enc_passwd input&quot;)[0].value;      console.log(passwd);      doDecrypt(passwd, onError);  &#125; &lt;/script&gt;&#x27; \n\n\n配置帖子\n在帖子标题中添加以下代码以指示该帖子的内容应该加密。注意，所有选项都是可选的，这意味着如果您不想使用此功能，可以放弃所有选项\nencrypt: trueenc_replace_url: true # this indicate wether the plugin should replace the img url in this post, this option has a higher priority than `replace_all_url` in _config.ymlenc_pwd: 123456 # this is the way to set encrypt password for this postenc_img_type: qiniu # or base64enc_template: &#x27;user defined decrpyt ui template&#x27; # same as template in _config.yml but has a higher priority\n\n然后运行hexo g，hexo s打开加密帖子，你会发现，页面要求你输入密码。\n\n更多设置：https://github.com/edolphin-ydf/hexo-encrypt#rule-for-encrypt-content\n\nhexo-auto-tag会报错443，不能用。\n\n\n\n使用GPT-3自动为Hexo文章添加标签\n借助 GPT-3 的强大功能，根据帖子的内容自动为其分配相关的预定义标签。\n使用 GPT-3 的强大功能，根据文章内容自动为您的文章分配相关的预定义标签。 中文文档\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-auto-tag\n将以下内容添加到 Hexo 站点的_config.yml文件中：\n\nauto_tag:  enable: true  apiKey: &lt;YOUR OPENAI API KEY&gt;  threshold: 0.23 # range: 0-1, 0.23 has been tested to be a good value. Lower values tend to result in fewer tags being assigned to a post.  tags:    - tag1    - tag2    - tag3\n\n您可以从此处获取您的 API 密钥。可能需要付费计划才能使用 API。然而，为 200 个帖子分配 50 个标签的成本极低，不到 0.1 美元。\n\n准备好生成站点时运行以下命令：\n\nhexo clean &amp;&amp; hexo generate\n\n确保同时运行hexo clean和hexo generate.\n\nhexo-breadcrumb会报错，不能用。貌似不能应用于butterfly主题或者我不知道代码的正确放置方法。\n\n\n\n为 Hexo 生成面包屑\n一个 Hexo 插件，用于为帖子和页面布局生成面包屑导航。\n\n与帖子和页面布局兼容。\n设置主页的自定义标题。\n自定义分隔符和样式。\n具有 ARIA 导航属性的无障碍导航。\n\n\n\n  \n\n\n\n\n安装配置扩展举例\nni: \nni hexo-breadcrumb -D\n\nnpm: \nnpm i hexo-breadcrumb -D\n\nyarn: \nyarn add hexo-breadcrumb -D\n\npnpm: \npnpm add hexo-breadcrumb -D\n在_config.yml文件中，指定面包屑设置，如下所示：\nbreadcrumb:  delimiter:    # /, &gt;, etc.    content: &quot;/&quot;    # Applied on ::after pseudo element.    style: &quot;font-weight: bold;&quot;  aria:    nav: &quot;Breadcrumb&quot;  homepage:    # Customize the title for the homepage in the breadcrumb.    title: Home  templates:    - layout: post      tokens:        - home        - category        - title    - layout: page      tokens:        - home        - title\n\n与 Hexo 主题集成\n将以下代码片段添加到布局文件中以显示面包屑。\n&lt;%- page.breadcrumb %&gt;\n\nhexo-notify该插件已经过时没人维护被弃用了。\n\n\n\nHexo 的通知插件。\n这个hexo插件发送桌面通知。\n它依赖于https://github.com/mikaelbr/node-notifier，能够发送在 Windows 和 Mac 上很好地显示的操作系统通知。\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-notify --save\n\nhexo-plugin-readmore不知道怎么用，说明不详,莫名其妙。\n\n\n\nHexo 整合 OpenWrite 平台的 readmore 插件,实现博客的每一篇文章自动增加阅读更多效果,关注公众号后方可解锁全站文章,从而实现博客流量导流到微信公众号粉丝目的.\n\n\n  \n\n\n\n\n安装配置扩展举例\n运行 npm install 命令安装到本地项目\n\n$ npm install hexo-plugin-readmore --save\n\n\n运行 hexo generate 命令构建本地项目或者 hexo server 启动本地服务.\n\n$ hexo generate\n\n或者\n$ hexo server在 _config.yml 配置文件中,配置 readmore 插件相关信息,详情见 OpenWrite 微信公众号增长神器 “ReadMore” 简介.\nplugins:  readmore:    blogId: 填写已申请的博客 id    name:  填写已申请的博客名称    qrcode: 填写已申请的公众号二维码链接    keyword: 填写已申请的公众号回复关键字\n\n\n注意: 前往 OpenWrite 后台申请开通 readmore 功能后,一定要替换成自己的相关配置!\n\n其中,配置参数含义如下:\n\nblogId : [必选]OpenWrite 后台申请的博客唯一标识,例如:15702-1569305559839-744\nname : [必选]OpenWrite 后台申请的博客名称,例如:雪之梦技术驿站\nqrcode : [必选]OpenWrite 后台申请的微信公众号二维码,例如:https://snowdreams1006.github.io/snowdreams1006-wechat-public.jpeg\nkeyword : [必选]OpenWrite 后台申请的微信公众号后台回复关键字,例如:vip\n效果\n\n不仅 hexo-plugin-readmore 官方文档已整合 readmore 版权保护插件,此外还提供了示例项目,详情参考 example 目录.\n\n官方文档\n官方示例\n\n\n hexo-tag-youtube-responsive\n采用了同功能的hexo-tag-embed插件，这个插件好久没更新所以弃用。\n\n\n\nHexo 标签插件可嵌入 Youtube 视频，该视频可根据您的响应式布局自动调整大小\nHexo标签插件可嵌入Youtube播放器，可根据您的响应式布局自动调整大小。\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-tag-youtube-responsive --save\n嵌入视频\n&#123;% youtuber video VIDEO_ID %&#125;&#123;% endyoutuber %&#125;\n\n例如\n&#123;% youtuber video I07XMi7MHd4 %&#125;&#123;% endyoutuber %&#125;\n\n\n嵌入播放列表\n&#123;% youtuber playlist PLAYLIST_ID %&#125;&#123;% endyoutuber %&#125;\n\n例如\n&#123;% youtuber playlist PLC77007E23FF423C6 %&#125;&#123;% endyoutuber %&#125;\n\n请注意，您需要在播放列表 ID 前面添加字母 PL，如上所示\n\n\n嵌入查询的搜索结果\n&#123;% youtuber search QUERY_KEYWORDS %&#125;&#123;% endyoutuber %&#125;\n\n例如\n&#123;% youtuber search hexo %&#125;&#123;% endyoutuber %&#125;&#123;% youtuber search hexo+tag+plugin %&#125;&#123;% endyoutuber %&#125;\n\n如果您的搜索有多个关键字，请使用+将它们连接在一起，如上所示\n\n\n嵌入用户上传的视频（也称为频道）\n&#123;% youtuber user USERNAME %&#125;&#123;% endyoutuber %&#125;\n\n例如\n&#123;% youtuber user daddybear %&#125;&#123;% endyoutuber %&#125;\n\n请注意，您必须提供用户名而不是频道 ID\n\n\n参数\n您可以以 YAML 格式指定其他参数，如下所示\n&#123;% youtuber video VIDEO_ID %&#125;allowfullscreen: yes,autoplay: 1,cc_lang_pref: fr,cc_load_policy: 1,color: white,controls: 0,disablekb: 1,enablejsapi: 1,end: 210,frameborder: 20,fs: 0,height: 480,hl: fr,iv_load_policy: 3,loop: 1,modestbranding: 1,origin: your-domain,playlist: &quot;videoId1,videoId2,videoId3&quot;,playsinline: 0,privacy_mode: yes,rel: 1,showinfo: 0,start: 30,widget_referrer: https://your-domain.com/some-page,width: 640,&#123;% endyoutuber %&#125;\n\n大多数参数可以在Youtube 文档中找到。\n对于剩下的：\n\n如果width和height被指定为播放器的尺寸，它将取消该小部件的自动调整大小功能\nframeborder允许指定玩家周围的边缘厚度\nprivacy_mode允许播放视频而不被谷歌跟踪（不使用cookie）\nallowfullscreen如果需要，让用户打开全屏模式\n\n\n\n默认值\n_config.yml上述参数可以通过文件全局指定默认值。\nyoutuber:allowfullscreen: yes,autoplay: 1\n\n\nhexo-tag-dplayer听歌插件，些许鸡肋。\n\n\n\n在 Hexo 帖子&#x2F;页面中嵌入 dplayer\n\n\n  \n\n\n\n\n安装配置扩展举例npm install hexo-tag-dplayer --save用法\n&#123;% dplayer key=value ... %&#125;\n\n钥匙可以是\ndplayer options:    &#x27;autoplay&#x27;, &#x27;loop&#x27;, &#x27;screenshot&#x27;, &#x27;hotkey&#x27;, &#x27;mutex&#x27;, &#x27;dmunlimited&#x27; : bool options, use &quot;yes&quot; &quot;y&quot; &quot;true&quot; &quot;1&quot; &quot;on&quot; or just without value to enable    &#x27;preload&#x27;, &#x27;theme&#x27;, &#x27;lang&#x27;, &#x27;logo&#x27;, &#x27;url&#x27;, &#x27;pic&#x27;, &#x27;thumbnails&#x27;, &#x27;vidtype&#x27;, &#x27;suburl&#x27;, &#x27;subtype&#x27;, &#x27;subbottom&#x27;, &#x27;subcolor&#x27;, &#x27;subcolor&#x27;, &#x27;id&#x27;, &#x27;api&#x27;, &#x27;token&#x27;, &#x27;addition&#x27;, &#x27;dmuser&#x27; : string arguments    &#x27;volume&#x27;, &#x27;maximum&#x27; : number argumentscontainer options:    &#x27;width&#x27;, &#x27;height&#x27; : string, used in container element styleother:    &#x27;code&#x27; : value of this key will be append to script tag\n\nDPlayer 选项映射的参数：\n&#123;    container: &quot;you needn&#x27;t set this&quot;,    autoplay: &#x27;autoplay&#x27;,    theme: &#x27;theme&#x27;,    loop: &#x27;loop&#x27;,    lang: &#x27;lang&#x27;,    screenshot: &#x27;screenshot&#x27;,    hotkey: &#x27;hotkey&#x27;,    preload: &#x27;preload&#x27;,    logo: &#x27;logo&#x27;,    volume: &#x27;volume&#x27;,    mutex: &#x27;mutex&#x27;,    video: &#123;        url: &#x27;url&#x27;,        pic: &#x27;pic&#x27;,        thumbnails: &#x27;thumbnails&#x27;,        type: &#x27;vidtype&#x27;,    &#125;,    subtitle: &#123;        url: &#x27;suburl&#x27;,        type: &#x27;subtype&#x27;,        fontSize: &#x27;subsize&#x27;,        bottom: &#x27;subbottom&#x27;,        color: &#x27;subcolor&#x27;,    &#125;,    danmaku: &#123;        id: &#x27;id&#x27;,        api: &#x27;api&#x27;,        token: &#x27;token&#x27;,        maximum: &#x27;maximum&#x27;,        addition: [&#x27;addition&#x27;],        user: &#x27;dmuser&#x27;,        unlimited: &#x27;dmunlimited&#x27;,    &#125;,    icons: &#x27;icons&#x27;,    contextmenu: &#x27;menu&#x27;,&#125;\n\n请参阅 dplayer 文档以获取更多信息。\n例如：\n&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;addition=https://dplayer.daoapp.io/bilibili?aid=4157142&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg&quot; &quot;id=9E2E3368B56CDBB4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;&#123;% dplayer &#x27;url=some.mp4&#x27; &quot;id=someid&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;addition=/some.json&quot; &#x27;code=player.on(&quot;loadstart&quot;,function()&#123;console.log(&quot;loadstart&quot;)&#125;)&#x27; &quot;autoplay&quot; %&#125; \n\n兼容 PJAX\n$(document).on(&#x27;pjax:start&#x27;, function () &#123;    if (window.dplayers) &#123;        for (let i = 0; i &lt; window.dplayers.length; i++) &#123;            window.dplayers[i].destroy();        &#125;        window.dplayers = [];    &#125;&#125;);\n\n定制化\n您可以根据博客的目录结构修改变量scriptDir（默认：“&#x2F;assets&#x2F;js&#x2F;”）和styleDir（默认：“&#x2F;assets&#x2F;css&#x2F;”） 。index.js\n或者只使用 _config.yml 配置：\n# on _config.yml of hexo-sitehexo-tag-dplayer:  js_path: /path/to/your/default/path  css_path: /sth  default: #default tag argument     id: somedefid # equals to setting id=somedefid in all &#123;%dplayer%&#125; tags    api: https://api.prprpr.me/dplayer/    #and other options...\n\n问题\n如果出现任何问题，请通过问题告诉我，使用如下所示的 hexo raw 标签来使用 dplayer：\n&#123;% raw %&#125;&lt;div id=&quot;player1&quot; class=&quot;dplayer&quot;&gt;&lt;/div&gt;&lt;script src=&quot;dist/DPlayer.min.js&quot;&gt;&lt;/script&gt;&lt;!-- use your path --&gt;&lt;script&gt;var dp = new DPlayer(&#123;&#123;    container: document.getElementById(&#x27;dplayer&#x27;),    autoplay: false,    theme: &#x27;#FADFA3&#x27;,    loop: true,    screenshot: true,    hotkey: true,    logo: &#x27;logo.png&#x27;,    volume: 0.2,    mutex: true,    video: &#123;        url: &#x27;demo.mp4&#x27;,        pic: &#x27;demo.png&#x27;,        thumbnails: &#x27;thumbnails.jpg&#x27;,        type: &#x27;auto&#x27;    &#125;,    subtitle: &#123;        url: &#x27;webvtt.vtt&#x27;,        type: &#x27;webvtt&#x27;,        fontSize: &#x27;25px&#x27;,        bottom: &#x27;10%&#x27;,        color: &#x27;#b7daff&#x27;    &#125;,    danmaku: &#123;        id: &#x27;demo&#x27;,        api: &#x27;https://api.prprpr.me/dplayer/&#x27;,        token: &#x27;demo&#x27;,        maximum: 3000,        user: &#x27;DIYgod&#x27;,        margin: &#123;            bottom: &#x27;15%&#x27;        &#125;,        unlimited: true    &#125;,    contextmenu: [        &#123;            text: &#x27;custom contextmenu&#x27;,            link: user:MoePlayer/DPlayer&#x27;        &#125;    ]&#125;);&lt;/script&gt;&#123;% endraw %&#125;\n\n使用详情请参见DPlayer\n\nhexo-tag-aplayer听歌插件，些许鸡肋。\n\n\n\n在 Hexo 帖子&#x2F;页面中嵌入播放器\n\nAPlayer.js &gt;&#x3D; 1.10.0\nMeting.js &gt;&#x3D; 1.2.0\n\n\n\n  \n\n\n\n\n安装配置扩展举例npm install --save hexo-tag-aplayer\n用法\n&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;\n\n\n选项\n\ntitle: 音乐标题\nauthor: 音乐作者\nurl: 音乐文件地址\npicture_url：可选，音乐图片url\nnarrow：可选，窄型\nautoplay：可选，自动播放音乐，手机浏览器不支持\nwidth:xxx：可选，前缀width:，玩家宽度（默认：100%）\nlrc:xxx：可选，前缀lrc:，LRC文件url\n\n启用后期资源文件夹后，您可以轻松地将图像、音乐和 LRC 文件放入资源文件夹中，并像这样引用它们：\n&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;\n\n\n带歌词\n除了“lrc”选项外，您还可以使用aplayerlrc带有结束标记的选项来显示歌词。\n&#123;% aplayerlrc &quot;title&quot; &quot;author&quot; &quot;url&quot; &quot;autoplay&quot; %&#125;[00:00.00]lrc here&#123;% endaplayerlrc %&#125;\n\n\n带播放列表\n&#123;% aplayerlist %&#125;&#123;&quot;narrow&quot;: false,                          // Optional, narrow style&quot;autoplay&quot;: true,                         // Optional, autoplay song(s), not supported by mobile browsers&quot;mode&quot;: &quot;random&quot;,                         // Optional, play mode, can be `random` `single` `circulation`(loop) `order`(no loop), default: `circulation`&quot;showlrc&quot;: 3,                             // Optional, show lrc, can be 1, 2, 3&quot;mutex&quot;: true,                            // Optional, pause other players when this player playing&quot;theme&quot;: &quot;#e6d0b2&quot;,\t                      // Optional, theme color, default: #b7daff&quot;preload&quot;: &quot;metadata&quot;,                    // Optional, the way to load music, can be &#x27;none&#x27; &#x27;metadata&#x27; &#x27;auto&#x27;, default: &#x27;auto&#x27;&quot;listmaxheight&quot;: &quot;513px&quot;,                 // Optional, max height of play list&quot;music&quot;: [&#123;&quot;title&quot;: &quot;CoCo&quot;,&quot;author&quot;: &quot;Jeff Williams&quot;,&quot;url&quot;: &quot;caffeine.mp3&quot;,&quot;pic&quot;: &quot;caffeine.jpeg&quot;,&quot;lrc&quot;: &quot;caffeine.txt&quot;&#125;,&#123;&quot;title&quot;: &quot;アイロニ&quot;,&quot;author&quot;: &quot;鹿乃&quot;,&quot;url&quot;: &quot;irony.mp3&quot;,&quot;pic&quot;: &quot;irony.jpg&quot;&#125;]&#125;&#123;% endaplayerlist %&#125;\n\n详细配置参考：\nhttps://github.com/MoePlayer/hexo-tag-aplayer?tab=readme-ov-file#meingjs-support-new-in-30\nhttps://butterfly.js.org/posts/4073eda/#%E9%9F%B3%E6%A8%82\nhttps://butterfly.js.org/posts/507c070f/\n\nhexo-lunar-calendar不知道怎么用，说明不详。\n\n\n\n📅 hexo 的农历。\n\n\n  \n\n\n\n\n安装配置扩展举例npm i hexo-lunar-calendar&lt;%= dateLunar(date(post.date)) %&gt;\n\n\n\nhexo-butterfly-categories-card有些鸡肋，功能不多。\n\n\n\n给hexo-theme-butterfly添加 [首页分类卡片]，基于 hexo-butterfly-categories-card 插件修复\n\n\n  \n\n\n\n\n安装配置举例安装插件,在博客根目录[Blogroot]下打开终端，运行以下指令：\nnpm install hexo-butterfly-categories-card --save添加配置信息，以下为写法示例 在站点配置文件_config.yml或者主题配置文件_config.butterfly.yml中添加\n# hexo-butterfly-categories-card-gabrielcategoryBar:  enable: true # 开关  priority: 5 #过滤器优先权  enable_page: / # 应用页面  layout: # 挂载容器类型    type: id    name: recent-posts    index: 0  column: odd # odd：3列 | even：4列  row: 1 #显示行数，默认两行，超过行数切换为滚动显示  message:    - descr: Ubuntu指南      name: 分类1      cover: https://npm.elemecdn.com/akilar-candyassets/image/cover1.webp    - descr: 玩转Win10      name: 分类2      cover: https://npm.elemecdn.com/akilar-candyassets/image/cover2.webp    - descr: 长篇小说连载      name: 分类3      cover: https://npm.elemecdn.com/akilar-candyassets/image/cover3.webp    - descr: 个人日记      name: 分类4      cover: https://npm.elemecdn.com/akilar-candyassets/image/cover4.webp    - descr: 诗词歌赋      name: 分类5      cover: https://npm.elemecdn.com/akilar-candyassets/image/cover5.webp    - descr: 杂谈教程      name: 分类6      cover: https://npm.elemecdn.com/akilar-candyassets/image/cover6.webp  custom_css: https://cdn.jsdelivr.net/npm/hexo-butterfly-categories-card-gabriel/lib/categorybar.css\n\n参数释义\n\n\n\n参数\n备选值&#x2F;类型\n释义\n\n\n\npriority\nnumber\n【可选】过滤器优先级，数值越小，执行越早，默认为10，选填\n\n\nenable\ntrue&#x2F;false\n【必选】控制开关\n\n\nenable_page\npath&#x2F;all\n【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’&#x2F;‘,分类页面就填’&#x2F;categories&#x2F;‘。若要应用于所有页面，就填’all’，默认为’&#x2F;‘\n\n\nlayout.type\nid&#x2F;class\n【可选】挂载容器类型，填写id或class，不填则默认为id\n\n\nlayout.name\ntext\n【必选】挂载容器名称\n\n\nlayout.index\n0和正整数\n【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位\n\n\ncolumn\nodd&#x2F;even\n【可选】显示列数，考虑到比例问题，只提供3列和4列，odd为3列， even为4列\n\n\nrow\nnumber\n【可选】显示行数，默认两行，超过行数切换为滚动显示\n\n\nmessage.name\ntext\n分类名称,需要和你自己的文章分类一一对应。\n\n\nmessage.descr\ntext\n分类描述,需要和你自己的文章分类一一对应。\n\n\nmessage.cover\nurl\n分类背景,需要和你自己的文章分类一一对应。\n\n\ncustom_css\nurl\n【可选】自定义样式，会替换默认的css链接，可以下载文档给出的cdn链接后自主修改\n\n \n\n","categories":["网络","Github","Github Page","Hexo"]},{"title":"美区Apple ID注册","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Phone/Iphone/%E7%BE%8E%E5%8C%BAApple%20ID%E6%B3%A8%E5%86%8C/","content":"\n参考链接: https://iyuantiao.com/fenxiangfuli/jiaocheng/tiktok-3.html\n\n\n相信很多小伙伴不知道App Store不同地区里面的app也是不一样的，以下为中国App Store和美国App Srore 的对比。\n\n电脑上注册Apple ID的步骤为例，手机上大同小异\n1、打开苹果的官网： https://appleid.apple.com/account 点击创建您的ID\n\n2、填写姓氏和名字【英文或者拼音】、国家或地区先选中国大陆，出生日期最好选择大于18岁以上。邮箱填写QQ、126、163邮箱或者gmail邮箱都可以的。\n\n3、填写手机号，验证方式选择短信验证，去掉公告前面的两个勾，填写字符，点击继续。\n\n4、第2步里填写的邮箱里去找一下验证码，填进去，点击继续。\n\n5、这时候会收到手机验证码，填进去点击继续\n\n6、出现这个介面后就注册成功了，点击编辑把国家和地区改成美国\n\n7、国家和地区选择美国\n\n8、点击——继续更新\n\n9、付款方式选择“无”\n\n10、名字和楼号可以随便填，其它的要用美国真实地址填写\n如果没有美国真实地址，获取方式可以点击参考&gt;&gt;美国，澳大利亚等地址生成器|个人信息生成、街道地址生成&lt;&lt;\n\n11、送货地址，姓氏，名字可以随便填，公司可不填，下面的部分要和上面账单寄送地址一样，国家和地区要选择美国。\n\n12、往上拉，右上角点击存储\n\n13、现在国家和地区已经变成美国了\n\n14、打开苹果手机的app store 如果登录的有账号，就退出来。登录刚刚注册好的美区Apple ID\n\n15、会发送一个验证码到注册时填写的手机号上，填入验证码\n\n16、验证通过后点击——Review\n\n17、打开开关(Agree to Terms and Conditions)，点击next\n\n18、在点击Next\n\n19、点击继续\n\n20、出现这个介面后点击OK\n\n\n21、点击右下角search搜索一下\n\n22、这里就搜一下抖音国际版——tiktok,是可以搜到的。中国区的苹果ID是搜不到的，相信这个大家都知道。\n\n23、然后在搜一下大家经常科学上网用到的小火箭——shadowsocks\n\n当然了，这款软件是付费的，如果需要的话可以到某宝买个礼品卡\n24、点击下面的apps，点击头像，点击礼品卡\n\n25、到万能的某宝上搜——Apple 礼品卡\n\n温馨提示：如果第一次登录美区Apple ID,没跳转到美国地区，可以退出重新登录一下。\n总结：注册一个中国区的Apple ID，然后将中国区的苹果ID账号改为美国地区即可。\n","categories":["系统","Phone","Iphone"]},{"title":"黑苹果硬件配置","url":"/2024/07/11/%E7%B3%BB%E7%BB%9F/Mac/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E9%BB%91%E8%8B%B9%E6%9E%9C%E7%A1%AC%E4%BB%B6%E9%85%8D%E7%BD%AE/","content":"\n配置一\n  \n\n\n\n\n\n\n\n\n部件\n选品名称\n尺寸\n功率\n淘宝价格&#x2F;链接\n京东价格\n闲鱼\n价格（元）\n\n\n\ncpu\n英特尔  i7 10700K\n37.5×37.5mm\n125W\n1790\n2300\n\n1780.00\n\n\n主板\n微星  Z490-A PRO\n30.5×24.4cm\n35W\n522\n1589\n\n539\n\n\n显卡\n蓝宝石  RX 6600XT 白金 OC 8G\n240x120x45mm\n160W\n1348\n2300\n\n1908\n\n\n内存\n金士顿32g  3600 单条\n\n20W\n600\n\n\n569\n\n\n硬盘\n西部数据黑盘 sn750 500G2    2392  西数机械硬盘1T               439\n80x22x2mm\n10W\n478\n\n\n259\n\n\n机箱\n乔思伯U4  PLUS\n440 x  210 x 483mm\n\n260\n\n\n879\n\n\n电源\n金牌巨龙  GW-6800电竞版(600W)\n15014086mm\n700W\n359\n\n\n350\n\n\nCPU散热器\n九州风神大霜塔V5\n129136157mm\n200W\n190\n\n\n\n\n\n机箱散热\n利民c12c台式电脑机箱散热\n12012025mm\n\n88\n\n\n\n\n\n\n\n\n\n5535\n\n\n6280\n\n\nCPU英特尔 i7 10700K⏩淘宝链接\n\ni7-10700K 是英特尔第十代酷睿系列的处理器，采用了14纳米工艺，具有8个物理核心和16个线程，主频为3.8 GHz，可加速至最大5.1 GHz。它还配备了16MB的L3缓存，以及内置的UHD Graphics 630显卡。\n总体来说，i7-10700K 是一款性能强劲的处理器，适用于多任务处理和高性能计算。它可以处理大量数据、多线程应用和高负载游戏。不过需要注意的是，这款处理器的功耗相对较高，需要搭配散热器进行散热，同时需要一块支持Z490芯片组的主板来发挥最大性能。\n以下是i7-10700K的详细参数：\n\n物理核心数：8\n线程数：16\n主频：3.8 GHz\n最大睿频：5.1 GHz\n缓存：16 MB L3\n集成显卡：Intel UHD Graphics 630\n最大支持内存频率：DDR4-2933\n支持的最大PCIe通道数：16\n支持的最大存储器数目：2\nTDP：125 W\n制造工艺：14 nm\n套接字：LGA1200\n\n最大支持内存频率指的是i7-10700K处理器所支持的内存速度的最高值，即在主板和内存组合支持的情况下，可以使用的最高内存频率。对于i7-10700K，最大支持内存频率为DDR4-2933，这意味着它可以使用支持DDR4-2933及以下频率的内存模块，但如果使用超过该频率的内存模块，则处理器可能无法正常工作，甚至会出现系统稳定性问题。所以在选择内存时，应该选择与i7-10700K处理器相匹配的内存模块，以发挥最佳性能。\n\nCPU风扇九州风神大霜塔V5⏩淘宝链接\n\n以下是九州风神大霜塔V5的详细参数：\n\n尺寸：140mm x 165mm x 165mm（宽 x 长 x     高）\n散热器材质：铝合金 + 镍铜合金\n风扇尺寸：120mm x 120mm x 25mm\n风扇转速：700-1500RPM\n噪音等级：≤26.1dB(A)\n风量：51.15CFM\n散热器重量：1096g\n支持CPU类型：Intel LGA     775&#x2F;115x&#x2F;1366&#x2F;1200&#x2F;2066；AMD AM2&#x2F;AM2+&#x2F;AM3&#x2F;AM3+&#x2F;AM4&#x2F;FM1&#x2F;FM2&#x2F;FM2+\n功率：TDP≤250W\n\n\n主板微星 Z490-A PRO⏩淘宝链接\n\n微星 Z490-A PRO是一款主打性价比的Intel Z490系列主板，适用于第10代Intel Core处理器。下面是该主板的主要规格和特点：\n\nCPU支持：适用于第10代Intel Core处理器，包括Intel     Core i9&#x2F;i7&#x2F;i5&#x2F;i3&#x2F;Pentium&#x2F;Celeron处理器。\n内存支持：支持双通道DDR4内存，最高支持128GB内存容量，支持频率达到4800MHz。\n扩展插槽：提供1个PCI-E 3.0 x16插槽、1个PCI-E     3.0 x16插槽（x4模式）、3个PCI-E 3.0 x1插槽。\n存储接口：提供6个SATA     6Gb&#x2F;s接口和2个M.2接口，支持Intel Optane存储技术。\n网络支持：提供Realtek 8111H千兆以太网接口。\n后置I&#x2F;O接口：提供PS&#x2F;2键盘&#x2F;鼠标接口、2个USB     2.0接口、4个USB 3.2 Gen     1接口、1个HDMI接口、1个DisplayPort接口、1个DVI-D接口、1个RJ45千兆网口、6个音频接口。\n其他特点：支持Intel Turbo Boost技术、Intel     Optane内存技术、Intel Rapid Storage技术、Intel Extreme Memory Profile（XMP）等。\n\n总之，微星 Z490-A PRO主板提供了稳定的性能、丰富的扩展和存储选项、良好的网络连接和音频支持等功能，是一款性价比较高的主板。\n\n显卡蓝宝石 RX 6600XT 白金 OC 8G ⏩京东链接⏩淘宝链接\n\n蓝宝石 RX 6600XT 白金 OC 8G是一款AMD显卡，以下是该显卡的主要技术参数：\n\n显卡核心：AMD Radeon RX 6600 XT\nGPU架构：AMD RDNA 2\n制造工艺：7nm\n流处理器：2048个\n像素填充率：105.0 GP&#x2F;s\n纹理填充率：330.2 GT&#x2F;s\n显存类型：GDDR6\n显存容量：8GB\n显存频率：16 Gbps\n显存位宽：128-bit\n核心时钟：2359 MHz\n游戏时钟：2170 MHz\n加速时钟：2589 MHz\n输出接口：HDMI 2.1、DisplayPort 1.4a\n\n\n内存金士顿32g 3600⏩淘宝链接\n\nKingston HyperX Fury DDR4 32GB 3600MHz 内存条是一款性价比很高的产品，它的主频较高，具备一定的超频潜力，能够提供出色的性能表现。同时，它还采用了比较高端的散热设计，能够有效地降低温度，提高稳定性，延长使用寿命。总的来说，如果你需要一款价格实惠、性能出色、稳定性高的内存条，这款产品是不错的选择。\nKingston HyperX Predator DDR4 3600MHz 32GB Kit (HX436C17PB3K2&#x2F;32)。\n这款内存条的主要参数如下：\n\n容量：32GB\n频率：3600MHz\n类型：DDR4\n时序：CAS延迟为17\n电压：1.35V\n\n值得一提的是，内存条的性能不仅取决于容量和频率，还受到时序和品牌的影响，因此具体型号可能有所不同。\n\n硬盘西部数据黑盘 sn750⏩淘宝链接\n\n西部数据黑盘 SN750是一款高性能的M.2 NVMe固态硬盘，采用西部数据的第二代3D NAND闪存技术，并配备了高速的PCIe Gen3 x4接口，支持NVMe 1.3协议。它具有高速的读写性能和低延迟，可用于高性能计算机系统和游戏设备中。\n以下是该产品的主要规格：\n\n存储容量：250GB、500GB、1TB、2TB\n读取速度：最高可达3,470MB&#x2F;s\n写入速度：最高可达3,000MB&#x2F;s\n随机读取IOPS：最高可达420,000\n随机写入IOPS：最高可达380,000\n芯片类型：西部数据第二代3D NAND闪存\n接口类型：PCIe Gen3 x4，支持NVMe 1.3协议\n尺寸：80mm x 22mm x 2.38mm\n重量：约6.5g\n保修期限：5年\n\n500GB尺寸：80mm x 22mm x 2.38mm\n\n电源金牌巨龙 GW-6800电竞版⏩淘宝链接\n\n金牌巨龙 GW-6800电竞版(600W) 的参数如下：\n\n最大输出功率：600W\n80PLUS认证级别：金牌\n输入电压范围：100V-240V\n输入电流：8A-4A\n额定频率：50Hz-60Hz\n电源尺寸：150mm x 140mm x 86mm\n电源重量：1.9kg\n风扇规格：12cm\n接口类型：20+4PIN主板电源接口、8PIN CPU     12V电源接口、6+2PIN显卡电源接口、SATA电源接口、IDE电源接口\n\n\n机箱散热扇利民c12c⏩淘宝链接\n\n品牌：Thermalright型号：TL-C12成色：全新\n风扇尺寸：120120925mm\n\n机箱乔思伯 U4 PLUS⏩淘宝链接\n\n乔思伯 U4 PLUS 机箱的主要规格如下：\n\n尺寸：440 x 210 x 483mm（长 x 宽 x 高）\n重量：5.8kg\n适用主板：ATX、Micro-ATX、Mini-ITX\n扩展槽位：7个PCI插槽\n前置接口：2 x USB 2.0、2 x USB 3.0、1 x     麦克风接口、1 x 音频输出接口\n硬盘位：2 x 3.5英寸、2 x 2.5英寸\n散热系统：支持120&#x2F;140mm水冷排，最大支持高度160mm的CPU风冷\n\n其他特性：透明侧板、内部灯光效果、支持多种尺寸显卡、背线管理设计等\n\n配置二\n  \n\n\n\n\n\n\n\n\n部件\n选品名称\n价格（元）\n\n\n\ncpu\n英特尔  i7 11700K\n1780.00\n\n\n主板\n微星  Z590-A PRO\n539\n\n\n显卡\n3060ti\n1908\n\n\n内存\n金士顿32g  3600 单条\n569\n\n\n硬盘\n西部数据黑盘  sn750 500G\n299\n\n\n机箱\n乔思伯U5  PLUS\n879\n\n\n电源\n金牌巨龙  GW-6800电竞版(600W)\n350\n\n\n\n\n6324\n\n\n","categories":["系统","Mac","黑苹果"]},{"title":"Alist","url":"/2024/07/09/%E7%BD%91%E7%BB%9C/Github/Github%20Software/Alist/","content":"\n \n  \n\n\n\n\nAlist简介Alist是一款支持多种存储的目录文件列表程序，支持 web 浏览与 webdav，后端基于gin，前端使用react。\n\n添加各种网盘，请移步官方文档。Alist V3.0开源地址： https://github.com/alist-org/alistAlist V2.0技术文档： https://alist-doc.nn.ci/docs/intro/Alist V3.0技术文档： https://alist.nn.ci/zh/guide/演示站点： https://al.nn.ci/演示站点 :https://cloud.eelx.cn/i \n\nAlist-宝塔数据库无需创建，PHP版本可随意，纯静态也可以。\n修改配置文件修改配置文件就不需要设置反向代理了,程序默认监听5244端口，nginx在网站的配置文件的server字段中加入：\nlocation / &#123;     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;     proxy_set_header Host $http_host;     proxy_set_header X-Real-IP $remote_addr;     proxy_set_header Range $http_range;     proxy_set_header If-Range $http_if_range;     proxy_redirect off;     proxy_pass http://127.0.0.1:5244;     # 上传的最大文件尺寸     client_max_body_size 20000m; &#125;\n\n如果你使用宝塔，请务必删除以下默认配置：\nlocation ~ ^/(.user.ini.htaccess.git.svn.projectLICENSEREADME.mdlocation ~ .*.(gifjpgjpegpngbmpswf)$location ~ .*.(jscss)?$\n\n修改后的配置文件：\nserver&#123;    listen 80;listen 443 ssl http2;    server_name alist.xiaoming.cf;    index index.php index.html index.htm default.php default.htm default.html;    root /www/wwwroot/alist.xiaoming.cf;#SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则    #error_page 404/404.html;    #HTTP_TO_HTTPS_START    if ($server_port !~ 443)&#123;        rewrite ^(/.*)$ https://$host$1 permanent;    &#125;    #HTTP_TO_HTTPS_END    ssl_certificate    /www/server/panel/vhost/cert/alist.xiaoming.cf/fullchain.pem;    ssl_certificate_key    /www/server/panel/vhost/cert/alist.xiaoming.cf/privkey.pem;    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;    ssl_prefer_server_ciphers on;    ssl_session_cache shared:SSL:10m;    ssl_session_timeout 10m;    add_header Strict-Transport-Security &quot;max-age=31536000&quot;;    error_page 497  https://$host$request_uri;#SSL-END#ERROR-PAGE-START  错误页配置，可以注释、删除或修改    #error_page 404 /404.html;    #error_page 502 /502.html;    #ERROR-PAGE-END#PHP-INFO-START  PHP引用配置，可以注释或修改    include enable-php-00.conf;    #PHP-INFO-END#REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效    include /www/server/panel/vhost/rewrite/alist.xiaoming.cf.conf;    #REWRITE-END#禁止访问的文件或目录    location ~ ^/(\\.user.ini\\.htaccess\\.git\\.svn\\.projectLICENSEREADME.md)    &#123;        return 404;    &#125;#一键申请SSL证书验证目录相关设置    location ~ \\.well-known&#123;        allow all;    &#125;location / &#123;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    proxy_set_header Host $http_host;    proxy_set_header X-Real-IP $remote_addr;    proxy_set_header Range $http_range;    proxy_set_header If-Range $http_if_range;    proxy_redirect off;    proxy_pass http://127.0.0.1:5244;    # 上传的最大文件尺寸    client_max_body_size 20000m;&#125;    access_log  /www/wwwlogs/alist.xiaoming.cf.log;    error_log  /www/wwwlogs/alist.xiaoming.cf.error.log;&#125;\n\n \n给 Alist 添加反向代理点击宝塔→网站菜单→对应网站设置→反向代理→添加反向代理 点击开启代理，代理名称随意，目标URL设置为：http://127.0.0.1:5244 其余保持默认即可，点击提交按钮。\n安装 Alist这里我们复制一下根目录地址，后面安装 Alist 程序需要用到。根目录地址为：&#x2F;www&#x2F;wwwroot&#x2F;xiaoming.cf 接下来，通过 ssh 连接该服务器，在官方给出的基础上，末尾增加指定目录安装，添加刚刚得到的根目录地址，如下示例: install 为安装，update 为升级，uninstall 为卸载\ncurl -fsSL &quot; https://nn.ci/alist.sh&quot;  bash -s install /www/wwwroot/alist.xiaoming.cfcurl -fsSL &quot; https://nn.ci/alist.sh&quot;  bash -s update /www/wwwroot/alist.xiaoming.cfcurl -fsSL &quot; https://nn.ci/alist.sh&quot;  bash -s uninstall /www/wwwroot/alist.xiaoming.cf\n\n  Alist 安装成功！\n访问地址：http://YOUR_IP:5244/配置文件：/www/wwwroot/cloud.lixin.ee/alist/data/config.json初始管理密码：WHESwM70查看状态：systemctl status alist启动服务：systemctl start alist重启服务：systemctl restart alist停止服务：systemctl stop alist\n\n  温馨提示：如果端口无法正常访问，请检查 服务器安全组、本机防火墙、Alist状态 这里我们要记住 Alist 初始管理密码。如果是用阿里云、腾讯云、华为云之类的服务器，就需要在服务器控制台打开 5244 端口，同时在宝塔→安全里面也对 5244 端口放行一下。 其他终端管理命令:\n启动: systemctl start alist关闭: systemctl stop alist自启: systemctl enable alist状态: systemctl status alist重启: systemctl restart alist\n\n输入你的前端域名就可以访问，这里的密码就是最开始通过 ssh 安装成功显示的密码\nAlist-Windows\n已剪辑自: https://zhuanlan.zhihu.com/p/586155507\n\n官网项目Windows版本下载：Releases · alist-org&#x2F;alist​解压文件​\n使用CMD进行初始化，第一次初始化会显示密码​运行程序.\\alist.exe server获得管理员信息和密码.\\alist.exe admin\n\n第一次运行会提示密码，为图红色的部分，默认账户：admin​ 默认访问网址:127.0.0.1:5244​\n使用脚本无窗口开机启动​在AList.exe所在的目录下，创建一个txt文件，将后缀名改.vbs输入代码​\nSet ws = CreateObject(&quot;Wscript.Shell&quot;)ws.run &quot;cmd /c .\\alist.exe server&quot;,vbhide\n\n创建快捷方式，在运行输入​shell:startup​​，添加到Windows启动文件夹，当然你也可以使用任务计划， 添加网盘储存，当然也可以使用本地存储 官方说明文档：Alist文档 使用WebDAV挂载需要在路径添加&#x2F;dav​\nAlist-Docker\n几年之前就应该折腾过网盘的文件列表程序，简单的说，就是把各种网盘里的文件以文件列表的形式在网站展示出来。原来搞那个只是为了装X，别人有我也就有要。后来没有多长时间，就关掉不用了。 Alist，一个超级牛X的网盘文件列表程序，支持目前主流的近二十种网盘。有兴趣了解的请移步：官方文档。 今天想起来再来折腾Alist的原因，想做文件列表还不是太强烈，最主要的就是Alist可以配合大名鼎鼎的RaiDrive把阿里云盘等各种网盘直接挂载到本地使用。 挂载各种网盘到本地，才是折腾的目的。那Alist的安装非常简单，不仅可VPS上安装使用，在本地win下也可以直接安装。我这里的方法是在宝塔面板下，利用Docker来部署Alist，不需要执行远程命令，完全图形化、保姆级。\n\n在Docker下拉取Alist镜像。具体步骤：Docker→镜像→从仓库中拉取→输入“xhofe&#x2F;alist”\n增加容器Docker→增加容器→容器端口和服务器端口用“5244”，挂载卷服务器目录和容器目录分别填写“&#x2F;etc&#x2F;alist&#x2F;”和“&#x2F;opt&#x2F;alist&#x2F;data&#x2F;”。这两个操作不要忘了点击右面“+”，这样才可以写入。\n开放5244端口这里不再多述。\n初始化Alist默认密码当你完成以上所有步骤，虽然程序是部署好了，但是密码还没有初始化，这个时候需要打开建好的Alist容器的“终端”，执行“.&#x2F;alist password”，这个时候记下初始化的密码，到后台把密码修改即可。 也可以远程命令： docker exec -it alist ./alist admin 在以后如果忘记密码，同样也是执行这样的操作就可以查看到。 到目前为止，Alist就完全部署好了，怎么添加网盘可以自己看说明文档。后续还会再来一篇配合RaiDrive挂载网盘到本地的教程，这个才是最终的目的。\n","categories":["Github","Github Software"]},{"title":"SSH工具","url":"/2023/11/27/%E7%BD%91%E7%BB%9C/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%B7%A5%E5%85%B7/SSH%E5%B7%A5%E5%85%B7/","content":"\n\n\n\nfinalshell\nshell服务器连接工具\n🧰\n无痕哥\n\n\n\nNxShell\nshell服务器连接工具\n🧰\n芊芊经典\n\n\nFinalShell\nFinalShell是一款付费的集Linux远程连接工具、FTP工具、服务器网络管理软件于一体的SSH客户端软件，还是功能强大的开发及运维工具，充分满足开发及运维需求。特色功能包括：云端同步、免费海外服务器、远程桌面加速、ssh加速、本地化命令输入框、支持自动补全、命令历史、自定义命令参数https://www.123pan.com/s/5a5DVv-nL90v.html)\n","categories":["网络","服务器","工具"]}]